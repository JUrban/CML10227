fof('thm.pegSound.peg_eval_choicel_NIL', axiom, ![V_27B_27,V_27A_27,V_27C_27]: ![V_27x_27, V_27i_7c48_7c_27, V_27G_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),V_27x_27)))) <=> s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),V_27x_27) = s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),'const.option.NONE_0'))).
fof('thm.pegSound.peg_eval_choicel_CONS', axiom, ![V_27C_27,V_27A_27,V_27B_27]: ![V_27t_27, V_27i_7c48_7c_27, V_27h_27, V_27G_27, V_27x_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.list.CONS_2'(s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27h_27),s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),V_27t_27))))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27)))) <=> ((p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27h_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27)))) & ~ (s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27) = s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.NONE_0'))) | (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27h_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.NONE_0')))) & p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),V_27t_27))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27)))))))).
fof('thm.pegSound.peg_eval_seql_NIL', axiom, ![V_27B_27,V_27A_27,V_27C_27]: ![V_27x_27, V_27i_7c48_7c_27, V_27f_27, V_27G_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),'const.cmlPEG.seql_2'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.list.NIL_0'),s('fun'('type.list.list'(V_27C_27),'type.list.list'(V_27C_27)),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),V_27x_27)))) <=> s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),V_27x_27) = s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.list.list'(V_27C_27),'happ'(s('fun'('type.list.list'(V_27C_27),'type.list.list'(V_27C_27)),V_27f_27),s('type.list.list'(V_27C_27),'const.list.NIL_0'))))))))).
fof('thm.pegSound.peg_eval_try', axiom, ![V_27C_27,V_27A_27,V_27B_27]: ![V_27s_27, V_27i_7c48_7c_27, V_27G_27, V_27x_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),'const.cmlPEG.try_1'(s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27s_27))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27)))) <=> ((p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27s_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.NONE_0')))) & s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27) = s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.list.list'(V_27B_27),'const.list.NIL_0')))))) | ?[V_27i_27, V_27r_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27s_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_27),s('type.list.list'(V_27B_27),V_27r_27)))))))) & s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27) = s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_27),s('type.list.list'(V_27B_27),V_27r_27))))))))).
fof('thm.pegSound.peg_eval_seql_CONS', axiom, ![V_27C_27,V_27A_27,V_27B_27]: ![V_27t_27, V_27i_7c48_7c_27, V_27h_27, V_27f_27, V_27G_27, V_27x_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),'const.cmlPEG.seql_2'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.list.CONS_2'(s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27h_27),s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),V_27t_27))),s('fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27)),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27)))) <=> ((p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27h_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.NONE_0')))) & s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27) = s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.NONE_0')) | (?[V_27rh_27, V_27i_7c49_7c_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27h_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c49_7c_27),s('type.list.list'(V_27B_27),V_27rh_27)))))))) & (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c49_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),'const.cmlPEG.seql_2'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),V_27t_27),s('fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27)),'const.combin.I_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.NONE_0')))) & s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27) = s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.NONE_0'))) | ?[V_27rh_27, V_27i_7c49_7c_27, V_27i_27, V_27rt_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27h_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c49_7c_27),s('type.list.list'(V_27B_27),V_27rh_27)))))))) & (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c49_7c_27),s('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27)),'const.cmlPEG.seql_2'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27C_27,'type.list.list'(V_27B_27))),V_27t_27),s('fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27)),'const.combin.I_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_27),s('type.list.list'(V_27B_27),V_27rt_27)))))))) & s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),V_27x_27) = s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_27),s('type.list.list'(V_27B_27),'happ'(s('fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27)),V_27f_27),s('type.list.list'(V_27B_27),'const.list.APPEND_2'(s('type.list.list'(V_27B_27),V_27rh_27),s('type.list.list'(V_27B_27),V_27rt_27))))))))))))))).
fof('thm.pegSound.peg_eval_choicel_SING|split|0', axiom, ![V_27B_27,V_27A_27,V_27C_27]: ![V_27x_27, V_27sym_27, V_27i_7c48_7c_27, V_27G_27]: s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.list.CONS_2'(s('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27sym_27),s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27)),V_27x_27))))) = s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27sym_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27)),V_27x_27)))))).
fof('thm.pegSound.peg_eval_choicel_SING|split|1', axiom, ![V_27B_27,V_27A_27,V_27C_27]: ![V_27sym_27, V_27i_7c48_7c_27, V_27G_27]: s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.list.CONS_2'(s('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27sym_27),s('type.list.list'('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),'const.option.NONE_0'))) = s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27))),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,'type.list.list'(V_27C_27)),V_27sym_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27C_27))),'const.option.NONE_0')))).
fof('thm.pegSound.not_peg|48|_LENGTH_decreases', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27s_27, V_27r_27, V_27i_7c48_7c_27, V_27i_27, V_27G_27]: (~ (p(s('bool','const.peg.peg|48|_2'(s('type.peg.peg'(V_27A_27,V_27B_27,V_27C_27),V_27G_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,V_27C_27),V_27s_27))))) => (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,V_27C_27),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,V_27C_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,V_27C_27),V_27s_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),V_27C_27)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),V_27C_27),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_27),s(V_27C_27,V_27r_27)))))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27i_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27))))))))).
fof('thm.pegSound.peg_eval_TypeDec_wrongtok', axiom, ![V_27x_27, V_27tk_27, V_27i_27, V_27f_27]: (~ (s('type.tokens.token',V_27tk_27) = s('type.tokens.token','const.tokens.DatatypeT_0')) => ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),'const.list.CONS_2'(s('type.tokens.token',V_27tk_27),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeDec_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27x_27))))))))).
fof('thm.pegSound.peg_eval_TypeAbbrevDec_wrongtok', axiom, ![V_27x_27, V_27tk_27, V_27i_27, V_27f_27]: (~ (s('type.tokens.token',V_27tk_27) = s('type.tokens.token','const.tokens.TypeT_0')) => ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),'const.list.CONS_2'(s('type.tokens.token',V_27tk_27),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeAbbrevDec_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27x_27))))))))).
fof('thm.pegSound.peg_eval_LetDec_wrongtok', axiom, ![V_27x_27, V_27i_27, V_27f_27]: ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),'const.list.CONS_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27x_27)))))))).
fof('thm.pegSound.peg_eval_nUQConstructor_wrongtok', axiom, ![V_27x_27, V_27t_27, V_27i_27, V_27f_27]: (![V_27s_27]: ~ (s('type.tokens.token',V_27t_27) = s('type.tokens.token','const.tokens.AlphaT_1'(s('type.list.list'('type.string.char'),V_27s_27)))) => ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),'const.list.CONS_2'(s('type.tokens.token',V_27t_27),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27x_27))))))))).
fof('thm.pegSound.peg_eval_nConstructor_wrongtok', axiom, ![V_27x_27, V_27t_27, V_27i_27, V_27f_27]: ((![V_27s_27]: ~ (s('type.tokens.token',V_27t_27) = s('type.tokens.token','const.tokens.AlphaT_1'(s('type.list.list'('type.string.char'),V_27s_27)))) & ![V_27s_7c49_7c_27, V_27s2_27]: ~ (s('type.tokens.token',V_27t_27) = s('type.tokens.token','const.tokens.LongidT_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27))))) => ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),'const.list.CONS_2'(s('type.tokens.token',V_27t_27),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27x_27))))))))).
fof('thm.pegSound.peg_eval_nV_wrongtok', axiom, ![V_27x_27, V_27t_27, V_27i_27, V_27f_27]: ((![V_27s_27]: ~ (s('type.tokens.token',V_27t_27) = s('type.tokens.token','const.tokens.AlphaT_1'(s('type.list.list'('type.string.char'),V_27s_27)))) & ![V_27s_27]: ~ (s('type.tokens.token',V_27t_27) = s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),V_27s_27))))) => ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),'const.list.CONS_2'(s('type.tokens.token',V_27t_27),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27x_27))))))))).
fof('thm.pegSound.peg_eval_nFQV_wrongtok', axiom, ![V_27x_27, V_27t_27, V_27i_27, V_27f_27]: ((![V_27s_27]: ~ (s('type.tokens.token',V_27t_27) = s('type.tokens.token','const.tokens.AlphaT_1'(s('type.list.list'('type.string.char'),V_27s_27)))) & (![V_27s_27]: ~ (s('type.tokens.token',V_27t_27) = s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),V_27s_27)))) & ![V_27s_7c49_7c_27, V_27s2_27]: ~ (s('type.tokens.token',V_27t_27) = s('type.tokens.token','const.tokens.LongidT_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27)))))) => ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),'const.list.CONS_2'(s('type.tokens.token',V_27t_27),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27x_27))))))))).
fof('thm.pegSound.peg_eval_rpt_never_NONE', axiom, ![V_27B_27,V_27A_27,V_27C_27]: ![V_27sym_27, V_27i_27, V_27f_27, V_27G_27]: ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,V_27C_27),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,V_27C_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,V_27C_27),'const.peg.rpt_2'(s('type.peg.pegsym'(V_27A_27,V_27B_27,V_27C_27),V_27sym_27),s('fun'('type.list.list'(V_27C_27),V_27C_27),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),V_27C_27)),'const.option.NONE_0')))))).
fof('ARITY_0_1_const.pegSound.pegsym_to_sym', axiom, ![VV0]: s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.pegSound.pegsym_to_sym_0'),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),VV0))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),VV0)))).
fof('thm.pegSound.pegsym_to_sym_primitive_def', axiom, s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.pegSound.pegsym_to_sym_0') = s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.relation.WFREC_2'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool')),'const.min.@_1'(s('fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x0_1'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x1x0x0x0x0x0x0x0x0_9'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'fun'('fun'('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'fun'('fun'('fun'('type.tokens.token','bool'),'fun'('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'fun'('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')))),'fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.sum.sum'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')))),'fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.list.list'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')))))))))),'const.peg.pegsym_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0_1'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'happ'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.combin.I_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0_1'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'happ'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.combin.I_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('fun'('type.tokens.token','bool'),'fun'('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.combin.I_0'),s('fun'('fun'('type.tokens.token','bool'),'fun'('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x00x01x10x00_4'(s('fun'('bool','fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')))),'const.bool.COND_0'),s('fun'('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'_dst_x1x0_2'(s('fun'('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool')),'=_0'),s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.mktokLf_0'))),s('fun'('fun'('type.tokens.token','bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.tokens.token','type.pair.prod'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.pred_set.GSPEC_0'),s('fun'('fun'('type.tokens.token','bool'),'fun'('type.tokens.token','type.pair.prod'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x00x01x11_3'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('bool','type.pair.prod'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'const.pair.,_0'),s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('fun'('fun'('type.tokens.token','bool'),'fun'('type.tokens.token','bool')),'_i_0_0'))))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x00x10_2'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0x1x0_3'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'const.pred_set.INSERT_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.NT_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')))),'_dst_x0_1'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x0_1'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0_1'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'happ'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.combin.I_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0'))))))))),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.sum.sum'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')))),'_dst_x0_1'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.sum.sum'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x0_1'(s('fun'('fun'('type.sum.sum'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0_1'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'happ'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.combin.I_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0'))))))))),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.list.list'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x0_1'(s('fun'('fun'('type.list.list'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0_1'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'happ'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.combin.I_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0'))))))),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0_1'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'happ'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'const.combin.I_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0')))))))))))))).
fof('thm.pegSound.pegSound_|49|6_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.empty_1'(s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27v_27))) | (?[V_27v_7c49_7c_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.any_1'(s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_27))) | (?[V_27P_27, V_27f_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.tok_2'(s('fun'('type.tokens.token','bool'),V_27P_27),s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))) | (?[V_27N_27, V_27f_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27N_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))) | (?[V_27v6_27, V_27v7_27, V_27v8_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.seq_3'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v6_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v7_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),V_27v8_27))) | (?[V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.choice_3'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v9_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_7c48_7c_27),s('fun'('type.sum.sum'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.rpt_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c2_27),s('fun'('type.list.list'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c3_27))) | ?[V_27v_7c49_7c4_27, V_27v_7c49_7c5_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.not_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c4_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27v_7c49_7c5_27)))))))))) => (?[V_27P_27, V_27f_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.tok_2'(s('fun'('type.tokens.token','bool'),V_27P_27),s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))) | (?[V_27N_27, V_27f_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27N_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))) | (?[V_27v_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.empty_1'(s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27v_27))) | (?[V_27v_7c49_7c_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.any_1'(s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_27))) | (?[V_27v6_27, V_27v7_27, V_27v8_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.seq_3'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v6_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v7_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),V_27v8_27))) | (?[V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.choice_3'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v9_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_7c48_7c_27),s('fun'('type.sum.sum'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.rpt_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c2_27),s('fun'('type.list.list'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c3_27))) | ?[V_27v_7c49_7c4_27, V_27v_7c49_7c5_27]: s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27a_27) = s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.not_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c4_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27v_7c49_7c5_27)))))))))))).
fof('thm.pegSound.pegsym_to_sym_ind', axiom, ![V_27P_7c39_7c_27]: ((![V_27P_27, V_27f_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.tok_2'(s('fun'('type.tokens.token','bool'),V_27P_27),s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27)))))) & (![V_27N_27, V_27f_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27N_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27)))))) & (![V_27v_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.empty_1'(s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27v_27)))))) & (![V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.any_1'(s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_27)))))) & (![V_27v6_27, V_27v7_27, V_27v8_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.seq_3'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v6_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v7_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),V_27v8_27)))))) & (![V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.choice_3'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v9_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_7c48_7c_27),s('fun'('type.sum.sum'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_7c49_7c_27)))))) & (![V_27v_7c49_7c2_27, V_27v_7c49_7c3_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.rpt_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c2_27),s('fun'('type.list.list'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c3_27)))))) & ![V_27v_7c49_7c4_27, V_27v_7c49_7c5_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.not_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c4_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27v_7c49_7c5_27))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),V_27P_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_27)))))).
fof('thm.pegSound.pegsym_to_sym_def|split|0', axiom, ![V_27f_7c39_7c_27, V_27P_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_7c39_7c_27) = s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.mktokLf_0')) & s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.tok_2'(s('fun'('type.tokens.token','bool'),V_27P_27),s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_7c39_7c_27))))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.bool.COND_3'(s('bool',Vv),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.tokens.token','type.pair.prod'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x0x1x1_3'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('bool','type.pair.prod'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'))),'const.pair.,_0'),s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('fun'('type.tokens.token','bool'),V_27P_27))))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0'))))).
fof('thm.pegSound.pegsym_to_sym_def|split|1', axiom, ![V_27f_27, V_27N_27]: s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27N_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.INSERT_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27N_27))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0')))).
fof('thm.pegSound.pegsym_to_sym_def|split|2', axiom, ![V_27v_27]: s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.empty_1'(s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27v_27))))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.pegSound.pegsym_to_sym_def|split|3', axiom, ![V_27v_7c49_7c_27]: s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.any_1'(s('fun'('type.tokens.token','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_27))))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.pegSound.pegsym_to_sym_def|split|4', axiom, ![V_27v8_27, V_27v7_27, V_27v6_27]: s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.seq_3'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v6_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v7_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),V_27v8_27))))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.pegSound.pegsym_to_sym_def|split|5', axiom, ![V_27v9_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.choice_3'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v9_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_7c48_7c_27),s('fun'('type.sum.sum'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c_7c49_7c_27))))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.pegSound.pegsym_to_sym_def|split|6', axiom, ![V_27v_7c49_7c3_27, V_27v_7c49_7c2_27]: s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.rpt_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c2_27),s('fun'('type.list.list'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c3_27))))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.pegSound.pegsym_to_sym_def|split|7', axiom, ![V_27v_7c49_7c5_27, V_27v_7c49_7c4_27]: s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.not_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27v_7c49_7c4_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27v_7c49_7c5_27))))) = s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.pegSound.peg_linfix_correct_lemma', axiom, ![V_27UpperN_27, V_27sym_27, V_27sepsym_27, V_27i_7c48_7c_27, V_27i_27, V_27pts_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))))),'happ'(s('fun'('type.list.list'('type.tokens.token'),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))))),'const.pair.,_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.peg_linfix_3'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27UpperN_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sym_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sepsym_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'happ'(s('fun'('type.list.list'('type.tokens.token'),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))))),'const.pair.,_0'),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_27)))))))) => ((![V_27i_7c48_7c_7c39_7c_27, V_27i_7c49_7c_27, V_27pts_7c48_7c_27, V_27s_27]: (p(s('bool','happ'(s('fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'bool'),'happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'bool')),'const.bool.IN_0'),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27s_27))),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'const.pred_set.INSERT_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sym_27),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'const.pred_set.INSERT_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sepsym_27),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'const.pred_set.EMPTY_0')))))))) => (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_7c39_7c_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27)))))) => (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))))),'happ'(s('fun'('type.list.list'('type.tokens.token'),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))))),'const.pair.,_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_7c39_7c_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27s_27))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'happ'(s('fun'('type.list.list'('type.tokens.token'),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))))),'const.pair.,_0'),s('type.list.list'('type.tokens.token'),V_27i_7c49_7c_27))),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_7c48_7c_27)))))))) => ?[V_27pt_27]: (s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_7c48_7c_27) = s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'happ'(s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.list.CONS_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))) & (p(s('bool','happ'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'bool'),'happ'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'bool')),'const.bool.IN_0'),s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27s_27)))))) & (p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_7c39_7c_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.APPEND_2'(s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c49_7c_27))))))))))) & (![V_27i_7c49_7c_27, V_27pts_7c48_7c_27, V_27s_27]: (p(s('bool','happ'(s('fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'bool'),'happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'fun'('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'bool')),'const.bool.IN_0'),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27s_27))),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'const.pred_set.INSERT_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sym_27),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'const.pred_set.INSERT_2'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sepsym_27),s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'bool'),'const.pred_set.EMPTY_0')))))))) => (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'happ'(s('fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))))),'happ'(s('fun'('type.list.list'('type.tokens.token'),'fun'('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))))),'const.pair.,_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27s_27))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'happ'(s('fun'('type.list.list'('type.tokens.token'),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))))),'const.pair.,_0'),s('type.list.list'('type.tokens.token'),V_27i_7c49_7c_27))),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_7c48_7c_27)))))))) => ?[V_27pt_27]: (s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_7c48_7c_27) = s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'happ'(s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.list.CONS_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))) & (p(s('bool','happ'(s('fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'bool'),'happ'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'bool')),'const.bool.IN_0'),s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27s_27)))))) & (p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.APPEND_2'(s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c49_7c_27)))))))))) & (~ (p(s('bool','const.peg.peg|48|_2'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sym_27))))) & (p(s('bool','happ'(s('fun'('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),'bool'),'happ'(s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'fun'('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),'bool')),'const.bool.IN_0'),s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27UpperN_27))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool')),'const.grammar.grammar_rules_1'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0')))))))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'type.pair.prod'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'fun'('bool','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool'))),'const.pair.,_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'))),'_dst_x1x0_2'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')))),'const.list.CONS_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sym_27))))))))),s('fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool'),'const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool')),'const.grammar.grammar_rules_1'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'))),s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27UpperN_27)))))) & p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.pair.prod'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'type.pair.prod'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool')),'const.pair.UNCURRY_1'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'type.pair.prod'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool'))),'_dst_x00x11x11_3'(s('fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'fun'('bool','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool'))),'const.pair.,_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'))),'happ'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27UpperN_27))))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')))),'_dst_x00x10x01_3'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')))),'const.list.CONS_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'_i_0_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'))),'_dst_x1x0_2'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')))),'const.list.CONS_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sepsym_27))))),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.pegSound.pegsym_to_sym_1'(s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27sym_27))))))))))))),s('fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool'),'const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool')),'const.grammar.grammar_rules_1'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'))),s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27UpperN_27))))))))))) => ?[V_27pt_27]: (s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_27) = s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'happ'(s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.list.CONS_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27UpperN_27))) & (p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.APPEND_2'(s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_27))))))))))).
fof('thm.pegSound.length_no_greater', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27sym_27, V_27r_27, V_27i_7c48_7c_27, V_27i_27, V_27G_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'(V_27A_27,V_27B_27,V_27C_27),V_27G_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.peg.pegsym'(V_27A_27,V_27B_27,V_27C_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27),s('type.peg.pegsym'(V_27A_27,V_27B_27,V_27C_27),V_27sym_27))),s('type.option.option'('type.pair.prod'('type.list.list'(V_27A_27),V_27C_27)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(V_27A_27),V_27C_27),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27i_27),s(V_27C_27,V_27r_27)))))))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27i_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27i_7c48_7c_27)))))))).
fof('thm.pegSound.MAP_TK_|49||49|', axiom, ![V_27y_27, V_27x_27]: (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27x_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27y_27))) <=> s('type.list.list'('type.tokens.token'),V_27x_27) = s('type.list.list'('type.tokens.token'),V_27y_27))).
fof('thm.pegSound.peg_eval_nTyOp_wrongtok', axiom, ![V_27x_27, V_27i_27, V_27f_27]: ~ (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),'const.list.CONS_2'(s('type.tokens.token','const.tokens.LparT_0'),s('type.list.list'('type.tokens.token'),V_27i_27))),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTyOp_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27f_27))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),V_27x_27)))))))).
fof('thm.pegSound.peg_EbaseParen_sound', axiom, ![V_27i_7c48_7c_27, V_27i_27, V_27pts_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.peg_EbaseParen_0'))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),V_27i_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_27)))))))) => (![V_27i_7c48_7c_7c39_7c_27, V_27N_27, V_27i_7c49_7c_27, V_27pts_7c48_7c_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_7c39_7c_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27)))))) & p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_7c39_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',V_27N_27))),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.combin.I_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),V_27i_7c49_7c_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_7c48_7c_27))))))))) => ?[V_27pt_27]: (s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_7c48_7c_27) = s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',V_27N_27))))) & (p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_7c39_7c_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.APPEND_2'(s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c49_7c_27))))))))) => ?[V_27pt_27]: (s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_27) = s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))) & (p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.APPEND_2'(s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_27))))))))))).
fof('thm.pegSound.peg_sound', axiom, ![V_27N_27, V_27i_7c48_7c_27, V_27i_27, V_27pts_27]: (p(s('bool','const.peg.peg_eval_3'(s('type.peg.peg'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.cmlPEG.cmlPEG_0'),s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27),s('type.peg.pegsym'('type.tokens.token','type.gram.MMLnonT','type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.peg.nt_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27N_27),s('fun'('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.combin.I_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.tokens.token'),'type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'))),'const.pair.,_2'(s('type.list.list'('type.tokens.token'),V_27i_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_27)))))))) => ?[V_27pt_27]: (s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),V_27pts_27) = s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27),s('type.list.list'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),V_27N_27))) & (p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_7c48_7c_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.APPEND_2'(s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27i_27)))))))))).
