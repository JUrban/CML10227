fof('thm.con_to_decProof.result_rel_def', axiom, ![V_27A_27,V_27B_27]: ![Vx, Vx0]: (p(s('bool','const.con_to_decProof.result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),Vx),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),Vx0)))) <=> ![V_27result__rel_7c39_7c_27]: (![V_27a_7c48_7c_7c48_7c_27, V_27a_7c49_7c_7c48_7c_27]: ((?[V_27v_27]: (s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.NONE_0') & s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_7c48_7c_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_27)))) | (?[V_27err_27]: (s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27err_27))))) & s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_7c48_7c_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27err_27)))))) | ?[V_27a_27]: (s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))) & s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_7c48_7c_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))))))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),V_27result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_7c48_7c_27))),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_7c48_7c_27))))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),V_27result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),Vx))),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),Vx0))))))).
fof('thm.con_to_decProof.result_rel_rules|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27v_27]: p(s('bool','const.con_to_decProof.result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.NONE_0'),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_27))))))).
fof('thm.con_to_decProof.result_rel_rules|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27err_27]: p(s('bool','const.con_to_decProof.result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27err_27))))),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27err_27))))))))).
fof('thm.con_to_decProof.result_rel_rules|split|2', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: p(s('bool','const.con_to_decProof.result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))))))).
fof('thm.con_to_decProof.result_rel_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27result__rel_7c39_7c_27]: ((![V_27v_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),V_27result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.NONE_0'))),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_27)))))) & (![V_27err_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),V_27result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27err_27))))))),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27err_27)))))))) & ![V_27a_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),V_27result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))))),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))))))))) => ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','const.con_to_decProof.result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_27)))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),V_27result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_27))),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_27))))))).
fof('thm.con_to_decProof.result_rel_cases', axiom, ![V_27A_27,V_27B_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','const.con_to_decProof.result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_27)))) <=> (?[V_27v_27]: (s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.NONE_0') & s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_27)))) | (?[V_27err_27]: (s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27err_27))))) & s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27err_27)))))) | ?[V_27a_27]: (s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),V_27a_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'(V_27B_27)),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))) & s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_7c49_7c_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))))))))).
fof('thm.con_to_decProof.dec_result_rel_def', axiom, ![V_27A_27]: ![Vx, Vx0]: (p(s('bool','const.con_to_decProof.dec_result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),Vx),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),Vx0)))) <=> ![V_27dec__result__rel_7c39_7c_27]: (![V_27a_7c48_7c_7c48_7c_27, V_27a_7c49_7c_7c48_7c_27]: (((s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.NONE_0') & s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_7c48_7c_27) = s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.none_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))))) | (?[V_27err_27]: (s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',V_27err_27))))) & s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_7c48_7c_27) = s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.some_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',V_27err_27),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))))) | ?[V_27a_27]: (s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))) & s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_7c48_7c_27) = s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))))))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool')),V_27dec__result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_7c48_7c_27))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_7c48_7c_27))))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool')),V_27dec__result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),Vx))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),Vx0))))))).
fof('thm.con_to_decProof.dec_result_rel_rules|split|0', axiom, ![V_27A_27]: p(s('bool','const.con_to_decProof.dec_result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.NONE_0'),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.none_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))))).
fof('thm.con_to_decProof.dec_result_rel_rules|split|1', axiom, ![V_27A_27]: ![V_27err_27]: p(s('bool','const.con_to_decProof.dec_result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',V_27err_27))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.some_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',V_27err_27),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))))).
fof('thm.con_to_decProof.dec_result_rel_rules|split|2', axiom, ![V_27A_27]: ![V_27a_27]: p(s('bool','const.con_to_decProof.dec_result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))))))).
fof('thm.con_to_decProof.dec_result_rel_ind', axiom, ![V_27A_27]: ![V_27dec__result__rel_7c39_7c_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool')),V_27dec__result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.NONE_0'))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.none_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))))))) & (![V_27err_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool')),V_27dec__result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',V_27err_27))))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.some_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',V_27err_27),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))))))) & ![V_27a_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool')),V_27dec__result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))))))))) => ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','const.con_to_decProof.dec_result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_27),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_27)))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool'),'happ'(s('fun'('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'fun'('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'bool')),V_27dec__result__rel_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_27))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_27))))))).
fof('thm.con_to_decProof.dec_result_rel_cases', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','const.con_to_decProof.dec_result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_27),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_27)))) <=> ((s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.NONE_0') & s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_27) = s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.none_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))))) | (?[V_27err_27]: (s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',V_27err_27))))) & s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_27) = s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.some_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',V_27err_27),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))))) | ?[V_27a_27]: (s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27a_7c48_7c_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))) & s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),V_27a_7c49_7c_27) = s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),V_27A_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))))))))).
fof('thm.con_to_decProof.compile_state_def', axiom, ![V_27FFI_27]: ![V_27s_27]: s('type.decSem.state'(V_27FFI_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27FFI_27),V_27s_27))) = s('type.decSem.state'(V_27FFI_27),'const.decSem.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'(V_27FFI_27),'type.ffi.ffi_state'(V_27FFI_27)),'const.combin.K_1'(s('type.ffi.ffi_state'(V_27FFI_27),'const.conSem.state_ffi_1'(s('type.conSem.state'(V_27FFI_27),V_27s_27))))),s('type.decSem.state'(V_27FFI_27),'const.decSem.state_refs_fupd_2'(s('fun'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(V_27FFI_27),V_27s_27))))),s('type.decSem.state'(V_27FFI_27),'const.decSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(V_27FFI_27),V_27s_27))))),s('type.decSem.state'(V_27FFI_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27FFI_27),V_27s_27))))),s('type.decSem.state'(V_27FFI_27),'const.bool.ARB_0')))))))))).
fof('thm.con_to_decProof.compile_state_globals', axiom, ![V_27A_27]: ![V_27s_27]: s('type.list.list'('type.option.option'('type.conSem.v')),'const.decSem.state_globals_1'(s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27)))).
fof('thm.con_to_decProof.compile_state_with_globals', axiom, ![V_27A_27]: ![V_27s_27, V_27f_27]: s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),'const.conSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),V_27f_27),s('type.conSem.state'(V_27A_27),V_27s_27))))) = s('type.decSem.state'(V_27A_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),V_27f_27),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27)))))).
fof('thm.con_to_decProof.compile_state_clock', axiom, ![V_27A_27]: ![V_27s_27]: s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(V_27A_27),V_27s_27)))).
fof('thm.con_to_decProof.compile_state_with_clock', axiom, ![V_27A_27]: ![V_27s_27, V_27f_27]: s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),'const.conSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.conSem.state'(V_27A_27),V_27s_27))))) = s('type.decSem.state'(V_27A_27),'const.decSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27)))))).
fof('thm.con_to_decProof.compile_state_refs', axiom, ![V_27A_27]: ![V_27s_27]: s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(V_27A_27),V_27s_27)))).
fof('thm.con_to_decProof.compile_state_dec_clock', axiom, ![V_27A_27]: ![V_27s_27]: s('type.decSem.state'(V_27A_27),'const.decSem.dec_clock_1'(s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))) = s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),'const.conSem.dec_clock_1'(s('type.conSem.state'(V_27A_27),V_27s_27)))))).
fof('thm.con_to_decProof.compile_env_def', axiom, ![V_27env_27]: s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',V_27env_27))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',V_27env_27))))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s('fun'('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',V_27env_27))))),s('type.decSem.environment','const.bool.ARB_0')))))).
fof('thm.con_to_decProof.compile_env_v', axiom, ![V_27env_27]: s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',V_27env_27))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',V_27env_27)))).
fof('thm.con_to_decProof.compile_env_with_v', axiom, ![V_27x_27, V_27env_27]: s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),V_27x_27),s('type.conSem.environment',V_27env_27))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),V_27x_27),s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',V_27env_27)))))).
fof('thm.con_to_decProof.compile_env_exh', axiom, ![V_27env_27]: s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',V_27env_27))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',V_27env_27)))).
fof('thm.con_to_decProof.con_to_decProof_2|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27st_27, V_27op_27, V_27vs_27, V_27res_27]: (s('type.option.option'('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v'))),'const.conSem.do_app_3'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_27),s('type.conLang.op',V_27op_27),s('type.list.list'('type.conSem.v'),V_27vs_27))) = s('type.option.option'('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v'))),'const.option.SOME_1'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v')),V_27res_27))) => ![V_27s_27]: ((s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(V_27A_27),V_27s_27))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_27))) & s('type.ffi.ffi_state'(V_27A_27),'const.decSem.state_ffi_1'(s('type.decSem.state'(V_27A_27),V_27s_27))) = s('type.ffi.ffi_state'(V_27A_27),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_27)))) => s('type.option.option'('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v'))),'const.decSem.do_app_3'(s('type.decSem.state'(V_27A_27),V_27s_27),s('type.conLang.op',V_27op_27),s('type.list.list'('type.conSem.v'),V_27vs_27))) = s('type.option.option'('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v'))),'const.option.SOME_1'(s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(V_27A_27),'const.decSem.state_refs_fupd_2'(s('fun'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.FST_1'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v')),V_27res_27))))))),s('type.decSem.state'(V_27A_27),'const.decSem.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'(V_27A_27),'type.ffi.ffi_state'(V_27A_27)),'const.combin.K_1'(s('type.ffi.ffi_state'(V_27A_27),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.FST_1'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v')),V_27res_27))))))),s('type.decSem.state'(V_27A_27),V_27s_27))))),s('type.semanticPrimitives.result'('type.conSem.v','type.conSem.v'),'const.pair.SND_1'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.conSem.v','type.conSem.v')),V_27res_27)))))))))).
fof('thm.con_to_decProof.con_to_decProof_22_prove_ltb', axiom, ![V_27FFI_27]: ![V_27v_27]: ?[V_27x_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))))),V_27v_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))))),V_27x_27))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))))),V_27x_27))))),s('type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.,_2'(s('type.ffi.ffi_state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))))),V_27x_27))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27FFI_27),'type.list.list'('type.option.option'('type.conSem.v'))))),V_27x_27)))))))))))))).
fof('thm.con_to_decProof.con_to_decProof_7|48|_prove_ltb|split|0', axiom, ![V_27FFI_27]: ![V_27env_27, V_27s_27, V_27es_27, V_27res_27]: (s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.conSem.evaluate_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27FFI_27),V_27s_27),s('type.list.list'('type.conLang.exp'),V_27es_27))) = s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),V_27res_27) => (~ (s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),'const.pair.SND_1'(s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),V_27res_27))) = s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))) => s('type.pair.prod'('type.decSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.decSem.evaluate_3'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',V_27env_27))),s('type.decSem.state'(V_27FFI_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27FFI_27),V_27s_27))),s('type.list.list'('type.conLang.exp'),V_27es_27))) = s('type.pair.prod'('type.decSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(V_27FFI_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),V_27res_27))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),'const.pair.SND_1'(s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),V_27res_27)))))))).
fof('thm.con_to_decProof.con_to_decProof_7|48|_prove_ltb|split|1', axiom, ![V_27FFI_27]: ![V_27env_27, V_27s_27, V_27v_27, V_27pes_27, V_27err__v_27, V_27res_27]: (s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.conSem.evaluate_match_5'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27FFI_27),V_27s_27),s('type.conSem.v',V_27v_27),s('type.list.list'('type.pair.prod'('type.conLang.pat','type.conLang.exp')),V_27pes_27),s('type.conSem.v',V_27err__v_27))) = s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),V_27res_27) => (~ (s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),'const.pair.SND_1'(s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),V_27res_27))) = s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))) => s('type.pair.prod'('type.decSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.decSem.evaluate_match_5'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',V_27env_27))),s('type.decSem.state'(V_27FFI_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27FFI_27),V_27s_27))),s('type.conSem.v',V_27v_27),s('type.list.list'('type.pair.prod'('type.conLang.pat','type.conLang.exp')),V_27pes_27),s('type.conSem.v',V_27err__v_27))) = s('type.pair.prod'('type.decSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(V_27FFI_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),V_27res_27))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),'const.pair.SND_1'(s('type.pair.prod'('type.conSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),V_27res_27)))))))).
fof('thm.con_to_decProof.con_to_decProof_7|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27vs_27, V_27env_27, V_27s_27, V_27n_27, V_27genv_27, V_27gs_27, V_27s_7c39_7c_27, V_27extra_27]: ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),V_27vs_27)))) & (s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.conSem.v')),'const.alist.ALOOKUP_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment',V_27env_27))))),s('type.list.list'('type.list.list'('type.string.char')),V_27vs_27))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.MAP_2'(s('fun'('type.conSem.v','type.option.option'('type.conSem.v')),'const.option.SOME_0'),s('type.list.list'('type.conSem.v'),V_27gs_27))) & (s('type.list.list'('type.option.option'('type.conSem.v')),'const.decSem.state_globals_1'(s('type.decSem.state'(V_27A_27),V_27s_27))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_27),s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.option.option'('type.conSem.v')),'const.combin.K_1'(s('type.option.option'('type.conSem.v'),'const.option.NONE_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),V_27gs_27))))))),s('type.list.list'('type.option.option'('type.conSem.v')),V_27extra_27))) & (s('type.num.num',V_27n_27) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_27))) & s('type.decSem.state'(V_27A_27),V_27s_7c39_7c_27) = s('type.decSem.state'(V_27A_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_27),s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.MAP_2'(s('fun'('type.conSem.v','type.option.option'('type.conSem.v')),'const.option.SOME_0'),s('type.list.list'('type.conSem.v'),V_27gs_27))))),s('type.list.list'('type.option.option'('type.conSem.v')),V_27extra_27))))),s('type.decSem.state'(V_27A_27),V_27s_27))))))) => s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.decSem.evaluate_3'(s('type.decSem.environment',V_27env_27),s('type.decSem.state'(V_27A_27),V_27s_27),s('type.list.list'('type.conLang.exp'),'const.list.CONS_2'(s('type.conLang.exp','const.con_to_dec.init_globals_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27vs_27),s('type.num.num',V_27n_27))),s('type.list.list'('type.conLang.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(V_27A_27),V_27s_7c39_7c_27),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))))).
fof('thm.con_to_decProof.con_to_decProof_72_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27s_27, V_27exh_27, V_27l_27, V_27genv_27, V_27n_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),V_27l_27))),s('type.num.num',V_27n_27)))) => s('type.pair.prod'('type.decSem.state'(V_27B_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.decSem.evaluate_3'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0'))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s('fun'('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),V_27exh_27))),s('type.decSem.environment','const.bool.ARB_0'))))),s('type.decSem.state'(V_27B_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_27),s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.option.option'('type.conSem.v')),'const.combin.K_1'(s('type.option.option'('type.conSem.v'),'const.option.NONE_0'))),s('type.num.num',V_27n_27))))))),s('type.decSem.state'(V_27B_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27B_27),V_27s_27))))),s('type.list.list'('type.conLang.exp'),'const.list.CONS_2'(s('type.conLang.exp','const.con_to_dec.init_global_funs_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_27))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),V_27l_27))),s('type.list.list'('type.conLang.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.decSem.state'(V_27B_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(V_27B_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_27),s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.MAP_2'(s('fun'('type.conSem.v','type.option.option'('type.conSem.v')),'const.option.SOME_0'),s('type.list.list'('type.conSem.v'),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp')),'type.conSem.v'),'const.pair.UNCURRY_1'(s('fun'(V_27A_27,'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'),'type.conSem.v')),'_dst_x0_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'),'type.conSem.v'),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.conLang.exp','type.conSem.v')),'const.conSem.Closure_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0'))))))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),V_27l_27))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.option.option'('type.conSem.v')),'const.combin.K_1'(s('type.option.option'('type.conSem.v'),'const.option.NONE_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),V_27l_27))))))))))),s('type.decSem.state'(V_27B_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27B_27),V_27s_27))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))))).
fof('thm.con_to_decProof.compile_decs_correct', axiom, ![V_27A_27]: ![V_27env_27, V_27s_27, V_27ds_27, V_27s_7c39_7c_27, V_27new__env_27, V_27r_27]: ((s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.conSem.v'),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.conSem.evaluate_decs_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27A_27),V_27s_27),s('type.list.list'('type.conLang.dec'),V_27ds_27))) = s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.conSem.v'),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.pair.,_2'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.conSem.v'),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v'))),'const.pair.,_2'(s('type.list.list'('type.conSem.v'),V_27new__env_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27))))) & ~ (s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) => ?[V_27r__i3_27]: (p(s('bool','const.con_to_decProof.result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),V_27r__i3_27)))) & s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.decSem.evaluate_3'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0'))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s('fun'('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',V_27env_27))))),s('type.decSem.environment','const.bool.ARB_0'))))),s('type.decSem.state'(V_27A_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.option.option'('type.conSem.v')),'const.combin.K_1'(s('type.option.option'('type.conSem.v'),'const.option.NONE_0'))),s('type.num.num','const.conLang.num_defs_1'(s('type.list.list'('type.conLang.dec'),V_27ds_27))))))))),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))),s('type.list.list'('type.conLang.exp'),'const.list.CONS_2'(s('type.conLang.exp','const.con_to_dec.compile_decs_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))),s('type.list.list'('type.conLang.dec'),V_27ds_27))),s('type.list.list'('type.conLang.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(V_27A_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.option.option'('type.conSem.v')),'const.combin.K_1'(s('type.option.option'('type.conSem.v'),'const.option.NONE_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.num_defs_1'(s('type.list.list'('type.conLang.dec'),V_27ds_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),V_27new__env_27))))))))))),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),V_27r__i3_27)))))).
fof('thm.con_to_decProof.con_to_decProof_74_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27l_27, V_27env_27]: ?[V_27s_7c39_7c_27, V_27env_7c39_7c_27, V_27v3_27]: s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.conSem.v'),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.conSem.evaluate_decs_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27A_27),V_27s_27),s('type.list.list'('type.conLang.dec'),V_27l_27))) = s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.conSem.v'),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.pair.,_2'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.conSem.v'),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v'))),'const.pair.,_2'(s('type.list.list'('type.conSem.v'),V_27env_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27v3_27)))))).
fof('thm.con_to_decProof.compile_prompt_correct', axiom, ![V_27A_27]: ![V_27env_27, V_27s_27, V_27p_27, V_27new__env_27, V_27s_7c39_7c_27, V_27r_27, V_27next_7c39_7c_27, V_27e_27]: ((s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.conSem.evaluate_prompt_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27A_27),V_27s_27),s('type.conLang.prompt',V_27p_27))) = s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.pair.,_2'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v'))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27new__env_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27))))) & (~ (s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))) & s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.pair.,_2'(s('type.num.num',V_27next_7c39_7c_27),s('type.conLang.exp',V_27e_27))) = s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.con_to_dec.compile_prompt_4'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.none_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.some_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))),s('type.conLang.prompt',V_27p_27))))) => ?[V_27r__i3_27]: (p(s('bool','const.con_to_decProof.dec_result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),V_27r__i3_27)))) & (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27new__env_27))))) = s('type.num.num',V_27next_7c39_7c_27) & s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.decSem.evaluate_3'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0'))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s('fun'('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',V_27env_27))))),s('type.decSem.environment','const.bool.ARB_0'))))),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27))),s('type.list.list'('type.conLang.exp'),'const.list.CONS_2'(s('type.conLang.exp',V_27e_27),s('type.list.list'('type.conLang.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(V_27A_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))),s('type.list.list'('type.option.option'('type.conSem.v')),V_27new__env_27))))),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),V_27r__i3_27))))))).
fof('thm.con_to_decProof.con_to_decProof_76_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27h_27]: ?[V_27next_7c39_7c_27, V_27p_7c39_7c_27]: s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.con_to_dec.compile_prompt_4'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.none_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.some_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))),s('type.conLang.prompt',V_27h_27))) = s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.pair.,_2'(s('type.num.num',V_27next_7c39_7c_27),s('type.conLang.exp',V_27p_7c39_7c_27)))).
fof('thm.con_to_decProof.con_to_decProof_77_prove_ltb', axiom, ![V_27p_27, V_27next_7c39_7c_7c39_7c_27]: ?[V_27next_7c39_7c_7c39_7c_7c39_7c_27, V_27ps_7c39_7c_27]: s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.con_to_dec.compile_prog_4'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.none_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.some_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.num.num',V_27next_7c39_7c_7c39_7c_27),s('type.list.list'('type.conLang.prompt'),V_27p_27))) = s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.pair.,_2'(s('type.num.num',V_27next_7c39_7c_7c39_7c_7c39_7c_27),s('type.conLang.exp',V_27ps_7c39_7c_27)))).
fof('thm.con_to_decProof.con_to_decProof_78_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27h_27, V_27env_27]: ?[V_27s_7c39_7c_27, V_27genv_27, V_27v7_27]: s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.conSem.evaluate_prompt_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27A_27),V_27s_27),s('type.conLang.prompt',V_27h_27))) = s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.pair.,_2'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v'))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27v7_27)))))).
fof('thm.con_to_decProof.con_to_decProof_79_prove_ltb', axiom, ![V_27A_27]: ![V_27s_7c39_7c_7c39_7c_27, V_27s_27, V_27p_27, V_27genv_27, V_27env_27]: ?[V_27s_7c39_7c_27, V_27genv_7c39_7c_27, V_27r_27]: s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.conSem.evaluate_prog_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27A_27),'const.conSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))),s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_27))))),s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_7c39_7c_27))),s('type.list.list'('type.conLang.prompt'),V_27p_27))) = s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.pair.,_2'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v'))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27genv_7c39_7c_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27)))))).
fof('thm.con_to_decProof.compile_prog_evaluate', axiom, ![V_27A_27]: ![V_27env_27, V_27s_27, V_27p_27, V_27new__env_27, V_27s_7c39_7c_27, V_27r_27, V_27next_7c39_7c_27, V_27e_27]: ((s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.conSem.evaluate_prog_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27A_27),V_27s_27),s('type.list.list'('type.conLang.prompt'),V_27p_27))) = s('type.pair.prod'('type.conSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')))),'const.pair.,_2'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.option.option'('type.conSem.v')),'type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v'))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27new__env_27),s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27))))) & (~ (s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))) & (s('type.option.option'('type.sptree.spt'('type.num.num')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',V_27env_27))),s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))) = s('type.option.option'('type.sptree.spt'('type.num.num')),'const.option.SOME_1'(s('type.sptree.spt'('type.num.num'),'const.sptree.insert_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'('type.num.num'),'const.sptree.insert_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'))))))) & s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.con_to_dec.compile_prog_4'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.none_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.conLang.some_tag_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))),s('type.list.list'('type.conLang.prompt'),V_27p_27))) = s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.pair.,_2'(s('type.num.num',V_27next_7c39_7c_27),s('type.conLang.exp',V_27e_27)))))) => ?[V_27r__i3_27]: (p(s('bool','const.con_to_decProof.dec_result_rel_2'(s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),V_27r__i3_27)))) & ((s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),V_27r_27) = s('type.option.option'('type.semanticPrimitives.error_result'('type.conSem.v')),'const.option.NONE_0') => s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),V_27new__env_27))))) = s('type.num.num',V_27next_7c39_7c_27)) & s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.decSem.evaluate_3'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0'))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s('fun'('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',V_27env_27))))),s('type.decSem.environment','const.bool.ARB_0'))))),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27))),s('type.list.list'('type.conLang.exp'),'const.list.CONS_2'(s('type.conLang.exp',V_27e_27),s('type.list.list'('type.conLang.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.decSem.state'(V_27A_27),'type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(V_27A_27),'const.decSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.list.APPEND_2'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))),s('type.list.list'('type.option.option'('type.conSem.v')),V_27new__env_27))))),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_7c39_7c_27))))),s('type.semanticPrimitives.result'('type.list.list'('type.conSem.v'),'type.conSem.v'),V_27r__i3_27))))))).
fof('thm.con_to_decProof.compile_semantics', axiom, ![V_27A_27]: ![V_27s_27, V_27p_27, V_27env_27]: ((s('type.option.option'('type.sptree.spt'('type.num.num')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',V_27env_27))),s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))) = s('type.option.option'('type.sptree.spt'('type.num.num')),'const.option.SOME_1'(s('type.sptree.spt'('type.num.num'),'const.sptree.insert_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'('type.num.num'),'const.sptree.insert_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'))))))) & ~ (s('type.ffi.behaviour','const.conSem.semantics_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27A_27),V_27s_27),s('type.list.list'('type.conLang.prompt'),V_27p_27))) = s('type.ffi.behaviour','const.ffi.Fail_0'))) => s('type.ffi.behaviour','const.decSem.semantics_3'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0'))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s('fun'('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',V_27env_27))))),s('type.decSem.environment','const.bool.ARB_0'))))),s('type.decSem.state'(V_27A_27),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(V_27A_27),V_27s_27))),s('type.list.list'('type.conLang.exp'),'const.list.CONS_2'(s('type.conLang.exp','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.conLang.exp'),'const.con_to_dec.compile_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(V_27A_27),V_27s_27))))),s('type.list.list'('type.conLang.prompt'),V_27p_27))))),s('type.list.list'('type.conLang.exp'),'const.list.NIL_0'))))) = s('type.ffi.behaviour','const.conSem.semantics_3'(s('type.conSem.environment',V_27env_27),s('type.conSem.state'(V_27A_27),V_27s_27),s('type.list.list'('type.conLang.prompt'),V_27p_27))))).
