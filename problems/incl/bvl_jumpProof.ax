fof('thm.bvl_jumpProof.bvl_jumpProof_|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27env_27, V_27n_27, V_27xs_27, V_27k_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27k_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvl.exp'),V_27xs_27)))))) => s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl_jump.JumpList_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27xs_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27k_27))))))),s('type.list.list'('type.bvlSem.v'),V_27env_27))),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.list.EL_2'(s('type.num.num',V_27k_27),s('type.list.list'('type.bvl.exp'),V_27xs_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27k_27))))))),s('type.list.list'('type.bvlSem.v'),V_27env_27))),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))))).
fof('thm.bvl_jumpProof.evaluate_Jump', axiom, ![V_27A_27]: ![V_27xs_27, V_27x_27, V_27t_27, V_27s_27, V_27n_27, V_27env_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27x_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',V_27n_27))))),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))))),s('type.bvlSem.state'(V_27A_27),V_27t_27))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvl.exp'),V_27xs_27))))))) => s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl_jump.Jump_2'(s('type.bvl.exp',V_27x_27),s('type.list.list'('type.bvl.exp'),V_27xs_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27xs_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',V_27n_27))))),s('type.list.list'('type.bvlSem.v'),V_27env_27))),s('type.bvlSem.state'(V_27A_27),V_27t_27))))))))).
