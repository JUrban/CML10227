fof('thm.words.dimword_def', axiom, ![V_27A_27]: s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.INT_MIN_def', axiom, ![V_27A_27]: s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.UINT_MAX_def', axiom, ![V_27A_27]: s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.INT_MAX_def', axiom, ![V_27A_27]: s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.w2n_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.sum_num.SUM_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('type.num.num','type.num.num')),'const.bit.SBIT_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0')))))).
fof('thm.words.n2w_def', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27n_27)))))).
fof('thm.words.w2w_def', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.sw2sw_def', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.bit.SIGN_EXTEND_3'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('ARITY_1_2_const.words.w2l', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.w2l_1'(s('type.num.num',VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.list.list'('type.num.num'),'const.words.w2l_2'(s('type.num.num',VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.w2l_def', axiom, ![V_27A_27]: ![V_27b_27, V_27w_27]: s('type.list.list'('type.num.num'),'const.words.w2l_2'(s('type.num.num',V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('ARITY_1_2_const.words.l2w', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.l2w_1'(s('type.num.num',VV0))),s('type.list.list'('type.num.num'),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.l2w_2'(s('type.num.num',VV0),s('type.list.list'('type.num.num'),VV1)))).
fof('thm.words.l2w_def', axiom, ![V_27A_27]: ![V_27b_27, V_27l_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.l2w_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27)))))).
fof('ARITY_2_3_const.words.w2s', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.w2s_2'(s('type.num.num',VV0),s('fun'('type.num.num','type.string.char'),VV1))),s('type.fcp.cart'('bool',V_27A_27),VV2))) = s('type.list.list'('type.string.char'),'const.words.w2s_3'(s('type.num.num',VV0),s('fun'('type.num.num','type.string.char'),VV1),s('type.fcp.cart'('bool',V_27A_27),VV2)))).
fof('thm.words.w2s_def', axiom, ![V_27A_27]: ![V_27b_27, V_27f_27, V_27w_27]: s('type.list.list'('type.string.char'),'const.words.w2s_3'(s('type.num.num',V_27b_27),s('fun'('type.num.num','type.string.char'),V_27f_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.list.list'('type.string.char'),'const.ASCIInumbers.n2s_3'(s('type.num.num',V_27b_27),s('fun'('type.num.num','type.string.char'),V_27f_27),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('ARITY_2_3_const.words.s2w', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.s2w_2'(s('type.num.num',VV0),s('fun'('type.string.char','type.num.num'),VV1))),s('type.list.list'('type.string.char'),VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.s2w_3'(s('type.num.num',VV0),s('fun'('type.string.char','type.num.num'),VV1),s('type.list.list'('type.string.char'),VV2)))).
fof('thm.words.s2w_def', axiom, ![V_27A_27]: ![V_27b_27, V_27f_27, V_27s_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.s2w_3'(s('type.num.num',V_27b_27),s('fun'('type.string.char','type.num.num'),V_27f_27),s('type.list.list'('type.string.char'),V_27s_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.ASCIInumbers.s2n_3'(s('type.num.num',V_27b_27),s('fun'('type.string.char','type.num.num'),V_27f_27),s('type.list.list'('type.string.char'),V_27s_27)))))).
fof('thm.words.word_from_bin_list_def', axiom, ![V_27A_27]: s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_bin_list_0') = s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.l2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.word_from_oct_list_def', axiom, ![V_27A_27]: s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_oct_list_0') = s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.l2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.word_from_dec_list_def', axiom, ![V_27A_27]: s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_dec_list_0') = s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.l2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.word_from_hex_list_def', axiom, ![V_27A_27]: s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_hex_list_0') = s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.l2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.word_to_bin_list_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.word_to_bin_list_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.w2l_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.word_to_oct_list_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.word_to_oct_list_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.w2l_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.word_to_dec_list_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.word_to_dec_list_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.w2l_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.word_to_hex_list_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.word_to_hex_list_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.w2l_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.word_from_bin_string_def', axiom, ![V_27A_27]: s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_bin_string_0') = s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.s2w_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('fun'('type.string.char','type.num.num'),'const.ASCIInumbers.UNHEX_0')))).
fof('thm.words.word_from_oct_string_def', axiom, ![V_27A_27]: s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_oct_string_0') = s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.s2w_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.string.char','type.num.num'),'const.ASCIInumbers.UNHEX_0')))).
fof('thm.words.word_from_dec_string_def', axiom, ![V_27A_27]: s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_dec_string_0') = s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.s2w_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.string.char','type.num.num'),'const.ASCIInumbers.UNHEX_0')))).
fof('thm.words.word_from_hex_string_def', axiom, ![V_27A_27]: s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_hex_string_0') = s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.s2w_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.string.char','type.num.num'),'const.ASCIInumbers.UNHEX_0')))).
fof('thm.words.word_to_bin_string_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_bin_string_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.w2s_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('fun'('type.num.num','type.string.char'),'const.ASCIInumbers.HEX_0')))).
fof('thm.words.word_to_oct_string_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_oct_string_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.w2s_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.num.num','type.string.char'),'const.ASCIInumbers.HEX_0')))).
fof('thm.words.word_to_dec_string_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_dec_string_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.w2s_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.num.num','type.string.char'),'const.ASCIInumbers.HEX_0')))).
fof('ARITY_0_1_const.words.word_to_hex_string', axiom, ![V_27A_27]: ![VV0]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_hex_string_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.list.list'('type.string.char'),'const.words.word_to_hex_string_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.words.word_to_hex_string_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_hex_string_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.w2s_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','type.string.char'),'const.ASCIInumbers.HEX_0')))).
fof('thm.words.word_T_def', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0') = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.word_L_def', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0') = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.word_H_def', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0') = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.word_|49|comp_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_and_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_or_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_xor_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))))).
fof('thm.words.word_nand_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_nand_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))))).
fof('thm.words.word_nor_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_nor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))))).
fof('thm.words.word_xnor_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xnor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('ARITY_1_3_const.list.FOLDL', axiom, ![V_27B_27,V_27A_27]: ![VV0, VV1, VV2]: s(V_27B_27,'happ'(s('fun'('type.list.list'(V_27A_27),V_27B_27),'happ'(s('fun'(V_27B_27,'fun'('type.list.list'(V_27A_27),V_27B_27)),'const.list.FOLDL_1'(s('fun'(V_27B_27,'fun'(V_27A_27,V_27B_27)),VV0))),s(V_27B_27,VV1))),s('type.list.list'(V_27A_27),VV2))) = s(V_27B_27,'const.list.FOLDL_3'(s('fun'(V_27B_27,'fun'(V_27A_27,V_27B_27)),VV0),s(V_27B_27,VV1),s('type.list.list'(V_27A_27),VV2)))).
fof('ARITY_1_2_const.words.word_reduce', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.word_reduce_1'(s('fun'('bool','fun'('bool','bool')),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.word_reduce_2'(s('fun'('bool','fun'('bool','bool')),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.word_reduce_def', axiom, ![V_27A_27]: ![V_27f_27, V_27w_27]: s('type.fcp.cart'('bool','type.one.one'),'const.words.word_reduce_2'(s('fun'('bool','fun'('bool','bool')),V_27f_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool','const.bool.LET_2'(s('fun'('type.list.list'('bool'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('type.list.list'('bool'),'bool')),'const.list.FOLDL_1'(s('fun'('bool','fun'('bool','bool')),V_27f_27))),s('fun'('type.list.list'('bool'),'bool'),'const.list.HD_0'),s('fun'('type.list.list'('bool'),'type.list.list'('bool')),'const.list.TL_0'))),s('type.list.list'('bool'),'const.list.GENLIST_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))))).
fof('thm.words.word_compare_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)) & s('type.fcp.cart'('bool','type.one.one'),'const.words.word_compare_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool','type.one.one'),'const.bool.COND_3'(s('bool',Vv),s('type.fcp.cart'('bool','type.one.one'),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool','type.one.one'),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))).
fof('ARITY_0_1_const.words.reduce_and', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_and_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_and_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.words.reduce_and_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_and_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.word_reduce_1'(s('fun'('bool','fun'('bool','bool')),'|dollar|and_0')))).
fof('ARITY_0_1_const.words.reduce_or', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_or_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_or_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.words.reduce_or_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_or_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.word_reduce_1'(s('fun'('bool','fun'('bool','bool')),'|dollar|or_0')))).
fof('thm.words.reduce_xor_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_xor_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.word_reduce_1'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'=_0')))))).
fof('thm.words.reduce_nand_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_nand_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.word_reduce_1'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0')))))).
fof('thm.words.reduce_nor_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_nor_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.word_reduce_1'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0')))))).
fof('thm.words.reduce_xnor_def', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_xnor_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.word_reduce_1'(s('fun'('bool','fun'('bool','bool')),'|dollar|equals_0')))).
fof('thm.words.word_lsb_def', axiom, ![V_27A_27]: ![V_27w_27]: s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.num.|48|_0')))).
fof('thm.words.word_msb_def', axiom, ![V_27A_27]: ![V_27w_27]: s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.word_slice_def', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, Vx]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),Vx))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27l_27))),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),Vx)))))))))).
fof('thm.words.word_bits_def', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, Vx]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),Vx))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),Vx))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27)))))))))).
fof('ARITY_0_2_const.arithmetic.MIN', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MIN_0'),s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('thm.words.word_signed_bits_def', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, Vx]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_signed_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),Vx))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MIN_0'),s('type.num.num',V_27h_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),Vx))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MIN_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MIN_0'),s('type.num.num',V_27h_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))).
fof('ARITY_2_3_const.words.word_extract', axiom, ![V_27B_27,V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27B_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27B_27)),'const.words.word_extract_2'(s('type.num.num',VV0),s('type.num.num',VV1))),s('type.fcp.cart'('bool',V_27A_27),VV2))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.fcp.cart'('bool',V_27A_27),VV2)))).
fof('ARITY_0_1_const.words.w2w', axiom, ![V_27B_27,V_27A_27]: ![VV0]: s('type.fcp.cart'('bool',V_27B_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27B_27)),'const.words.w2w_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('ARITY_2_3_const.words.word_bits', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_bits_2'(s('type.num.num',VV0),s('type.num.num',VV1))),s('type.fcp.cart'('bool',V_27A_27),VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.fcp.cart'('bool',V_27A_27),VV2)))).
fof('thm.words.word_extract_def', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27l_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27B_27)),'const.words.word_extract_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27B_27)),'const.combin.o_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27B_27)),'const.words.w2w_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_bits_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27)))))).
fof('thm.words.word_bit_def', axiom, ![V_27A_27]: ![V_27b_27, V_27w_27]: (p(s('bool','const.words.word_bit_2'(s('type.num.num',V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27b_27))))))).
fof('thm.words.word_reverse_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.word_modify_def', axiom, ![V_27A_27]: ![V_27f_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_modify_2'(s('fun'('type.num.num','fun'('bool','bool')),V_27f_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x1x1_2'(s('fun'('type.num.num','fun'('bool','bool')),V_27f_27),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.words_56_prove_ltb', axiom, ![V_27a_27]: (?[V_27i_27, V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),V_27a_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))) => ?[V_27i_27, V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),V_27a_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))))).
fof('thm.words.BIT_SET_ind', axiom, ![V_27P_27]: (![V_27i_27, V_27n_27]: ((((~ (s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0')) & p(s('bool','const.arithmetic.ODD_1'(s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27i_27))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) & ((~ (s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0')) & ~ (p(s('bool','const.arithmetic.ODD_1'(s('type.num.num',V_27n_27)))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27i_27))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27i_27))),s('type.num.num',V_27n_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27v_27))),s('type.num.num',V_27v_7c49_7c_27)))))).
fof('thm.words.BIT_SET_def', axiom, ![V_27n_27, V_27i_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0')) & s('fun'('type.num.num','bool'),'const.words.BIT_SET_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))) = s('fun'('type.num.num','bool'),'const.bool.COND_3'(s('bool',Vv),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('fun'('type.num.num','bool'),'const.bool.COND_3'(s('bool','const.arithmetic.ODD_1'(s('type.num.num',V_27n_27))),s('fun'('type.num.num','bool'),'const.pred_set.INSERT_2'(s('type.num.num',V_27i_27),s('fun'('type.num.num','bool'),'const.words.BIT_SET_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27i_27))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','bool'),'const.words.BIT_SET_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27i_27))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))).
fof('ARITY_3_4_const.words.bit_field_insert', axiom, ![V_27B_27,V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.bit_field_insert_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.fcp.cart'('bool',V_27B_27),VV2))),s('type.fcp.cart'('bool',V_27A_27),VV3))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.bit_field_insert_4'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.fcp.cart'('bool',V_27B_27),VV2),s('type.fcp.cart'('bool',V_27A_27),VV3)))).
fof('ARITY_1_2_const.words.word_modify', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_modify_1'(s('fun'('type.num.num','fun'('bool','bool')),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_modify_2'(s('fun'('type.num.num','fun'('bool','bool')),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.bit_field_insert_def', axiom, ![V_27A_27,V_27B_27]: ![V_27h_27, V_27l_27, V_27a_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.bit_field_insert_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27B_27),V_27a_27))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_modify_1'(s('fun'('type.num.num','fun'('bool','bool')),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27l_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27h_27))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27B_27),V_27a_27))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27l_27)))))))))).
fof('thm.words.word_sign_extend_def', axiom, ![V_27A_27]: ![V_27n_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sign_extend_2'(s('type.num.num',V_27n_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.SIGN_EXTEND_3'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_len_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.num.num','const.words.word_len_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))).
fof('thm.words.bit_count_upto_def', axiom, ![V_27A_27]: ![V_27n_27, V_27w_27]: s('type.num.num','const.words.bit_count_upto_2'(s('type.num.num',V_27n_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.sum_num.SUM_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0x0_4'(s('fun'('bool','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.bit_count_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.num.num','const.words.bit_count_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.words.bit_count_upto_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.word_2comp_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_add_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_mul_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_log2_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_log2_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('ARITY_0_1_const.words.w2n', axiom, ![V_27A_27]: ![VV0]: s('type.num.num','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.words.w2n_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('ARITY_0_1_const.words.word_msb', axiom, ![V_27A_27]: ![VV0]: s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('ARITY_0_1_const.words.n2w', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num',VV0))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',VV0)))).
fof('thm.words.add_with_carry_def', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27, V_27carry__in_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) & s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')),'const.words.add_with_carry_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool')),'happ'(s('fun'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool'),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool'))),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool'),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool')))),'const.pair.,_0'),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('bool','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool')),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('bool','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool'))),'const.pair.,_0'),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('bool',V_27carry__in_27))))))) = s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')),'happ'(s('fun'('type.num.num','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))),'happ'(s('fun'('fun'('type.num.num','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))),'fun'('type.num.num','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')))),'const.bool.LET_0'),s('fun'('type.num.num','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))),'_dst_x0x1x1_3'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))),'fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')))),'_dst_x00x11x01_3'(s('fun'('fun'('bool','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))),'fun'('bool','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'fun'('bool','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))))),'_dst_x00x01x11_3'(s('fun'('fun'('bool','fun'('bool','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')))),'fun'('bool','fun'('bool','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))))),'const.bool.LET_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('bool','fun'('bool','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))))),'_dst_x000x100x011_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.pair.prod'('bool','bool'),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')))),'const.pair.,_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_i_0_0'),s('fun'('bool','fun'('bool','type.pair.prod'('bool','bool'))),'const.pair.,_0'))),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'_dst_x00x01x10_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.words.w2n_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool',Vv))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'happ'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'))))))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.words.w2n_0'),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.num.num','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.words.w2n_0'),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))),s('type.num.num','const.bool.COND_3'(s('bool',V_27carry__in_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0'))))))))).
fof('thm.words.word_sub_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.word_div_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_div_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_sdiv_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sdiv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_div_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_div_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))),s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_div_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_div_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('thm.words.word_mod_def', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.word_srem_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_srem_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))),s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('ARITY_0_2_const.words.word_mod', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_mod_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('ARITY_0_1_const.words.word_2comp', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_2comp_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('ARITY_0_2_const.words.word_add', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_add_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('ARITY_0_1_const.bool.LET', axiom, ![V_27A_27,V_27B_27]: ![VV0]: s('fun'(V_27A_27,V_27B_27),'happ'(s('fun'('fun'(V_27A_27,V_27B_27),'fun'(V_27A_27,V_27B_27)),'const.bool.LET_0'),s('fun'(V_27A_27,V_27B_27),VV0))) = s('fun'(V_27A_27,V_27B_27),'const.bool.LET_1'(s('fun'(V_27A_27,V_27B_27),VV0)))).
fof('thm.words.word_smod_def', axiom, ![V_27A_27]: ![V_27s_27, V_27t_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_smod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27s_27),s('type.fcp.cart'('bool',V_27A_27),V_27t_27))) = s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.bool.LET_1'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.bool.LET_1'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'_dst_x00x11_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.bool.LET_1'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x1x1_4'(s('fun'('bool','fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.bool.COND_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'=_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_i_0_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'happ'(s('fun'('bool','fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.bool.COND_0'),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27s_27))))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'happ'(s('fun'('bool','fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.bool.COND_0'),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27t_27))))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_2comp_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x0_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_add_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_2comp_0'),s('type.fcp.cart'('bool',V_27A_27),V_27t_27))))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'happ'(s('fun'('bool','fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.bool.COND_0'),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27t_27))))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_add_0'),s('type.fcp.cart'('bool',V_27A_27),V_27t_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_i_0_0'))))))))),s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_mod_0'))))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'happ'(s('fun'('bool','fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.bool.COND_0'),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27s_27))))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_2comp_0'),s('type.fcp.cart'('bool',V_27A_27),V_27s_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27s_27))))))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'happ'(s('fun'('bool','fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.bool.COND_0'),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27t_27))))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_2comp_0'),s('type.fcp.cart'('bool',V_27A_27),V_27t_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27t_27)))))).
fof('thm.words.word_L2_def', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L2_0') = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))).
fof('thm.words.nzcv_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.fcp.cart'('bool',V_27A_27),V_27b_27) = s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.num.|48|_0')))) & s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'happ'(s('fun'('type.num.num','type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool')))),'happ'(s('fun'('fun'('type.num.num','type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool')))),'fun'('type.num.num','type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))))),'const.bool.LET_0'),s('fun'('type.num.num','type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool')))),'_dst_x0x1x1_3'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool')))),'fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))))),'_dst_x00x01x11_3'(s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))))),'const.pair.,_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','type.pair.prod'('bool','bool')))),'_dst_x00x01x11_3'(s('fun'('bool','fun'('type.pair.prod'('bool','bool'),'type.pair.prod'('bool','type.pair.prod'('bool','bool')))),'const.pair.,_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'=_0'),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.num.|48|_0'))))),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool'))),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','type.pair.prod'('bool','bool'))),'const.pair.,_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'const.bit.BIT_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('bool',Vv_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool',Vv))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))))))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))))))).
fof('_dst_x00x01_ax', axiom, ![VA1,VA,VA2,VA3]: ![V__x, V__0, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x01_2'(s('fun'(VA3,VA),V__x),s('fun'(VA2,VA3),V__0))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x1_2'(s('fun'(VA3,VA),V__x),s('fun'(VA2,VA3),V__0)))).
fof('_dst_x000x101_ax', axiom, ![VA2,VA,VA3,VA4,VA1]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x101_2'(s('fun'(VA4,VA),V__x),s('fun'(VA1,'fun'(VA3,VA4)),V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x01_2'(s('fun'(VA4,VA),V__x),s('fun'(VA3,VA4),'happ'(s('fun'(VA1,'fun'(VA3,VA4)),V__0),s(VA1,V__z)))))).
fof('thm.words.word_lt_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool'),'happ'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool'))),'_dst_x00x10_2'(s('fun'('fun'('bool','fun'('bool','bool')),'fun'('type.pair.prod'('bool','bool'),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('bool','bool'))),'_dst_x000x101_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'=_0'))))))))),s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('_dst_x00x00x01_ax', axiom, ![VA1,VA,VA3,VA2,VA4]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x00x01_3'(s('fun'(VA3,'fun'(VA4,VA)),V__x),s(VA3,V__0),s('fun'(VA2,VA4),V__1))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x1_3'(s('fun'(VA3,'fun'(VA4,VA)),V__x),s(VA3,V__0),s('fun'(VA2,VA4),V__1)))).
fof('_dst_x000x100x001_ax', axiom, ![VA2,VA,VA4,VA1,VA3,VA5]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x100x001_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA1,VA4),V__0),s('fun'(VA3,VA5),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x01_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,'happ'(s('fun'(VA1,VA4),V__0),s(VA1,V__z))),s('fun'(VA3,VA5),V__1)))).
fof('_dst_x0000x0100x1001_ax', axiom, ![VA3,VA,VA2,VA5,VA4,VA6,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0100x1001_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,VA5),V__0),s('fun'(VA1,'fun'(VA4,VA6)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x100x001_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,VA5),V__0),s('fun'(VA4,VA6),'happ'(s('fun'(VA1,'fun'(VA4,VA6)),V__1),s(VA1,V__z)))))).
fof('thm.words.word_gt_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_gt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool'),'happ'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('bool','fun'('bool','bool')),'fun'('type.pair.prod'('bool','bool'),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('bool','fun'('bool','bool')))),'_dst_x0000x0100x1001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'=_0'))))))))),s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.word_le_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool'),'happ'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('bool','fun'('bool','bool')),'fun'('type.pair.prod'('bool','bool'),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('bool','fun'('bool','bool')))),'_dst_x0000x0100x1001_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'=_0'))))))))))),s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.word_ge_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_ge_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool'),'happ'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool'))),'_dst_x00x10_2'(s('fun'('fun'('bool','fun'('bool','bool')),'fun'('type.pair.prod'('bool','bool'),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('bool','bool'))),'_dst_x00x10_2'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('bool','bool'),'_i_0_0'))))))))),s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.word_ls_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool'),'happ'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'_dst_x0_1'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool'),'happ'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('bool','fun'('bool','bool')),'fun'('type.pair.prod'('bool','bool'),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('bool','bool'))),'_dst_x000x010x100_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'~_0'),s('fun'('bool','bool'),'_i_0_0'))))))))))),s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.word_hi_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_hi_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool'),'happ'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'_dst_x0_1'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool'),'happ'(s('fun'('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('bool','fun'('bool','bool')),'fun'('type.pair.prod'('bool','bool'),'bool')),'const.pair.UNCURRY_0'),s('fun'('bool','fun'('bool','fun'('bool','bool'))),'_dst_x000x010x100_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','bool'),'~_0'))))))))))),s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.word_lo_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool'),'const.pair.UNCURRY_1'(s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'_dst_x0_1'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool'),'const.pair.UNCURRY_1'(s('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'_dst_x0_1'(s('fun'('type.pair.prod'('bool','bool'),'bool'),'const.pair.UNCURRY_1'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x10_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','bool'),'_i_0_0'))))))))))))),s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.word_hs_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_hs_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'bool'),'const.pair.UNCURRY_1'(s('fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool')),'happ'(s('fun'('fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool'),'fun'('bool','fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool'))),'_dst_x0_0'),s('fun'('type.pair.prod'('bool','type.pair.prod'('bool','bool')),'bool'),'const.pair.UNCURRY_1'(s('fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool')),'happ'(s('fun'('fun'('type.pair.prod'('bool','bool'),'bool'),'fun'('bool','fun'('type.pair.prod'('bool','bool'),'bool'))),'_dst_x0_0'),s('fun'('type.pair.prod'('bool','bool'),'bool'),'const.pair.UNCURRY_1'(s('fun'('bool','fun'('bool','bool')),'_dst_x0_0'))))))))))),s('type.pair.prod'('bool','type.pair.prod'('bool','type.pair.prod'('bool','bool'))),'const.words.nzcv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('ARITY_0_2_const.words.word_min', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_min_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_min_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.word_min_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_min_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('ARITY_0_2_const.words.word_max', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_max_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_max_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.word_max_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_max_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('ARITY_0_2_const.words.word_smin', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_smin_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_smin_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.word_smin_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_smin_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('ARITY_0_2_const.words.word_smax', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_smax_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_smax_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.word_smax_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_smax_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.word_abs_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.word_lsl_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.arithmetic.<=_1'(s('type.num.num',V_27n_27))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27)))))))))))).
fof('thm.words.word_lsr_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27)))))))))).
fof('thm.words.word_asr_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.arithmetic.<=_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))))),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27)))))))))).
fof('thm.words.word_ror_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.words.word_rol_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.words.word_rrx_def', axiom, ![V_27A_27]: ![V_27c_27, V_27w_27]: s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.words.word_rrx_1'(s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.pair.,_2'(s('bool',V_27c_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.pair.,_2'(s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('bool',V_27c_27),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.words.word_lsl_bv_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))))).
fof('thm.words.word_lsr_bv_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))))).
fof('thm.words.word_asr_bv_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))))).
fof('thm.words.word_ror_bv_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))))).
fof('thm.words.word_rol_bv_def', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))))).
fof('ARITY_0_2_const.words.word_or', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_or_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('ARITY_0_2_const.words.word_lsl', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.words.word_lsl_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.num.num',VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.num.num',VV1)))).
fof('thm.words.word_join_def', axiom, ![V_27A_27,V_27B_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.word_join_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27B_27),V_27w_27))) = s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.bool.LET_2'(s('fun'('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27))),'const.bool.LET_2'(s('fun'('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'fun'('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)))),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'fun'('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)))),'const.words.word_or_0'),s('fun'('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27))),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'fun'('type.num.num','type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)))),'const.words.word_lsl_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))))),s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))))),s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27B_27),V_27w_27)))))).
fof('thm.words.word_concat_def', axiom, ![V_27C_27,V_27A_27,V_27B_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27C_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27B_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.w2w_1'(s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.word_join_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27B_27),V_27w_27)))))).
fof('thm.words.word_replicate_def', axiom, ![V_27B_27,V_27A_27]: ![V_27n_27, V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_replicate_2'(s('type.num.num',V_27n_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))))).
fof('thm.words.concat_word_list_def|split|0', axiom, ![V_27A_27,V_27B_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.concat_word_list_1'(s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),'const.list.NIL_0'))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.concat_word_list_def|split|1', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27t_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.concat_word_list_1'(s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),'const.list.CONS_2'(s('type.fcp.cart'('bool',V_27A_27),V_27h_27),s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27t_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27h_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.concat_word_list_1'(s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27t_27))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.saturate_n2w_def', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_n2w_1'(s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))))).
fof('thm.words.saturate_w2w_def', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.saturate_w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.saturate_n2w_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.saturate_add_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_n2w_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('thm.words.saturate_sub_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('thm.words.saturate_mul_def', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_n2w_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('thm.words.ZERO_LT_dimword', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.dimword_IS_TWICE_INT_MIN', axiom, ![V_27A_27]: s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.dimword_sub_int_min', axiom, ![V_27A_27]: s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))).
fof('thm.words.words_|49||49|4_prove_ltb', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.ONE_LT_dimword', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.words_|49||49|7_prove_ltb', axiom, ![V_27A_27]: ?[V_27m_27]: s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27m_27)))).
fof('thm.words.MOD_DIMINDEX', axiom, ![V_27A_27]: ![V_27n_27]: s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))).
fof('thm.words.BITS_ZEROL_DIMINDEX', axiom, ![V_27A_27]: ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27))) = s('type.num.num',V_27n_27))).
fof('thm.words.MOD_2EXP_DIMINDEX', axiom, ![V_27A_27]: ![V_27n_27]: s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.num.num','const.bit.MOD_2EXP_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27)))).
fof('thm.words.INT_MIN_SUM', axiom, ![V_27A_27,V_27B_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) & p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27B_27,'bool'),'const.pred_set.UNIV_0')))))) & s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.sum.sum'(V_27A_27,V_27B_27)),'const.bool.the_value_0'))) = s('type.num.num','const.bool.COND_3'(s('bool',Vv),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.sum.sum'(V_27A_27,V_27B_27)),'const.bool.the_value_0'))))))).
fof('thm.words.ZERO_LT_INT_MIN', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.ZERO_LT_INT_MAX', axiom, ![V_27A_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.ZERO_LE_INT_MAX', axiom, ![V_27A_27]: p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.ZERO_LT_UINT_MAX', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.INT_MIN_LT_DIMWORD', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.INT_MAX_LT_DIMWORD', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.dimindex_lt_dimword', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.BOUND_ORDER|split|0', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.BOUND_ORDER|split|1', axiom, ![V_27A_27]: p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.BOUND_ORDER|split|2', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.dimindex_dimword_iso', axiom, ![V_27A_27,V_27B_27]: (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))) <=> s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))).
fof('thm.words.dimindex_dimword_le_iso', axiom, ![V_27A_27,V_27B_27]: s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))).
fof('thm.words.dimindex_dimword_lt_iso', axiom, ![V_27A_27,V_27B_27]: s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))).
fof('thm.words.dimindex_int_min_iso', axiom, ![V_27A_27,V_27B_27]: (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))) <=> s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))).
fof('thm.words.dimindex_int_min_le_iso', axiom, ![V_27A_27,V_27B_27]: s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))).
fof('thm.words.dimindex_int_min_lt_iso', axiom, ![V_27A_27,V_27B_27]: s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))).
fof('thm.words.dimindex_int_max_iso', axiom, ![V_27A_27,V_27B_27]: (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))) <=> s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))).
fof('thm.words.dimindex_int_max_le_iso', axiom, ![V_27A_27,V_27B_27]: s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))).
fof('thm.words.dimindex_int_max_lt_iso', axiom, ![V_27A_27,V_27B_27]: s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.INT_MAX_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))).
fof('thm.words.dimindex_uint_max_iso', axiom, ![V_27A_27,V_27B_27]: (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))) <=> s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))).
fof('thm.words.dimindex_uint_max_le_iso', axiom, ![V_27A_27,V_27B_27]: s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))).
fof('thm.words.dimindex_uint_max_lt_iso', axiom, ![V_27A_27,V_27B_27]: s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.UINT_MAX_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))).
fof('ARITY_0_3_const.bit.SLICE', axiom, ![VV0, VV1, VV2]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'const.bit.SLICE_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.num.num',VV2))) = s('type.num.num','const.bit.SLICE_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.num.num',VV2)))).
fof('_dst_x1x1x0_ax', axiom, ![VA,VA2,VA1,VA3]: ![V__x, V__0, V__1, V__z]: s(VA,'happ'(s('fun'(VA1,VA),'_dst_x1x1x0_3'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),V__x),s('fun'(VA1,VA2),V__0),s(VA3,V__1))),s(VA1,V__z))) = s(VA,'happ'(s('fun'(VA3,VA),'happ'(s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),V__x),s(VA1,V__z))),s(VA2,'happ'(s('fun'(VA1,VA2),V__0),s(VA1,V__z))))),s(VA3,V__1)))).
fof('thm.words.words_|49|43_prove_ltb', axiom, ![V_27n_27, V_27x_27]: s('type.num.num','const.sum_num.SUM_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','type.num.num'),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'const.bit.SLICE_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num',V_27x_27))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27)))))).
fof('thm.words.words_|49|44_prove_ltb', axiom, ![V_27n_27, V_27f_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.sum_num.SUM_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('type.num.num','type.num.num')),'const.bit.SBIT_0'),s('fun'('type.num.num','bool'),V_27f_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))))).
fof('thm.words.words_|49|45_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27]: s('type.num.num','const.sum_num.SUM_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('type.num.num','type.num.num')),'const.bit.SBIT_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27n_27))))))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))) = s('type.num.num','const.sum_num.SUM_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('type.num.num','type.num.num'),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'const.bit.SLICE_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num',V_27n_27)))))).
fof('thm.words.w2n_n2w', axiom, ![V_27A_27]: ![V_27n_27]: s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.words_|49|47_prove_ltb', axiom, ![V_27n_27, V_27f_27, V_27i_27]: (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num','const.sum_num.SUM_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('type.num.num','type.num.num')),'const.bit.SBIT_0'),s('fun'('type.num.num','bool'),V_27f_27),s('fun'('type.num.num','type.num.num'),'_i_0_0')))))))) <=> (p(s('bool','happ'(s('fun'('type.num.num','bool'),V_27f_27),s('type.num.num',V_27i_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))))))).
fof('thm.words.n2w_w2n', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.word_nchotomy', axiom, ![V_27A_27]: ![V_27w_27]: ?[V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))).
fof('thm.words.n2w_mod', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))).
fof('thm.words.n2w_|49||49|', axiom, ![V_27A_27]: ![V_27m_27, V_27n_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))) <=> s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27m_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.ranged_word_nchotomy', axiom, ![V_27A_27]: ![V_27w_27]: ?[V_27n_27]: (s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.dimindex_|49|_cases', axiom, ![V_27A_27]: ![V_27a_27]: (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) => (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.mod_dimindex', axiom, ![V_27A_27]: ![V_27n_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.WORD_INDUCT', axiom, ![V_27A_27]: ![V_27P_27]: ((p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27P_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))) & ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => (p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27P_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))))) => p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27P_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))))))))))) => ![V_27x_27]: p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27P_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))))).
fof('thm.words.w2n_|49||49|', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: (s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.w2n_lt', axiom, ![V_27A_27]: ![V_27w_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.word_|48|_n2w', axiom, ![V_27A_27]: s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.num.|48|_0')).
fof('thm.words.word_|49|_n2w', axiom, ![V_27A_27]: s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.words.w2n_eq_|48|', axiom, ![V_27A_27]: ![V_27w_27]: (s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.num.|48|_0') <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.n2w_dimword', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.word_2comp_dimindex_|49|', axiom, ![V_27A_27]: ![V_27w_27]: (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.word_add_n2w', axiom, ![V_27A_27]: ![V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_mul_n2w', axiom, ![V_27A_27]: ![V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_log2_n2w', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_log2_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.words.words_|49|66_prove_ltb', axiom, ![V_27wl_27, V_27a_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27wl_27)))) => s('type.num.num','const.bit.BITWISE_4'(s('type.num.num',V_27wl_27),s('fun'('bool','fun'('bool','bool')),'_dst_x00x10_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','bool'),'_i_0_0'))),s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))))).
fof('thm.words.words_|49|67_prove_ltb', axiom, ![V_27wl_27, V_27a_27, V_27x_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27wl_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27wl_27))))) => (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27)))))))))) <=> ~ (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27a_27)))))))).
fof('thm.words.word_|49|comp_n2w', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.words.word_2comp_n2w', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('ARITY_0_1_const.words.word_lsb', axiom, ![V_27A_27]: ![VV0]: s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_lsb_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('ARITY_1_2_const.words.word_bit', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_bit_1'(s('type.num.num',VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('bool','const.words.word_bit_2'(s('type.num.num',VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.word_lsb', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_lsb_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_bit_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.word_msb', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_msb_0') = s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_bit_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.word_lsb_n2w', axiom, ![V_27A_27]: ![V_27n_27]: s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('bool','const.arithmetic.ODD_1'(s('type.num.num',V_27n_27)))).
fof('thm.words.word_msb_n2w', axiom, ![V_27A_27]: ![V_27n_27]: s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27)))).
fof('thm.words.word_msb_n2w_numeric', axiom, ![V_27A_27]: ![V_27n_27]: s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.word_and_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('bool','fun'('bool','bool')),'|dollar|and_0'),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.word_or_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('bool','fun'('bool','bool')),'|dollar|or_0'),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.word_xor_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'=_0'))),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.word_nand_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_nand_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'))),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.word_nor_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_nor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'))),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.word_xnor_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xnor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('bool','fun'('bool','bool')),'|dollar|equals_0'),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.l2w_w2l', axiom, ![V_27A_27]: ![V_27b_27, V_27w_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.l2w_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),'const.words.w2l_2'(s('type.num.num',V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.w2l_l2w', axiom, ![V_27A_27]: ![V_27b_27, V_27l_27]: s('type.list.list'('type.num.num'),'const.words.w2l_2'(s('type.num.num',V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.l2w_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))))) = s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.s2w_w2s', axiom, ![V_27A_27]: ![V_27c2n_27, V_27n2c_27, V_27b_27, V_27w_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & ![V_27x_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27b_27)))) => s('type.num.num','happ'(s('fun'('type.string.char','type.num.num'),V_27c2n_27),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),V_27n2c_27),s('type.num.num',V_27x_27))))) = s('type.num.num',V_27x_27))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.s2w_3'(s('type.num.num',V_27b_27),s('fun'('type.string.char','type.num.num'),V_27c2n_27),s('type.list.list'('type.string.char'),'const.words.w2s_3'(s('type.num.num',V_27b_27),s('fun'('type.num.num','type.string.char'),V_27n2c_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.w2s_s2w', axiom, ![V_27A_27]: ![V_27b_27, V_27c2n_27, V_27n2c_27, V_27s_27]: s('type.list.list'('type.string.char'),'const.words.w2s_3'(s('type.num.num',V_27b_27),s('fun'('type.num.num','type.string.char'),V_27n2c_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.s2w_3'(s('type.num.num',V_27b_27),s('fun'('type.string.char','type.num.num'),V_27c2n_27),s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.list.list'('type.string.char'),'const.ASCIInumbers.n2s_3'(s('type.num.num',V_27b_27),s('fun'('type.num.num','type.string.char'),V_27n2c_27),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.ASCIInumbers.s2n_3'(s('type.num.num',V_27b_27),s('fun'('type.string.char','type.num.num'),V_27c2n_27),s('type.list.list'('type.string.char'),V_27s_27))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.NUMERAL_LESS_THM|split|0', axiom, ![V_27m_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27)))))))) <=> (s('type.num.num',V_27m_27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))).
fof('thm.words.NUMERAL_LESS_THM|split|1', axiom, ![V_27m_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27n_27)))))))) <=> (s('type.num.num',V_27m_27) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))) | p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))))))))).
fof('thm.words.word_bin_list', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_bin_list_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.word_to_bin_list_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0')).
fof('thm.words.word_oct_list', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_oct_list_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.word_to_oct_list_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0')).
fof('thm.words.word_dec_list', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_dec_list_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.word_to_dec_list_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0')).
fof('thm.words.word_hex_list', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_hex_list_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.num.num')),'const.words.word_to_hex_list_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0')).
fof('thm.words.word_bin_string', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.o_2'(s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_bin_string_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_bin_string_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0')).
fof('thm.words.word_oct_string', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.o_2'(s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_oct_string_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_oct_string_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0')).
fof('thm.words.word_dec_string', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.o_2'(s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_dec_string_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_dec_string_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0')).
fof('thm.words.word_hex_string', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.o_2'(s('fun'('type.list.list'('type.string.char'),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_from_hex_string_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.list.list'('type.string.char')),'const.words.word_to_hex_string_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0')).
fof('thm.words.word_|48|', axiom, ![V_27A_27]: ![V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => ~ (p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',V_27i_27))))))).
fof('thm.words.word_eq_|48|', axiom, ![V_27A_27]: ![V_27w_27]: (s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) <=> ![V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => ~ (p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27i_27)))))))).
fof('thm.words.word_T', axiom, ![V_27A_27]: ![V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.num.num',V_27i_27)))))).
fof('thm.words.FCP_T_F|split|0', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool','T_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.FCP_T_F|split|1', axiom, ![V_27B_27]: s('type.fcp.cart'('bool',V_27B_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool','F_0'))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.word_L', axiom, ![V_27A_27]: ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => (p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.num.num',V_27n_27)))) <=> s('type.num.num',V_27n_27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.word_H', axiom, ![V_27A_27]: ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0'),s('type.num.num',V_27n_27))) = s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))).
fof('thm.words.word_L2', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L2_0') = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))).
fof('thm.words.WORD_NEG_|49|', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.WORD_NEG_|49|_T', axiom, ![V_27A_27]: ![V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27i_27)))))).
fof('thm.words.WORD_MSB_|49|COMP', axiom, ![V_27A_27]: ![V_27w_27]: (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))) <=> ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.words.w2n_minus|49|', axiom, ![V_27A_27]: s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.WORD_NOT_NOT', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_DE_MORGAN_THM|split|0', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_DE_MORGAN_THM|split|1', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_NOT_XOR|split|0', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.WORD_NOT_XOR|split|1', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_NOT_XOR|split|2', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_AND_CLAUSES|split|0', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_AND_CLAUSES|split|1', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_AND_CLAUSES|split|2', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_AND_CLAUSES|split|3', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_AND_CLAUSES|split|4', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_OR_CLAUSES|split|0', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.WORD_OR_CLAUSES|split|1', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.WORD_OR_CLAUSES|split|2', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_OR_CLAUSES|split|3', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_OR_CLAUSES|split|4', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_XOR_CLAUSES|split|0', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_XOR_CLAUSES|split|1', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_XOR_CLAUSES|split|2', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_XOR_CLAUSES|split|3', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_XOR_CLAUSES|split|4', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_AND_ASSOC', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_OR_ASSOC', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_XOR_ASSOC', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_AND_COMM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_OR_COMM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_XOR_COMM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_AND_ABSORD', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_OR_ABSORB', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.WORD_AND_COMP', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_OR_COMP', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.WORD_XOR_COMP', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.WORD_RIGHT_AND_OVER_OR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_RIGHT_OR_OVER_AND', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_RIGHT_AND_OVER_XOR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LEFT_AND_OVER_OR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LEFT_OR_OVER_AND', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LEFT_AND_OVER_XOR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_XOR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))))).
fof('thm.words.WORD_NAND_NOT_AND', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_nand_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_NOR_NOT_OR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_nor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_XNOR_NOT_XOR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xnor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.words_234_prove_ltb', axiom, ![V_27a_27, V_27b_27, V_27n_27]: ((~ (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))))) | ~ (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27)))))) => ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27)))) | p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27)))))) & s('type.num.num','const.bit.SBIT_2'(s('bool',Vv),s('type.num.num',V_27n_27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.SBIT_2'(s('bool','const.bit.BIT_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))),s('type.num.num',V_27n_27))),s('type.num.num','const.bit.SBIT_2'(s('bool','const.bit.BIT_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27))),s('type.num.num',V_27n_27)))))))).
fof('thm.words.words_235_prove_ltb', axiom, ![V_27n_27, V_27a_27, V_27b_27]: (![V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27)))) => (~ (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27i_27))),s('type.num.num',V_27a_27))))) | ~ (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27i_27))),s('type.num.num',V_27b_27))))))) => s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.sum_num.SUM_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('type.num.num','type.num.num')),'const.bit.SBIT_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27a_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('type.num.num','const.sum_num.SUM_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('type.num.num','type.num.num')),'const.bit.SBIT_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27b_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))) = s('type.num.num','const.bit.BITWISE_4'(s('type.num.num',V_27n_27),s('fun'('bool','fun'('bool','bool')),'|dollar|or_0'),s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))).
fof('thm.words.WORD_ADD_OR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))).
fof('thm.words.WORD_ADD_XOR', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))).
fof('thm.words.WORD_AND_EXP_SUB|49|', axiom, ![V_27A_27]: ![V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27m_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27m_27)))))))).
fof('thm.words.w2w', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27, V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))) => (p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27i_27)))) <=> (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27i_27)))))))).
fof('thm.words.sw2sw', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27, V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))) => ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) | p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))) & s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27i_27))) = s('bool','const.bool.COND_3'(s('bool',Vv),s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27i_27))),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.w2w_id', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.sw2sw_id', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.w2w_w2w', axiom, ![V_27C_27,V_27B_27,V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27C_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.words_244_prove_ltb', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27w_27]: (~ ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0')))))))) => s('type.fcp.cart'('bool',V_27C_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.words_245_prove_ltb', axiom, ![V_27C_27,V_27B_27,V_27A_27]: ![V_27w_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0'))))))) => s('type.fcp.cart'('bool',V_27C_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.words.sw2sw_sw2sw', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27w_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0')))))))) & s('type.fcp.cart'('bool',V_27C_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27C_27),'const.bool.COND_3'(s('bool',Vv),s('type.fcp.cart'('bool',V_27C_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.fcp.cart'('bool',V_27C_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.words.sw2sw_w2w', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.word_bit', axiom, ![V_27A_27]: ![V_27w_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27b_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27b_27))) = s('bool','const.words.word_bit_2'(s('type.num.num',V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.word_slice_n2w', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.SLICE_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27l_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_bits_n2w', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27l_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_bit_n2w', axiom, ![V_27A_27]: ![V_27b_27, V_27n_27]: (p(s('bool','const.words.word_bit_2'(s('type.num.num',V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))))).
fof('thm.words.word_signed_bits_n2w', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_signed_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.SIGN_EXTEND_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27h_27))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num',V_27l_27))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27l_27),s('type.num.num',V_27n_27)))))))).
fof('thm.words.words_253_prove_ltb', axiom, ![V_27l_27, V_27h_27, V_27t_27]: s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27t_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27t_27),s('type.num.num',V_27l_27))))) = s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27t_27)))).
fof('thm.words.word_sign_extend_bits', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_signed_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sign_extend_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27h_27))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num',V_27l_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.word_index_n2w', axiom, ![V_27A_27]: ![V_27index_7c32_7ctoo_7c32_7clarge_27, V_27n_27, V_27i_27]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))),s('type.num.num',V_27i_27))) = s('bool','const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))),s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.combin.FAIL_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('bool',V_27index_7c32_7ctoo_7c32_7clarge_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))),s('type.num.num',V_27i_27)))))).
fof('thm.words.word_index', axiom, ![V_27A_27]: ![V_27n_27, V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27i_27))) = s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))))).
fof('thm.words.words_257_prove_ltb|split|0', axiom, ![V_27m_27, V_27n_27]: s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))))) = s('type.num.num',V_27m_27)).
fof('thm.words.words_257_prove_ltb|split|1', axiom, ![V_27m_27, V_27n_27]: s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27m_27))) = s('type.num.num',V_27m_27)).
fof('thm.words.words_258_prove_ltb', axiom, ![V_27c_27, V_27b_27, V_27a_27]: s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27c_27),s('type.num.num',V_27a_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27c_27),s('type.num.num',V_27b_27))))))))) = s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27)))).
fof('thm.words.words_259_prove_ltb', axiom, ![V_27x_27, V_27y_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27)))) => s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27))) = s('type.num.num',V_27x_27))).
fof('thm.words.word_bits_w2w', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27, V_27h_27, V_27l_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.word_reverse_n2w', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BIT_REVERSE_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_modify_n2w', axiom, ![V_27A_27]: ![V_27f_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_modify_2'(s('fun'('type.num.num','fun'('bool','bool')),V_27f_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BIT_MODIFY_3'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('type.num.num','fun'('bool','bool')),V_27f_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.fcp_n2w', axiom, ![V_27A_27]: ![V_27f_27]: s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),V_27f_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_modify_2'(s('fun'('type.num.num','fun'('bool','bool')),'_dst_x00x10_2'(s('fun'('type.num.num','bool'),V_27f_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.w2n_w2w', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.num.num','const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('thm.words.w2n_w2w_le', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.words.w2w_lt', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.w2w_n2w', axiom, ![V_27B_27,V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))))))).
fof('thm.words.w2w_|48|', axiom, ![V_27B_27,V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.w2n_|49||49|_lift', axiom, ![V_27A_27,V_27C_27,V_27B_27]: ![V_27a_27, V_27b_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0')))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0'))))))) => (s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27B_27),V_27b_27))) <=> s('type.fcp.cart'('bool',V_27C_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27B_27),V_27b_27)))))).
fof('thm.words.word_extract_n2w', axiom, ![V_27B_27,V_27A_27]: ![V_27n_27, V_27l_27, V_27h_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27l_27),s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27l_27))))),s('type.num.num',V_27l_27),s('type.num.num',V_27n_27)))))))).
fof('thm.words.n2w_BITS', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))).
fof('thm.words.word_extract_w2w', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27w_27, V_27h_27, V_27l_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27C_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_w2w_EXTRACT', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_EQ', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: (![V_27x_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('bool','const.words.word_bit_2'(s('type.num.num',V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('bool','const.words.word_bit_2'(s('type.num.num',V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('ARITY_2_3_const.fcp.|58|+', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'(V_27A_27,V_27B_27),'happ'(s('fun'('type.fcp.cart'(V_27A_27,V_27B_27),'type.fcp.cart'(V_27A_27,V_27B_27)),'const.fcp.|58|+_2'(s('type.num.num',VV0),s(V_27A_27,VV1))),s('type.fcp.cart'(V_27A_27,V_27B_27),VV2))) = s('type.fcp.cart'(V_27A_27,V_27B_27),'const.fcp.|58|+_3'(s('type.num.num',VV0),s(V_27A_27,VV1),s('type.fcp.cart'(V_27A_27,V_27B_27),VV2)))).
fof('thm.words.BIT_UPDATE', axiom, ![V_27A_27]: ![V_27n_27, V_27x_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.fcp.|58|+_2'(s('type.num.num',V_27n_27),s('bool',V_27x_27))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_modify_1'(s('fun'('type.num.num','fun'('bool','bool')),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27n_27))),s('bool',V_27x_27)))))).
fof('thm.words.WORD_MODIFY_BIT', axiom, ![V_27A_27]: ![V_27f_27, V_27w_27, V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_modify_2'(s('fun'('type.num.num','fun'('bool','bool')),V_27f_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27i_27))) = s('bool','happ'(s('fun'('bool','bool'),'happ'(s('fun'('type.num.num','fun'('bool','bool')),V_27f_27),s('type.num.num',V_27i_27))),s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27i_27))))))).
fof('thm.words.words_277_prove_ltb', axiom, ![V_27A_27]: p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))).
fof('thm.words.WORD_BIT_BITS', axiom, ![V_27A_27]: ![V_27b_27, V_27w_27]: (p(s('bool','const.words.word_bit_2'(s('type.num.num',V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27b_27),s('type.num.num',V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))).
fof('thm.words.words_279_prove_ltb', axiom, ![V_27l_7c49_7c_27, V_27h2_27, V_27d_27]: s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27d_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_7c49_7c_27),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h2_27),s('type.num.num',V_27d_27))))))) = s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27h2_27),s('type.num.num',V_27l_7c49_7c_27))),s('type.num.num',V_27d_27)))).
fof('thm.words.WORD_BITS_COMP_THM', axiom, ![V_27A_27]: ![V_27h_7c49_7c_27, V_27l_7c49_7c_27, V_27h2_27, V_27l2_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h2_27),s('type.num.num',V_27l2_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_7c49_7c_27),s('type.num.num',V_27l_7c49_7c_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_7c49_7c_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27h2_27),s('type.num.num',V_27l_7c49_7c_27))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l2_27),s('type.num.num',V_27l_7c49_7c_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_BITS_EXTRACT', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_BITS_LSR', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_BITS_ZERO', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_BITS_ZERO2', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_BITS_ZERO3', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_BITS_LT', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27h_27))),s('type.num.num',V_27l_27))))))))).
fof('thm.words.WORD_EXTRACT_LT', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27h_27))),s('type.num.num',V_27l_27))))))))).
fof('thm.words.WORD_EXTRACT_ZERO', axiom, ![V_27A_27,V_27B_27]: ![V_27h_27, V_27l_27, V_27w_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27)))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_EXTRACT_ZERO2', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27l_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_EXTRACT_ZERO3', axiom, ![V_27A_27,V_27B_27]: ![V_27h_27, V_27l_27, V_27w_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27)))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_SLICE_THM', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27l_27)))).
fof('thm.words.WORD_SLICE_ZERO', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_SLICE_ZERO2', axiom, ![V_27A_27]: ![V_27l_27, V_27h_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_SLICE_BITS_THM', axiom, ![V_27A_27]: ![V_27h_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_BITS_SLICE_THM', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_SLICE_COMP_THM', axiom, ![V_27A_27]: ![V_27h_27, V_27m_7c39_7c_27, V_27m_27, V_27l_27, V_27w_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))) & (s('type.num.num',V_27m_7c39_7c_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27h_27)))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27m_7c39_7c_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_EXTRACT_COMP_THM', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27w_27, V_27h_27, V_27l_27, V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27),s('type.fcp.cart'('bool',V_27C_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27C_27),V_27w_27)))).
fof('thm.words.WORD_EXTRACT_BITS_COMP', axiom, ![V_27B_27,V_27A_27]: ![V_27n_27, V_27l_27, V_27k_27, V_27j_27, V_27h_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27j_27),s('type.num.num',V_27k_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27j_27),s('type.num.num',V_27l_27))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27l_27))),s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))).
fof('thm.words.WORD_ALL_BITS', axiom, ![V_27A_27]: ![V_27w_27, V_27h_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27h_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.EXTRACT_ALL_BITS', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27w_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27h_27)))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_BITS_MIN_HIGH', axiom, ![V_27A_27]: ![V_27w_27, V_27h_27, V_27l_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27h_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_EXTRACT_MIN_HIGH|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27h_27))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_EXTRACT_MIN_HIGH|split|1', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num',V_27h_27))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.CONCAT_EXTRACT', axiom, ![V_27B_27,V_27C_27,V_27D_27,V_27A_27]: ![V_27h_27, V_27m_27, V_27l_27, V_27w_27]: ((s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27m_27))) = s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))) & (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27l_27))) = s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0'))) & (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27l_27))) = s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27D_27),'const.bool.the_value_0'))) & ~ (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.sum.sum'(V_27B_27,V_27C_27)),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) => s('type.fcp.cart'('bool',V_27D_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27C_27),'const.words.word_extract_3'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27D_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.EXTRACT_CONCAT', axiom, ![V_27C_27,V_27B_27,V_27A_27]: ![V_27v_27, V_27w_27]: ((p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) & (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27B_27,'bool'),'const.pred_set.UNIV_0')))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0')))))))) => (s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27C_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27B_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27B_27),V_27w_27) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.fcp.cart'('bool',V_27C_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27B_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))).
fof('thm.words.EXTRACT_JOIN', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27m_27, V_27m_7c39_7c_27, V_27l_27, V_27s_27, V_27w_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27m_7c39_7c_27),s('type.num.num',V_27h_27)))) & (s('type.num.num',V_27m_7c39_7c_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.num.num',V_27s_27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27m_7c39_7c_27),s('type.num.num',V_27l_27)))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27m_7c39_7c_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27s_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.EXTRACT_JOIN_ADD', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27m_27, V_27m_7c39_7c_27, V_27l_27, V_27s_27, V_27w_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27m_7c39_7c_27),s('type.num.num',V_27h_27)))) & (s('type.num.num',V_27m_7c39_7c_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.num.num',V_27s_27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27m_7c39_7c_27),s('type.num.num',V_27l_27)))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27m_7c39_7c_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27s_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.EXTEND_EXTRACT', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27h_27, V_27l_27, V_27w_27]: (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27l_27))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27C_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.words.WORD_SLICE_OVER_BITWISE|split|0', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_SLICE_OVER_BITWISE|split|1', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_SLICE_OVER_BITWISE|split|2', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_BITS_OVER_BITWISE|split|0', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_BITS_OVER_BITWISE|split|1', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_BITS_OVER_BITWISE|split|2', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_w2w_OVER_BITWISE|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_w2w_OVER_BITWISE|split|1', axiom, ![V_27B_27,V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_w2w_OVER_BITWISE|split|2', axiom, ![V_27B_27,V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_EXTRACT_OVER_BITWISE|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_EXTRACT_OVER_BITWISE|split|1', axiom, ![V_27C_27,V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27C_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27C_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27C_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_EXTRACT_OVER_BITWISE|split|2', axiom, ![V_27D_27,V_27A_27]: ![V_27h_27, V_27l_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27D_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27D_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27D_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27D_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.words_3|49|2_prove_ltb', axiom, ![V_27h_7c49_7c_27, V_27h2_27, V_27a_27, V_27b_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27h_7c49_7c_27),s('type.num.num',V_27h2_27)))) => s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h_7c49_7c_27),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h2_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27a_27))),s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h2_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27))))))) = s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h_7c49_7c_27),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))))).
fof('thm.words.words_3|49|3_prove_ltb', axiom, ![V_27h_7c49_7c_27, V_27h2_27, V_27a_27, V_27b_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27h_7c49_7c_27),s('type.num.num',V_27h2_27)))) => s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h_7c49_7c_27),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h2_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27a_27))),s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h2_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27))))))) = s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27h_7c49_7c_27),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))))).
fof('thm.words.WORD_w2w_OVER_ADD', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('thm.words.WORD_w2w_OVER_MUL', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('thm.words.WORD_EXTRACT_OVER_ADD', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27, V_27b_27, V_27h_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27h_27)))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.WORD_EXTRACT_OVER_MUL', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27, V_27b_27, V_27h_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27h_27)))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.WORD_EXTRACT_OVER_ADD2', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27, V_27b_27, V_27h_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.WORD_EXTRACT_OVER_MUL2', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27, V_27b_27, V_27h_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.WORD_EXTRACT_ID', axiom, ![V_27A_27]: ![V_27w_27, V_27h_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27h_27)))))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.words_32|49|_prove_ltb', axiom, ![V_27i_27, V_27j_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27j_27)))) => ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27i_27),s('fun'('type.num.num','bool'),'const.words.BIT_SET_2'(s('type.num.num',V_27j_27),s('type.num.num',V_27n_27))))))))).
fof('thm.words.words_322_prove_ltb', axiom, ![V_27k_27, V_27i_27, V_27n_27]: s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))) = s('bool','const.bool.IN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27k_27))),s('fun'('type.num.num','bool'),'const.words.BIT_SET_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.BIT_SET', axiom, ![V_27i_27, V_27n_27]: s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))) = s('bool','const.bool.IN_2'(s('type.num.num',V_27i_27),s('fun'('type.num.num','bool'),'const.words.BIT_SET_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))))).
fof('thm.words.words_324_prove_ltb', axiom, ![V_27i_27, V_27a_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27a_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27b_27))))),s('type.num.num',V_27i_27)))) => (~ (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27a_27))))) & ~ (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27b_27)))))))).
fof('thm.words.words_325_prove_ltb', axiom, ![V_27i_27, V_27a_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27a_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27b_27))))),s('type.num.num',V_27i_27)))) => (~ (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27a_27))))) | ~ (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27b_27)))))))).
fof('thm.words.words_326_prove_ltb', axiom, ![V_27op_27, V_27i_27, V_27l_27, V_27a_27, V_27b_27]: ((~ (p(s('bool','happ'(s('fun'('bool','bool'),'happ'(s('fun'('bool','fun'('bool','bool')),V_27op_27),s('bool','F_0'))),s('bool','F_0'))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27l_27))))) => s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num','const.bit.BITWISE_4'(s('type.num.num',V_27l_27),s('fun'('bool','fun'('bool','bool')),V_27op_27),s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))) = s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27a_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27b_27))))))),s('fun'('bool','fun'('bool','bool')),V_27op_27),s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))))).
fof('thm.words.words_327_prove_ltb', axiom, ![V_27op_27, V_27i_27, V_27l_27, V_27a_27, V_27b_27]: ((![V_27x_27]: (~ (p(s('bool','happ'(s('fun'('bool','bool'),'happ'(s('fun'('bool','fun'('bool','bool')),V_27op_27),s('bool',V_27x_27))),s('bool','F_0'))))) & ~ (p(s('bool','happ'(s('fun'('bool','bool'),'happ'(s('fun'('bool','fun'('bool','bool')),V_27op_27),s('bool','F_0'))),s('bool',V_27x_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27l_27))))) => s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num','const.bit.BITWISE_4'(s('type.num.num',V_27l_27),s('fun'('bool','fun'('bool','bool')),V_27op_27),s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))) = s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27a_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27b_27))))))),s('fun'('bool','fun'('bool','bool')),V_27op_27),s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))))).
fof('thm.words.words_328_prove_ltb', axiom, ![V_27op_27, V_27i_27, V_27l_27, V_27a_27, V_27b_27]: ((![V_27x_27]: ~ (p(s('bool','happ'(s('fun'('bool','bool'),'happ'(s('fun'('bool','fun'('bool','bool')),V_27op_27),s('bool','F_0'))),s('bool',V_27x_27))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27l_27))))) => s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num','const.bit.BITWISE_4'(s('type.num.num',V_27l_27),s('fun'('bool','fun'('bool','bool')),V_27op_27),s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))) = s('bool','const.bit.BIT_2'(s('type.num.num',V_27i_27),s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27a_27))))),s('fun'('bool','fun'('bool','bool')),V_27op_27),s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))))).
fof('thm.words.words_329_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27m_27))))))),s('fun'('bool','fun'('bool','bool')),'|dollar|or_0'),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.words_33|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27m_27))))))),s('fun'('bool','fun'('bool','bool')),'|dollar|and_0'),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.words_33|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','bool'),'~_0'))),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.words_332_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27n_27))))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','bool'),'~_0'))),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.words_333_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27m_27))))))),s('fun'('bool','fun'('bool','bool')),'|dollar|or_0'),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))))).
fof('thm.words.words_334_prove_ltb', axiom, ![V_27A_27]: ![V_27b_27, V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))))).
fof('thm.words.words_335_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27m_27))))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','bool'),'~_0'))),s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))))).
fof('thm.words.words_336_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27m_27))))))),s('fun'('bool','fun'('bool','bool')),'|dollar|and_0'),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))))).
fof('thm.words.WORD_LITERAL_AND|split|2', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27n_27))))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','bool'),'~_0'))),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.WORD_LITERAL_OR|split|2', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27m_27))))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','bool'),'~_0'))),s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))))).
fof('thm.words.WORD_LITERAL_XOR', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.bit.BITWISE_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.bit.LOG2_1'(s('type.num.num',V_27m_27))))))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'=_0'))),s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))).
fof('thm.words.words_34|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27c_27]: s('type.list.list'(V_27A_27),'const.list.SNOC_2'(s(V_27A_27,V_27c_27),s('type.list.list'(V_27A_27),'const.list.GENLIST_2'(s('fun'('type.num.num',V_27A_27),'const.combin.K_1'(s(V_27A_27,V_27c_27))),s('type.num.num',V_27n_27))))) = s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27c_27),s('type.list.list'(V_27A_27),'const.list.GENLIST_2'(s('fun'('type.num.num',V_27A_27),'const.combin.K_1'(s(V_27A_27,V_27c_27))),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_replicate_concat_word_list', axiom, ![V_27B_27,V_27A_27]: ![V_27n_27, V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_replicate_2'(s('type.num.num',V_27n_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.concat_word_list_1'(s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),'const.list.GENLIST_2'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.combin.K_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27)))))).
fof('ARITY_1_2_const.words.word_and', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_and_1'(s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('ARITY_0_1_const.words.word_|49|comp', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_|49|comp_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.words.bit_field_insert', axiom, ![V_27A_27,V_27B_27]: ![V_27h_27, V_27l_27, V_27a_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.bit_field_insert_4'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27B_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.LET_2'(s('fun'('type.fcp.cart'('bool',V_27B_27),'type.fcp.cart'('bool',V_27B_27)),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool',V_27B_27),'fun'('type.fcp.cart'('bool',V_27B_27),'type.fcp.cart'('bool',V_27B_27))),'const.words.word_or_0'),s('fun'('type.fcp.cart'('bool',V_27B_27),'type.fcp.cart'('bool',V_27B_27)),'const.words.word_and_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num',V_27l_27))))),s('fun'('type.fcp.cart'('bool',V_27B_27),'type.fcp.cart'('bool',V_27B_27)),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27B_27),'type.fcp.cart'('bool',V_27B_27)),'const.words.word_and_1'(s('type.fcp.cart'('bool',V_27B_27),V_27b_27))),s('fun'('type.fcp.cart'('bool',V_27B_27),'type.fcp.cart'('bool',V_27B_27)),'const.words.word_|49|comp_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_slice_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))).
fof('thm.words.word_join_index', axiom, ![V_27A_27,V_27B_27]: ![V_27i_27, V_27a_27, V_27b_27]: ((p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) & (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27B_27,'bool'),'const.pred_set.UNIV_0')))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.sum.sum'(V_27A_27,V_27B_27)),'const.bool.the_value_0')))))))) => s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.word_join_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27B_27),V_27b_27))),s('type.num.num',V_27i_27))) = s('bool','const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))),s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27B_27),V_27b_27),s('type.num.num',V_27i_27))),s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))))))))).
fof('thm.words.words_344_prove_ltb', axiom, ![V_27B_27,V_27A_27]: ![V_27f_27]: ~ (p(s('bool','const.list.NULL_1'(s('type.list.list'(V_27B_27),'const.list.GENLIST_2'(s('fun'('type.num.num',V_27B_27),V_27f_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('ARITY_0_2_const.words.word_and', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_and_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.words_345_prove_ltb', axiom, ![V_27l_27, V_27b_27]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_and_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27))))),s('type.num.num','const.num.|48|_0'))) = s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('bool','bool')),'|dollar|and_0'),s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('bool'),'const.list.MAP_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27)))))).
fof('ARITY_0_3_const.words.word_extract', axiom, ![V_27B_27,V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27B_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27B_27)),'happ'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27B_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27B_27)))),'const.words.word_extract_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.fcp.cart'('bool',V_27A_27),VV2))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.fcp.cart'('bool',V_27A_27),VV2)))).
fof('thm.words.foldl_reduce_and', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_and_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one'))),'const.list.FOLDL_1'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_and_0'))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.list.HD_0'),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.list.list'('type.fcp.cart'('bool','type.one.one'))),'const.list.TL_0'))))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x0x1_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')))),'const.words.word_extract_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.words_347_prove_ltb', axiom, ![V_27l_27, V_27b_27]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_or_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27))))),s('type.num.num','const.num.|48|_0'))) = s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('bool','bool')),'|dollar|or_0'),s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('bool'),'const.list.MAP_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27)))))).
fof('thm.words.foldl_reduce_or', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_or_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one'))),'const.list.FOLDL_1'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_or_0'))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.list.HD_0'),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.list.list'('type.fcp.cart'('bool','type.one.one'))),'const.list.TL_0'))))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x0x1_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')))),'const.words.word_extract_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('ARITY_0_2_const.words.word_xor', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_xor_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.words_349_prove_ltb', axiom, ![V_27l_27, V_27b_27]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_xor_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27))))),s('type.num.num','const.num.|48|_0'))) = s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'=_0'))),s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('bool'),'const.list.MAP_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27)))))).
fof('ARITY_0_1_const.words.reduce_xor', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_xor_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_xor_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.words.foldl_reduce_xor', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_xor_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one'))),'const.list.FOLDL_1'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_xor_0'))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.list.HD_0'),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.list.list'('type.fcp.cart'('bool','type.one.one'))),'const.list.TL_0'))))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x0x1_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')))),'const.words.word_extract_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('ARITY_0_2_const.words.word_nand', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_nand_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_nand_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.words_35|49|_prove_ltb', axiom, ![V_27l_27, V_27b_27]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_nand_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27))))),s('type.num.num','const.num.|48|_0'))) = s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'))),s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('bool'),'const.list.MAP_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27)))))).
fof('ARITY_0_1_const.words.reduce_nand', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_nand_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_nand_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.words.foldl_reduce_nand', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_nand_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one'))),'const.list.FOLDL_1'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_nand_0'))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.list.HD_0'),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.list.list'('type.fcp.cart'('bool','type.one.one'))),'const.list.TL_0'))))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x0x1_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')))),'const.words.word_extract_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('ARITY_0_2_const.words.word_nor', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_nor_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_nor_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.words_353_prove_ltb', axiom, ![V_27l_27, V_27b_27]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_nor_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27))))),s('type.num.num','const.num.|48|_0'))) = s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'))),s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('bool'),'const.list.MAP_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27)))))).
fof('ARITY_0_1_const.words.reduce_nor', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_nor_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_nor_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.words.foldl_reduce_nor', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_nor_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one'))),'const.list.FOLDL_1'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_nor_0'))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.list.HD_0'),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.list.list'('type.fcp.cart'('bool','type.one.one'))),'const.list.TL_0'))))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x0x1_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')))),'const.words.word_extract_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('ARITY_0_2_const.words.word_xnor', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_xnor_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xnor_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.words_355_prove_ltb', axiom, ![V_27l_27, V_27b_27]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_xnor_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27))))),s('type.num.num','const.num.|48|_0'))) = s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('bool','bool')),'|dollar|equals_0'),s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool','type.one.one'),V_27b_27))),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('bool'),'const.list.MAP_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),V_27l_27)))))).
fof('ARITY_0_1_const.words.reduce_xnor', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')),'const.words.reduce_xnor_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_xnor_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.words.foldl_reduce_xnor', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_xnor_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'happ'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one'))),'const.list.FOLDL_1'(s('fun'('type.fcp.cart'('bool','type.one.one'),'fun'('type.fcp.cart'('bool','type.one.one'),'type.fcp.cart'('bool','type.one.one'))),'const.words.word_xnor_0'))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.fcp.cart'('bool','type.one.one')),'const.list.HD_0'),s('fun'('type.list.list'('type.fcp.cart'('bool','type.one.one')),'type.list.list'('type.fcp.cart'('bool','type.one.one'))),'const.list.TL_0'))))),s('type.list.list'('type.fcp.cart'('bool','type.one.one')),'const.list.GENLIST_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x0x1_2'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'const.bool.LET_1'(s('fun'('type.num.num','type.fcp.cart'('bool','type.one.one')),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool','type.one.one')))),'const.words.word_extract_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.LOG2_w2n_lt', axiom, ![V_27A_27]: ![V_27w_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.LOG2_w2n', axiom, ![V_27A_27]: ![V_27w_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) => s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.while.LEAST_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))).
fof('thm.words.LEAST_BIT_LT', axiom, ![V_27A_27]: ![V_27w_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.while.LEAST_1'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.words_36|48|_prove_ltb', axiom, ![V_27n_27, V_27m_27, V_27a_27]: s('type.list.list'('bool'),'const.list.APPEND_2'(s('type.list.list'('bool'),'const.list.GENLIST_2'(s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.bit.BITS_3'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27m_27))))),s('type.num.num',V_27n_27))),s('type.list.list'('bool'),V_27a_27))) = s('type.list.list'('bool'),'const.numposrep.BOOLIFY_3'(s('type.num.num',V_27n_27),s('type.num.num',V_27m_27),s('type.list.list'('bool'),V_27a_27)))).
fof('thm.words.words_36|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27]: s('type.list.list'('bool'),'const.list.GENLIST_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.list.list'('bool'),'const.list.GENLIST_2'(s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.word_reduce_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27f_27]: s('type.fcp.cart'('bool','type.one.one'),'const.words.word_reduce_2'(s('fun'('bool','fun'('bool','bool')),V_27f_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool','type.one.one'),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool','const.bool.LET_2'(s('fun'('type.list.list'('bool'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('type.list.list'('bool'),'bool')),'const.list.FOLDL_1'(s('fun'('bool','fun'('bool','bool')),V_27f_27))),s('fun'('type.list.list'('bool'),'bool'),'const.list.HD_0'),s('fun'('type.list.list'('bool'),'type.list.list'('bool')),'const.list.TL_0'))),s('type.list.list'('bool'),'const.numposrep.BOOLIFY_3'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27),s('type.list.list'('bool'),'const.list.NIL_0')))))))))).
fof('thm.words.words_363_prove_ltb', axiom, ![V_27A_27]: s('type.list.list'('bool'),'const.list.GENLIST_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.list.list'('bool'),'const.list.GENLIST_2'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool','T_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.words_364_prove_ltb', axiom, ![V_27A_27]: s('type.list.list'('bool'),'const.list.GENLIST_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.list.list'('bool'),'const.list.GENLIST_2'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool','F_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.words_365_prove_ltb|split|0', axiom, ![V_27b_27]: (s('type.fcp.cart'('bool','type.one.one'),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool',V_27b_27))))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s('bool',V_27b_27)))).
fof('thm.words.words_365_prove_ltb|split|1', axiom, ![V_27b_27]: (s('type.fcp.cart'('bool','type.one.one'),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool',V_27b_27))))) = s('type.fcp.cart'('bool','type.one.one'),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) <=> ~ (p(s('bool',V_27b_27))))).
fof('thm.words.words_366_prove_ltb', axiom, ![V_27A_27]: ![V_27c_27, V_27n_27]: s('type.list.list'(V_27A_27),'const.list.TL_1'(s('type.list.list'(V_27A_27),'const.list.GENLIST_2'(s('fun'('type.num.num',V_27A_27),'const.combin.K_1'(s(V_27A_27,V_27c_27))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))))))) = s('type.list.list'(V_27A_27),'const.list.GENLIST_2'(s('fun'('type.num.num',V_27A_27),'const.combin.K_1'(s(V_27A_27,V_27c_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.words_367_prove_ltb', axiom, ![V_27l_27]: ~ (p(s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('bool','bool')),'|dollar|and_0'),s('bool','F_0'),s('type.list.list'('bool'),V_27l_27)))))).
fof('thm.words.words_368_prove_ltb', axiom, ![V_27l_27]: p(s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('bool','bool')),'|dollar|or_0'),s('bool','T_0'),s('type.list.list'('bool'),V_27l_27))))).
fof('thm.words.NOT_UINTMAXw', axiom, ![V_27A_27]: ![V_27w_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')) => ?[V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & ~ (p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27i_27)))))))).
fof('thm.words.NOT_|48|w', axiom, ![V_27A_27]: ![V_27w_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) => ?[V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27i_27))))))).
fof('thm.words.reduce_and', axiom, ![V_27A_27]: ![V_27w_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')) & s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_and_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'const.bool.COND_3'(s('bool',Vv),s('type.fcp.cart'('bool','type.one.one'),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool','type.one.one'),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))).
fof('thm.words.reduce_or', axiom, ![V_27A_27]: ![V_27w_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & s('type.fcp.cart'('bool','type.one.one'),'const.words.reduce_or_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool','type.one.one'),'const.bool.COND_3'(s('bool',Vv),s('type.fcp.cart'('bool','type.one.one'),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool','type.one.one'),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))).
fof('_dstsel_0_x0x0_ax', axiom, ![VA,VA1,VA2]: ![V__0, V__1, V__z]: s(VA,'happ'(s('fun'('fun'(VA1,'fun'(VA2,VA)),VA),'_dstsel_0_x0x0_2'(s(VA1,V__0),s(VA2,V__1))),s('fun'(VA1,'fun'(VA2,VA)),V__z))) = s(VA,'happ'(s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),V__z),s(VA1,V__0))),s(VA2,V__1)))).
fof('thm.words.words_373_prove_ltb', axiom, ![V_27wl_27, V_27a_27, V_27b_27]: p(s('bool','const.bool.LET_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27a_27))),s('type.num.num',V_27b_27))),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))))))).
fof('thm.words.words_374_prove_ltb', axiom, ![V_27wl_27, V_27m_27, V_27n_27]: p(s('bool','const.bool.LET_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27m_27))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))))),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))))))).
fof('thm.words.words_375_prove_ltb', axiom, ![V_27wl_27, V_27m_27, V_27n_27]: p(s('bool','const.bool.LET_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27m_27))),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num',V_27n_27),s('type.num.num','const.num.|48|_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))))))).
fof('thm.words.words_376_prove_ltb', axiom, ![V_27wl_27, V_27m_27, V_27n_27]: p(s('bool','const.bool.LET_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27m_27))),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num',V_27n_27),s('type.num.num','const.num.|48|_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))))))).
fof('thm.words.words_377_prove_ltb', axiom, ![V_27wl_27, V_27m_27, V_27n_27, V_27p_27]: p(s('bool','const.bool.LET_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27p_27))))),s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27p_27))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))))))).
fof('thm.words.words_378_prove_ltb', axiom, ![V_27wl_27, V_27n_27]: p(s('bool','const.bool.LET_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'bool'),'_dstsel_0_x0x0_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27wl_27))))))))))).
fof('thm.words.words_379_prove_ltb', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_ADD_|48||split|0', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.WORD_ADD_|48||split|1', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.WORD_ADD_ASSOC', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))).
fof('thm.words.WORD_MULT_ASSOC', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))).
fof('thm.words.WORD_ADD_COMM', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))).
fof('thm.words.WORD_MULT_COMM', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))).
fof('thm.words.WORD_MULT_CLAUSES|split|0', axiom, ![V_27A_27]: ![V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_MULT_CLAUSES|split|1', axiom, ![V_27A_27]: ![V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_MULT_CLAUSES|split|2', axiom, ![V_27A_27]: ![V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27v_27)).
fof('thm.words.WORD_MULT_CLAUSES|split|3', axiom, ![V_27A_27]: ![V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.fcp.cart'('bool',V_27A_27),V_27v_27)).
fof('thm.words.WORD_MULT_CLAUSES|split|4', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_MULT_CLAUSES|split|5', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_LEFT_ADD_DISTRIB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))))).
fof('thm.words.WORD_RIGHT_ADD_DISTRIB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))))).
fof('thm.words.WORD_ADD_SUB_ASSOC', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))))).
fof('thm.words.WORD_ADD_SUB_SYM', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_ADD_LINV', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_ADD_RINV', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_SUB_REFL', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_SUB_ADD2', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.WORD_ADD_SUB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27v_27)).
fof('thm.words.WORD_SUB_ADD', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27v_27)).
fof('thm.words.WORD_ADD_EQ_SUB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27x_27) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_ADD_INV_|48|_EQ', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27v_27) <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_EQ_ADD_LCANCEL', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),V_27x_27))).
fof('thm.words.WORD_EQ_ADD_RCANCEL', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),V_27x_27))).
fof('thm.words.WORD_NEG', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.WORD_NOT', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.WORD_NEG_|48|', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_NEG_ADD', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_NEG_NEG', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.WORD_SUB_LNEG', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_SUB_RNEG', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_SUB_SUB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_SUB_SUB2', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.WORD_EQ_SUB_LADD', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: (s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) <=> s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.WORD_EQ_SUB_RADD', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27x_27) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_EQ_SUB_ZERO', axiom, ![V_27A_27]: ![V_27w_27, V_27v_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.WORD_LCANCEL_SUB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),V_27x_27))).
fof('thm.words.WORD_RCANCEL_SUB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),V_27x_27))).
fof('thm.words.WORD_SUB_PLUS', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))).
fof('thm.words.WORD_SUB_LZERO', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_SUB_RZERO', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.WORD_ADD_LID_UNIQ', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_SUM_ZERO', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))).
fof('thm.words.WORD_ADD_SUB2', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27v_27)).
fof('thm.words.WORD_ADD_SUB3', axiom, ![V_27A_27]: ![V_27v_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))).
fof('thm.words.WORD_SUB_SUB3', axiom, ![V_27A_27]: ![V_27w_27, V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_EQ_NEG', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.WORD_NEG_EQ', axiom, ![V_27A_27]: ![V_27w_27, V_27v_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_NEG_EQ_|48|', axiom, ![V_27A_27]: ![V_27v_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_SUB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_SUB_NEG', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))).
fof('thm.words.WORD_NEG_SUB', axiom, ![V_27A_27]: ![V_27w_27, V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))).
fof('thm.words.WORD_SUB_TRIANGLE', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))).
fof('thm.words.WORD_NOT_|48|', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.WORD_NOT_T', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_NEG_T', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.WORD_MULT_SUC', axiom, ![V_27A_27]: ![V_27v_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))).
fof('thm.words.WORD_NEG_LMUL', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.WORD_NEG_RMUL', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_NEG_MUL', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.sw2sw_w2w_add', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.WORD_ADD_BIT|48|', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.num.num','const.num.|48|_0')))) <=> ~ (s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num','const.num.|48|_0'))) = s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.WORD_ADD_BIT', axiom, ![V_27A_27]: ![V_27n_27, V_27a_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num',V_27n_27))) = s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.num.num',V_27n_27))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num',V_27n_27))) = s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.num.num',V_27n_27)))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> ~ (s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num','const.num.|48|_0'))) = s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.num.num','const.num.|48|_0'))))) & ?[Vv_27_27_27]: ((p(s('bool',Vv_27_27_27)) <=> s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0')) & s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.num.num',V_27n_27))) = s('bool','const.bool.COND_3'(s('bool',Vv_27_27_27),s('bool',Vv_27_27),s('bool','const.bool.COND_3'(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.num.num',V_27n_27))),s('bool',Vv_27),s('bool',Vv))))))))))).
fof('thm.words.WORD_LEFT_SUB_DISTRIB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))))).
fof('thm.words.WORD_RIGHT_SUB_DISTRIB', axiom, ![V_27A_27]: ![V_27v_27, V_27w_27, V_27x_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))))).
fof('thm.words.WORD_LITERAL_MULT|split|0', axiom, ![V_27A_27]: ![V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))))).
fof('thm.words.WORD_LITERAL_MULT|split|1', axiom, ![V_27B_27]: ![V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.WORD_LITERAL_ADD|split|0', axiom, ![V_27A_27]: ![V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))))).
fof('thm.words.WORD_LITERAL_ADD|split|1', axiom, ![V_27B_27]: ![V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27m_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))))))))).
fof('thm.words.WORD_SUB_INTRO|split|0', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))).
fof('thm.words.WORD_SUB_INTRO|split|1', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))).
fof('thm.words.WORD_SUB_INTRO|split|2', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27, V_27z_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.fcp.cart'('bool',V_27A_27),V_27z_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27z_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))).
fof('thm.words.WORD_SUB_INTRO|split|3', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27, V_27z_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27z_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27z_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))).
fof('thm.words.WORD_SUB_INTRO|split|4', axiom, ![V_27B_27]: ![V_27x_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27B_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),V_27x_27)))).
fof('thm.words.WORD_SUB_INTRO|split|5', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27, V_27z_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27z_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27z_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))).
fof('thm.words.WORD_SUB_INTRO|split|6', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27, V_27z_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.fcp.cart'('bool',V_27A_27),V_27z_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.fcp.cart'('bool',V_27A_27),V_27z_27)))))).
fof('thm.words.n2w_SUC', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.n2w_sub', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27a_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))))).
fof('thm.words.n2w_sub_eq_|48|', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_H_WORD_L', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0') = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.word_L_MULT', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.arithmetic.EVEN_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))).
fof('thm.words.ASR_ADD', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.LSR_ADD', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.ROR_ADD', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.LSL_ADD', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.ASR_LIMIT', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))).
fof('thm.words.ASR_UINT_MAX', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.LSR_LIMIT', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.LSL_LIMIT', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.ROR_CYCLE', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.ROR_MOD', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27)))).
fof('thm.words.ROL_MOD', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27)))).
fof('thm.words.LSL_ONE', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.ROR_UINT_MAX', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.ROR_ROL|split|0', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.ROR_ROL|split|1', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.words_464_prove_ltb', axiom, ![V_27a_27, V_27b_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27))))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27)))))))).
fof('thm.words.words_465_prove_ltb', axiom, ![V_27n_27, V_27a_27, V_27b_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))) & (~ (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))) = s('type.num.num','const.num.|48|_0')) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num',V_27n_27))) = s('type.num.num','const.num.|48|_0'))) => s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))) = s('type.num.num',V_27n_27))).
fof('thm.words.words_466_prove_ltb', axiom, ![V_27a_27, V_27b_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))) = s('type.num.num','const.num.|48|_0')) => ?[V_27k_27]: s('type.num.num',V_27a_27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27b_27))))).
fof('thm.words.MOD_COMPLEMENT', axiom, ![V_27n_27, V_27q_27, V_27a_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27q_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27q_27),s('type.num.num',V_27n_27)))))))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27q_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27a_27))),s('type.num.num',V_27n_27))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27n_27))))),s('type.num.num',V_27n_27))))).
fof('thm.words.ROL_ADD', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.ZERO_SHIFT|split|0', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.ZERO_SHIFT|split|1', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.ZERO_SHIFT|split|2', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.ZERO_SHIFT|split|3', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.ZERO_SHIFT|split|4', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.words_47|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num','const.num.|48|_0'))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.SHIFT_ZERO|split|0', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num','const.num.|48|_0'))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27)).
fof('thm.words.SHIFT_ZERO|split|1', axiom, ![V_27B_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27B_27),V_27a_27),s('type.num.num','const.num.|48|_0'))) = s('type.fcp.cart'('bool',V_27B_27),V_27a_27)).
fof('thm.words.SHIFT_ZERO|split|2', axiom, ![V_27C_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27C_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27C_27),V_27a_27),s('type.num.num','const.num.|48|_0'))) = s('type.fcp.cart'('bool',V_27C_27),V_27a_27)).
fof('thm.words.SHIFT_ZERO|split|3', axiom, ![V_27D_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27D_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27D_27),V_27a_27),s('type.num.num','const.num.|48|_0'))) = s('type.fcp.cart'('bool',V_27D_27),V_27a_27)).
fof('thm.words.SHIFT_ZERO|split|4', axiom, ![V_27E_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27E_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27E_27),V_27a_27),s('type.num.num','const.num.|48|_0'))) = s('type.fcp.cart'('bool',V_27E_27),V_27a_27)).
fof('thm.words.word_lsl_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27)))))))))).
fof('thm.words.word_|49|_lsl', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_lsr_n2w', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.words_475_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.LSL_UINT_MAX', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27)))))))).
fof('thm.words.word_asr_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27)))))).
fof('ARITY_0_3_const.bit.BITS', axiom, ![VV0, VV1, VV2]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'const.bit.BITS_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.num.num',VV2))) = s('type.num.num','const.bit.BITS_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.num.num',VV2)))).
fof('ARITY_1_2_const.arithmetic.EXP', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.EXP_1'(s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('thm.words.word_ror_n2w', axiom, ![V_27A_27]: ![V_27n_27, V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num',V_27a_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.LET_2'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1_2'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'const.bit.BITS_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27a_27))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.*_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0x0_4'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'const.bit.BITS_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27a_27))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.EXP_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.word_rrx_n2w', axiom, ![V_27A_27]: ![V_27c_27, V_27a_27]: s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.words.word_rrx_1'(s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.pair.,_2'(s('bool',V_27c_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))))))) = s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.pair.,_2'(s('bool','const.arithmetic.ODD_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27))),s('type.num.num','const.bit.SBIT_2'(s('bool',V_27c_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('ARITY_0_3_const.words.word_bits', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.words.word_bits_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.fcp.cart'('bool',V_27A_27),VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.fcp.cart'('bool',V_27A_27),VV2)))).
fof('thm.words.word_ror', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.LET_2'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_or_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.words.word_bits_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x1_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.words.word_lsl_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x0x0_4'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)))),'const.words.word_bits_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.word_asr', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.w2n_lsr', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27m_27))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27m_27)))))).
fof('thm.words.WORD_MUL_LSL', axiom, ![V_27A_27]: ![V_27a_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_ADD_LSL', axiom, ![V_27A_27]: ![V_27n_27, V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.WORD_DIV_LSR', axiom, ![V_27A_27]: ![V_27m_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_div_2'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))))))).
fof('thm.words.WORD_MOD_|49|', axiom, ![V_27A_27]: ![V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.WORD_MOD_POW2', axiom, ![V_27A_27]: ![V_27m_27, V_27v_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27v_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27v_27))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27v_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))).
fof('thm.words.SHIFT_|49|_SUB_|49|', axiom, ![V_27A_27]: ![V_27i_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27i_27))) = s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))))).
fof('thm.words.LSR_BITWISE|split|0', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.LSR_BITWISE|split|1', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.LSR_BITWISE|split|2', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.LSL_BITWISE|split|0', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.LSL_BITWISE|split|1', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.LSL_BITWISE|split|2', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.ROR_BITWISE|split|0', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.ROR_BITWISE|split|1', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.ROR_BITWISE|split|2', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.ROL_BITWISE|split|0', axiom, ![V_27A_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.ROL_BITWISE|split|1', axiom, ![V_27B_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27B_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27B_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27B_27),V_27w_27),s('type.fcp.cart'('bool',V_27B_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.ROL_BITWISE|split|2', axiom, ![V_27C_27]: ![V_27n_27, V_27v_27, V_27w_27]: s('type.fcp.cart'('bool',V_27C_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27C_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27C_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27C_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27C_27),V_27v_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27C_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27C_27),V_27w_27),s('type.fcp.cart'('bool',V_27C_27),V_27v_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.WORD_2COMP_LSL', axiom, ![V_27A_27]: ![V_27n_27, V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.w2w_LSL', axiom, ![V_27A_27,V_27B_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.n2w_DIV', axiom, ![V_27A_27]: ![V_27a_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.num.num',V_27n_27))))).
fof('thm.words.WORD_BITS_LSL', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27n_27, V_27w_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27h_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))).
fof('thm.words.WORD_EXTRACT_LSL', axiom, ![V_27A_27,V_27B_27]: ![V_27h_27, V_27l_27, V_27n_27, V_27w_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27h_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27h_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))).
fof('thm.words.WORD_EXTRACT_LSL2', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27l_27, V_27n_27, V_27w_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27n_27)))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27))))).
fof('thm.words.EXTRACT_JOIN_LSL', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27m_27, V_27m_7c39_7c_27, V_27l_27, V_27s_27, V_27n_27, V_27w_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27m_7c39_7c_27),s('type.num.num',V_27h_27)))) & (s('type.num.num',V_27m_7c39_7c_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.num.num',V_27s_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27m_7c39_7c_27),s('type.num.num',V_27l_27))),s('type.num.num',V_27n_27)))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27m_7c39_7c_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27s_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27))))).
fof('thm.words.EXTRACT_JOIN_ADD_LSL', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27m_27, V_27m_7c39_7c_27, V_27l_27, V_27s_27, V_27n_27, V_27w_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27m_7c39_7c_27),s('type.num.num',V_27h_27)))) & (s('type.num.num',V_27m_7c39_7c_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.num.num',V_27s_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27m_7c39_7c_27),s('type.num.num',V_27l_27))),s('type.num.num',V_27n_27)))))) => s('type.fcp.cart'('bool',V_27B_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27m_7c39_7c_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27s_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num',V_27l_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27))))).
fof('thm.words.words_5|48||49|_prove_ltb', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27h_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num',V_27l_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.word_extract_mask', axiom, ![V_27A_27]: ![V_27h_27, V_27l_27, V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27h_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.num.num',V_27l_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27l_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.word_shift_bv|split|0', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))).
fof('thm.words.word_shift_bv|split|1', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))).
fof('thm.words.word_shift_bv|split|2', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))).
fof('thm.words.word_shift_bv|split|3', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.words.word_shift_bv|split|4', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.words.lsl_lsr', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.words.words_5|48|5_prove_ltb', axiom, ![V_27A_27]: ![V_27b_27, V_27a_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27))).
fof('thm.words.words_5|48|6_prove_ltb', axiom, ![V_27A_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))).
fof('thm.words.words_5|48|7_prove_ltb', axiom, ![V_27A_27]: s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.WORD_NEG_L', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')).
fof('thm.words.word_L_MULT_NEG', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.arithmetic.EVEN_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))).
fof('thm.words.word_L2_MULT|split|0', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L2_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L2_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L2_0')).
fof('thm.words.word_L2_MULT|split|1', axiom, ![V_27B_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_L2_0'))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_L2_0')).
fof('thm.words.word_L2_MULT|split|2', axiom, ![V_27C_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27C_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27C_27),'const.words.word_L2_0'))) = s('type.fcp.cart'('bool',V_27C_27),'const.bool.COND_3'(s('bool','const.arithmetic.EVEN_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27C_27),'const.words.word_L2_0')))).
fof('thm.words.word_L2_MULT|split|3', axiom, ![V_27D_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27D_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27D_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27D_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))),s('type.fcp.cart'('bool',V_27D_27),'const.words.word_L2_0'))) = s('type.fcp.cart'('bool',V_27D_27),'const.bool.COND_3'(s('bool','const.arithmetic.EVEN_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27D_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27D_27),'const.words.word_L2_0')))).
fof('thm.words.words_5|49||49|_prove_ltb', axiom, ![V_27b_27, V_27n_27]: (~ (s('type.num.num',V_27b_27) = s('type.num.num','const.num.|48|_0')) => s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.SLICE_3'(s('type.num.num',V_27b_27),s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))),s('type.num.num','const.bit.SLICE_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27))))) = s('type.num.num','const.bit.SLICE_3'(s('type.num.num',V_27b_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27))))).
fof('thm.words.words_5|49|2_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))).
fof('thm.words.words_5|49|3_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))).
fof('thm.words.words_5|49|4_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))).
fof('thm.words.words_5|49|5_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & (~ (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))) => (s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))) & ~ (s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.words_5|49|6_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))).
fof('thm.words.words_5|49|7_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))) => s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.words_5|49|8_prove_ltb', axiom, ![V_27A_27]: (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') => s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.words.words_5|49|9_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.words.words_52|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.words.words_52|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.num.num','const.num.|48|_0'))).
fof('thm.words.words_522_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.num.num','const.num.|48|_0'))).
fof('thm.words.words_523_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27a_27]: (s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.num.num',V_27n_27) => s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))))).
fof('thm.words.words_524_prove_ltb', axiom, ![V_27b_27, V_27a_27]: (~ (s('type.num.num',V_27b_27) = s('type.num.num','const.num.|48|_0')) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27a_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))))))).
fof('thm.words.words_525_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => ?[Vv]: ((p(s('bool',Vv)) <=> ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & p(s('bool','const.bool.COND_3'(s('bool',Vv_27),s('bool',Vv),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))))))))).
fof('thm.words.words_526_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & (~ (s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')) & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))))))) => ~ (s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))))))) = s('type.num.num','const.num.|48|_0')))).
fof('thm.words.TWO_COMP_NEG', axiom, ![V_27A_27]: ![V_27a_27]: (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) => ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))))) & p(s('bool','const.bool.COND_3'(s('bool',Vv),s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))),s('bool',Vv_27)))))))).
fof('thm.words.TWO_COMP_POS_NEG', axiom, ![V_27A_27]: ![V_27a_27]: (~ ((s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0') | (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))) => (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) <=> p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))).
fof('thm.words.WORD_|48|_POS', axiom, ![V_27A_27]: ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))))).
fof('thm.words.TWO_COMP_POS', axiom, ![V_27A_27]: ![V_27a_27]: (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))).
fof('thm.words.WORD_H_POS', axiom, ![V_27A_27]: ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0')))))).
fof('thm.words.WORD_L_NEG', axiom, ![V_27A_27]: p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'))))).
fof('thm.words.words_533_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)) <=> ~ (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.words_534_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')) => ~ (s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_GREATER', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_gt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_GREATER_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_ge_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_NOT_LESS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (~ (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) <=> p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.words_538_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('thm.words.words_539_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))))) => ~ (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.words.words_54|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) & (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))).
fof('thm.words.words_54|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((~ (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0')) & (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) & (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))))) => ~ (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.words.WORD_LT', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ((s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))) | (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.words.WORD_GT', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_gt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ((s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) & p(s('bool','const.arithmetic.>_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))) | (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))).
fof('thm.words.WORD_LE', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ((s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))) | (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.words.WORD_GE', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_ge_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ((s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) & p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))) | (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))).
fof('thm.words.words_546_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.num.num','const.bool.COND_3'(s('bool',Vv),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))).
fof('thm.words.WORD_LO', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.words_548_prove_ltb', axiom, ![V_27A_27]: ![V_27b_27, V_27a_27]: (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.words_549_prove_ltb', axiom, ![V_27A_27]: ![V_27b_27, V_27a_27]: (p(s('bool','const.words.word_hi_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ~ (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.words_55|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27b_27, V_27a_27]: (p(s('bool','const.words.word_hs_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ~ (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.WORD_LS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_HI', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_hi_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.arithmetic.>_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_HS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_hs_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.arithmetic.>=_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_NOT_LESS_EQUAL', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (~ (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) <=> p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LESS_OR_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.WORD_GREATER_OR_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_ge_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> (p(s('bool','const.words.word_gt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.WORD_LESS_TRANS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) => p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LESS_EQ_TRANS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) => p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LESS_EQ_LESS_TRANS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) => p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LESS_LESS_EQ_TRANS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) => p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LESS_EQ_CASES', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LESS_CASES', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LESS_CASES_IMP', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((~ (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) & ~ (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) => p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LESS_ANTISYM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ~ ((p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))).
fof('thm.words.WORD_LESS_EQ_ANTISYM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ~ ((p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))).
fof('thm.words.WORD_LESS_EQ_REFL', axiom, ![V_27A_27]: ![V_27a_27]: p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))).
fof('thm.words.WORD_LESS_EQUAL_ANTISYM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27))).
fof('thm.words.WORD_LESS_IMP_LESS_OR_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) => p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_LESS_REFL', axiom, ![V_27A_27]: ![V_27a_27]: ~ (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LESS_LESS_CASES', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27) | (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))).
fof('thm.words.WORD_NOT_GREATER', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (~ (p(s('bool','const.words.word_gt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) <=> p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_LESS_NOT_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) => ~ (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.WORD_NOT_LESS_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27) => ~ (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.WORD_HIGHER', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_hi_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_HIGHER_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_hs_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_NOT_LOWER', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (~ (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) <=> p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_NOT_LOWER_EQUAL', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (~ (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) <=> p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LOWER_OR_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.WORD_HIGHER_OR_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_hs_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> (p(s('bool','const.words.word_hi_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.WORD_LOWER_TRANS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) => p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LOWER_EQ_TRANS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) => p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LOWER_EQ_LOWER_TRANS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) => p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LOWER_LOWER_EQ_TRANS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) => p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))).
fof('thm.words.WORD_LOWER_EQ_CASES', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LOWER_CASES', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LOWER_CASES_IMP', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((~ (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) & ~ (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) => p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LOWER_ANTISYM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ~ ((p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))).
fof('thm.words.WORD_LOWER_EQ_ANTISYM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ~ ((p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))).
fof('thm.words.WORD_LOWER_EQ_REFL', axiom, ![V_27A_27]: ![V_27a_27]: p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))).
fof('thm.words.WORD_LOWER_EQUAL_ANTISYM', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) => s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27))).
fof('thm.words.WORD_LOWER_IMP_LOWER_OR_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) => p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_LOWER_REFL', axiom, ![V_27A_27]: ![V_27a_27]: ~ (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.WORD_LOWER_LOWER_CASES', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27) | (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) | p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))).
fof('thm.words.WORD_NOT_HIGHER', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (~ (p(s('bool','const.words.word_hi_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) <=> p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.WORD_LOWER_NOT_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) => ~ (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.WORD_NOT_LOWER_EQ', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27b_27) => ~ (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.words_597_prove_ltb', axiom, ![V_27A_27]: s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.WORD_L_PLUS_H', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0'))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0')).
fof('thm.words.WORD_L_LESS_EQ', axiom, ![V_27A_27]: ![V_27a_27]: p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))).
fof('thm.words.WORD_LESS_EQ_H', axiom, ![V_27A_27]: ![V_27a_27]: p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0'))))).
fof('thm.words.words_6|48||49|_prove_ltb', axiom, ![V_27A_27]: ~ (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0') = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0'))).
fof('thm.words.WORD_L_LESS_H', axiom, ![V_27A_27]: p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0'))))).
fof('thm.words.NOT_INT_MIN_ZERO', axiom, ![V_27A_27]: ~ (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0') = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.ZERO_LO_INT_MIN', axiom, ![V_27A_27]: p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'))))).
fof('thm.words.WORD_|48|_LS', axiom, ![V_27A_27]: ![V_27w_27]: p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))).
fof('thm.words.WORD_LS_T', axiom, ![V_27A_27]: ![V_27w_27]: p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))))).
fof('ARITY_0_2_const.words.word_ls', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('ARITY_1_2_const.words.word_lo', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_lo_1'(s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('ARITY_1_2_const.words.word_add', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.WORD_ADD_LEFT_LO', axiom, ![V_27A_27]: ![V_27b_27, V_27c_27, V_27a_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_lo_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> ~ (s('type.fcp.cart'('bool',V_27A_27),V_27b_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) & s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_lo_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))) = s('bool','const.bool.COND_3'(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('bool','const.bool.LET_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_lo_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool',Vv_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1x0_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))),s('bool',Vv)))))).
fof('thm.words.WORD_ADD_LEFT_LS', axiom, ![V_27A_27]: ![V_27b_27, V_27c_27, V_27a_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> ~ (s('type.fcp.cart'('bool',V_27A_27),V_27b_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) & s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))) = s('bool','const.bool.COND_3'(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('bool','const.bool.LET_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool',Vv_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1x0_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))),s('bool',Vv)))))).
fof('thm.words.WORD_ADD_RIGHT_LS', axiom, ![V_27A_27]: ![V_27c_27, V_27a_27, V_27b_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_lo_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))) | p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.fcp.cart'('bool',V_27A_27),V_27c_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) = s('bool','const.bool.COND_3'(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('bool','const.bool.LET_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_ls_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|bslash||slash|_1'(s('bool',Vv_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.words.word_lo_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))))))),s('bool',Vv)))))).
fof('ARITY_0_2_const.words.word_lo', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_lo_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))) = s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.fcp.cart'('bool',V_27A_27),VV1)))).
fof('thm.words.WORD_ADD_RIGHT_LO', axiom, ![V_27A_27]: ![V_27c_27, V_27a_27, V_27b_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_lo_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))) | p(s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_lo_0'),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.fcp.cart'('bool',V_27A_27),V_27c_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & s('bool','happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_lo_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))) = s('bool','const.bool.COND_3'(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('bool','const.bool.LET_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_lo_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|bslash||slash|_1'(s('bool',Vv_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.words.word_lo_0'),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.words.word_add_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))))))),s('bool',Vv)))))).
fof('thm.words.words_6|49||49|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ((p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) | p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) | (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) & (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) & p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.words.words_6|49|2_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ((p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) | p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) | (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) & (~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.words.WORD_MSB_INT_MIN_LS', axiom, ![V_27A_27]: ![V_27a_27]: s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.WORD_LT_LO', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ((p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))) | p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) | (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))) & (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))) & p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.words.WORD_LE_LS', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> ((p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))) | p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) | (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))) & (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_L_0')))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.words.WORD_LESS_NEG_LEFT', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) <=> (~ (s('type.fcp.cart'('bool',V_27A_27),V_27b_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))))).
fof('thm.words.WORD_LESS_NEG_RIGHT', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) <=> (~ (s('type.fcp.cart'('bool',V_27A_27),V_27b_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))))))).
fof('thm.words.WORD_LS_word_|48|', axiom, ![V_27A_27]: ![V_27n_27]: (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27n_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27n_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_LO_word_|48||split|0', axiom, ![V_27A_27]: ![V_27n_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))) <=> ~ (s('type.fcp.cart'('bool',V_27A_27),V_27n_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.WORD_LO_word_|48||split|1', axiom, ![V_27B_27]: ![V_27n_27]: ~ (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27B_27),V_27n_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))))).
fof('thm.words.WORD_ADD_LEFT_LO2', axiom, ![V_27A_27]: ![V_27c_27, V_27a_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) <=> (~ (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & ((~ (s('type.fcp.cart'('bool',V_27A_27),V_27c_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))))))).
fof('thm.words.WORD_ADD_LEFT_LS2', axiom, ![V_27A_27]: ![V_27c_27, V_27a_27]: (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) <=> (s('type.fcp.cart'('bool',V_27A_27),V_27c_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | (~ (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) | s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))))).
fof('thm.words.WORD_ADD_RIGHT_LO2', axiom, ![V_27A_27]: ![V_27c_27, V_27a_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))) <=> (~ (s('type.fcp.cart'('bool',V_27A_27),V_27c_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))))))).
fof('thm.words.WORD_ADD_RIGHT_LS2', axiom, ![V_27A_27]: ![V_27c_27, V_27a_27]: (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))) <=> (s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | (s('type.fcp.cart'('bool',V_27A_27),V_27c_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) | p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27c_27)))))))))).
fof('thm.words.word_msb_neg', axiom, ![V_27A_27]: ![V_27w_27]: s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.word_abs', axiom, ![V_27A_27]: ![V_27w_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool',Vv))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))))))))).
fof('thm.words.word_abs_word_abs', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.word_abs_neg', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.words.word_abs_diff', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_abs_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.words.words_63|48|_prove_ltb|split|0', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.pair.FST_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')),'const.words.add_with_carry_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27),s('bool','F_0'))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))).
fof('thm.words.words_63|48|_prove_ltb|split|1', axiom, ![V_27B_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27B_27),'const.pair.FST_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27B_27),'type.pair.prod'('bool','bool')),'const.words.add_with_carry_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27B_27),'type.pair.prod'('type.fcp.cart'('bool',V_27B_27),'bool')),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27B_27),V_27a_27),s('type.pair.prod'('type.fcp.cart'('bool',V_27B_27),'bool'),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27B_27),V_27b_27))),s('bool','T_0'))))))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27B_27),V_27a_27),s('type.fcp.cart'('bool',V_27B_27),V_27b_27)))).
fof('thm.words.words_63|48|_prove_ltb|split|2', axiom, ![V_27C_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27C_27),'const.pair.FST_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27C_27),'type.pair.prod'('bool','bool')),'const.words.add_with_carry_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27C_27),'type.pair.prod'('type.fcp.cart'('bool',V_27C_27),'bool')),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27C_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27C_27),V_27a_27))),s('type.pair.prod'('type.fcp.cart'('bool',V_27C_27),'bool'),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27C_27),V_27b_27),s('bool','T_0'))))))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27C_27),V_27b_27),s('type.fcp.cart'('bool',V_27C_27),V_27a_27)))).
fof('thm.words.FST_ADD_WITH_CARRY|split|3', axiom, ![V_27B_27]: ![V_27n_27, V_27a_27]: s('type.fcp.cart'('bool',V_27B_27),'const.pair.FST_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27B_27),'type.pair.prod'('bool','bool')),'const.words.add_with_carry_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27B_27),'type.pair.prod'('type.fcp.cart'('bool',V_27B_27),'bool')),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27B_27),V_27a_27),s('type.pair.prod'('type.fcp.cart'('bool',V_27B_27),'bool'),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('bool','T_0'))))))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27B_27),V_27a_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))))))).
fof('thm.words.FST_ADD_WITH_CARRY|split|4', axiom, ![V_27C_27]: ![V_27n_27, V_27b_27]: s('type.fcp.cart'('bool',V_27C_27),'const.pair.FST_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27C_27),'type.pair.prod'('bool','bool')),'const.words.add_with_carry_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27C_27),'type.pair.prod'('type.fcp.cart'('bool',V_27C_27),'bool')),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))),s('type.pair.prod'('type.fcp.cart'('bool',V_27C_27),'bool'),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27C_27),V_27b_27),s('bool','T_0'))))))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27C_27),V_27b_27),s('type.fcp.cart'('bool',V_27C_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))))))).
fof('thm.words.ADD_WITH_CARRY_SUB', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (~ (s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) & ~ (s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))) = s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))))) & s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')),'const.words.add_with_carry_1'(s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool')),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('bool','T_0'))))))) = s('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('bool','bool')),'const.pair.,_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.pair.prod'('bool','bool'),'const.pair.,_2'(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('bool',Vv))))))).
fof('thm.words.word_eq_n2w|split|0', axiom, ![V_27A_27]: ![V_27m_27, V_27n_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))) <=> p(s('bool','const.bit.MOD_2EXP_EQ_3'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_eq_n2w|split|1', axiom, ![V_27A_27]: ![V_27n_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s('bool','const.bit.MOD_2EXP_MAX_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27)))))).
fof('thm.words.word_eq_n2w|split|2', axiom, ![V_27A_27]: ![V_27n_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27))) <=> p(s('bool','const.bit.MOD_2EXP_MAX_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27n_27)))))).
fof('_dst_x00x11x00_ax', axiom, ![VA,VA2,VA3,VA1,VA4]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x11x00_3'(s('fun'(VA3,'fun'(VA4,VA)),V__x),s('fun'(VA1,'fun'(VA2,VA3)),V__0),s(VA4,V__1))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x1x0_3'(s('fun'(VA3,'fun'(VA4,VA)),V__x),s('fun'(VA2,VA3),'happ'(s('fun'(VA1,'fun'(VA2,VA3)),V__0),s(VA1,V__z))),s(VA4,V__1)))).
fof('thm.words.word_lt_n2w', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))) = s('bool','const.bool.LET_2'(s('fun'('bool','bool'),'const.bool.LET_2'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11x00_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','fun'('bool','bool')),'=_0'),s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','bool'),'~_0'))))),s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27a_27))))),s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27b_27)))))).
fof('thm.words.word_gt_n2w', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_gt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))) = s('bool','const.bool.LET_2'(s('fun'('bool','bool'),'const.bool.LET_2'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11x00_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','fun'('bool','bool')),'=_0'),s('bool','const.arithmetic.>_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('fun'('bool','fun'('bool','bool')),'_dst_x0x1_2'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'~_0'))))),s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27a_27))))),s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27b_27)))))).
fof('thm.words.word_le_n2w', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))) = s('bool','const.bool.LET_2'(s('fun'('bool','bool'),'const.bool.LET_2'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11x00_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','fun'('bool','bool')),'=_0'),s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('fun'('bool','fun'('bool','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('bool','bool'),'~_0'))))),s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27a_27))))),s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27b_27)))))).
fof('thm.words.word_ge_n2w', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_ge_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))) = s('bool','const.bool.LET_2'(s('fun'('bool','bool'),'const.bool.LET_2'(s('fun'('bool','fun'('bool','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','fun'('bool','bool')),'_dst_x00x11x00_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','fun'('bool','bool')),'=_0'),s('bool','const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('fun'('bool','fun'('bool','bool')),'_dst_x0x1_2'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('bool','bool'),'~_0'))))),s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27a_27))))),s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27b_27)))))).
fof('thm.words.word_ls_n2w', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.word_hi_n2w', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_hi_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))) = s('bool','const.arithmetic.>_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.word_lo_n2w', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.word_hs_n2w', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('bool','const.words.word_hs_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27b_27))))) = s('bool','const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27a_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27b_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.words_642_prove_ltb', axiom, ![V_27n_27, V_27a_27, V_27b_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.w2n_add', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) & ~ (p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.saturate_w2w_n2w', axiom, ![V_27B_27,V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.saturate_w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.LET_2'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27B_27)),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.fcp.cart'('bool',V_27B_27),'fun'('type.fcp.cart'('bool',V_27B_27),'type.fcp.cart'('bool',V_27B_27)))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool','happ'(s('fun'('type.num.num','bool'),'const.arithmetic.<=_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))),s('fun'('type.num.num','bool'),'const.arithmetic.<=_1'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_T_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27B_27)),'const.words.n2w_0'))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.words.saturate_w2w', axiom, ![V_27B_27,V_27A_27]: ![V_27w_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_T_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))) & s('type.fcp.cart'('bool',V_27B_27),'const.words.saturate_w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool',Vv),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.words.saturate_sub', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.saturate_add', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))).
fof('thm.words.words_648_prove_ltb', axiom, ![V_27A_27]: (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.sum.sum'(V_27A_27,V_27A_27)),'const.bool.the_value_0')))))))).
fof('thm.words.words_649_prove_ltb', axiom, ![V_27A_27]: (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) => s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.sum.sum'(V_27A_27,V_27A_27)),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))).
fof('thm.words.NOT_FINITE_IMP_dimword_2', axiom, ![V_27A_27]: (~ (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0'))))) => s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.words.words_65|49|_prove_ltb', axiom, ![V_27a_27, V_27b_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) => ~ (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))))))).
fof('thm.words.saturate_mul', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27A_27)),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'))),s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27A_27)),'const.words.word_mul_2'(s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27A_27)),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27A_27)),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))))))) & s('type.fcp.cart'('bool',V_27A_27),'const.words.saturate_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool',Vv),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))).
fof('thm.words.WORD_DIVISION', axiom, ![V_27A_27]: ![V_27w_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) => ![V_27v_27]: (s('type.fcp.cart'('bool',V_27A_27),V_27v_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_div_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) & p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.words.word_reverse_|48|', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.word_reverse_word_T', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.sw2sw_|48|', axiom, ![V_27A_27,V_27B_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.sw2sw_word_T', axiom, ![V_27B_27,V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.sw2sw_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.word_div_|49|', axiom, ![V_27A_27]: ![V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_div_2'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.fcp.cart'('bool',V_27A_27),V_27v_27)).
fof('thm.words.word_bit_|48|', axiom, ![V_27A_27]: ![V_27h_27]: ~ (p(s('bool','const.words.word_bit_2'(s('type.num.num',V_27h_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))))).
fof('thm.words.word_lsb_word_T', axiom, ![V_27A_27]: p(s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))).
fof('thm.words.word_msb_word_T', axiom, ![V_27A_27]: p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))).
fof('thm.words.word_bit_|48|_word_T', axiom, ![V_27A_27]: p(s('bool','const.words.word_bit_2'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))).
fof('thm.words.word_log2_|49|', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_log2_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.word_join_|48|', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool','type.sum.sum'(V_27B_27,V_27A_27)),'const.words.word_join_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool','type.sum.sum'(V_27B_27,V_27A_27)),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.words.word_concat_|48|_|48|', axiom, ![V_27A_27,V_27B_27,V_27C_27]: s('type.fcp.cart'('bool',V_27C_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))).
fof('thm.words.w2w_eq_n2w', axiom, ![V_27B_27,V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27y_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) => (s('type.fcp.cart'('bool',V_27B_27),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27y_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27x_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27y_27)))))).
fof('thm.words.word_extract_eq_n2w', axiom, ![V_27B_27,V_27A_27]: ![V_27x_27, V_27h_27, V_27y_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27h_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27y_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))) => (s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27y_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27x_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27y_27)))))).
fof('thm.words.word_concat_|48|', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27x_27]: ((p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))))) => s('type.fcp.cart'('bool',V_27C_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27x_27))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num',V_27x_27))))).
fof('thm.words.word_concat_|48|_eq', axiom, ![V_27A_27,V_27C_27,V_27B_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0')))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27y_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0')))))))) => (s('type.fcp.cart'('bool',V_27C_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27B_27),V_27x_27))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num',V_27y_27))) <=> s('type.fcp.cart'('bool',V_27B_27),V_27x_27) = s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num',V_27y_27)))))).
fof('thm.words.word_concat_assoc', axiom, ![V_27D_27,V_27F_27,V_27A_27,V_27E_27,V_27B_27,V_27C_27]: ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))) & (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27B_27,'bool'),'const.pred_set.UNIV_0')))) & (p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27C_27,'bool'),'const.pred_set.UNIV_0')))) & (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27D_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))))) & (s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27E_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27B_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0'))))) & s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27F_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27D_27),'const.bool.the_value_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27C_27),'const.bool.the_value_0')))))))))) => s('type.fcp.cart'('bool',V_27F_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27D_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27B_27),V_27b_27))),s('type.fcp.cart'('bool',V_27C_27),V_27c_27))) = s('type.fcp.cart'('bool',V_27F_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27E_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27B_27),V_27b_27),s('type.fcp.cart'('bool',V_27C_27),V_27c_27))))))).
fof('thm.words.word_join_word_T', axiom, ![V_27A_27,V_27B_27]: s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.word_join_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.word_2comp_1'(s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.word_concat_word_T', axiom, ![V_27C_27,V_27A_27,V_27B_27]: s('type.fcp.cart'('bool',V_27C_27),'const.words.word_concat_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.fcp.cart'('bool',V_27C_27),'const.words.w2w_1'(s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.word_2comp_1'(s('type.fcp.cart'('bool','type.sum.sum'(V_27A_27,V_27B_27)),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.words_673_prove_ltb|split|0', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.words_673_prove_ltb|split|1', axiom, ![V_27A_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.words_673_prove_ltb|split|2', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_extract_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27B_27),'const.bool.COND_3'(s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.lsr_|49|_word_T', axiom, ![V_27A_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0')).
fof('thm.words.word_rrx_|48||split|0', axiom, ![V_27A_27]: s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.words.word_rrx_1'(s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.pair.,_2'(s('bool','F_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.pair.,_2'(s('bool','F_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.words.word_rrx_|48||split|1', axiom, ![V_27B_27]: s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27B_27)),'const.words.word_rrx_1'(s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27B_27)),'const.pair.,_2'(s('bool','T_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27B_27)),'const.pair.,_2'(s('bool','F_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_L_0')))).
fof('thm.words.word_rrx_word_T|split|0', axiom, ![V_27A_27]: s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.words.word_rrx_1'(s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.pair.,_2'(s('bool','F_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) = s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27A_27)),'const.pair.,_2'(s('bool','T_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_H_0')))).
fof('thm.words.word_rrx_word_T|split|1', axiom, ![V_27B_27]: s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27B_27)),'const.words.word_rrx_1'(s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27B_27)),'const.pair.,_2'(s('bool','T_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) = s('type.pair.prod'('bool','type.fcp.cart'('bool',V_27B_27)),'const.pair.,_2'(s('bool','T_0'),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.word_T_not_zero', axiom, ![V_27A_27]: ~ (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_LS_word_T|split|0', axiom, ![V_27A_27]: ![V_27n_27]: (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27n_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))).
fof('thm.words.WORD_LS_word_T|split|1', axiom, ![V_27B_27]: ![V_27n_27]: p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27B_27),V_27n_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))).
fof('thm.words.WORD_LO_word_T|split|0', axiom, ![V_27A_27]: ![V_27n_27]: ~ (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27n_27)))))).
fof('thm.words.WORD_LO_word_T|split|1', axiom, ![V_27B_27]: ![V_27n_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27B_27),V_27n_27),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~ (s('type.fcp.cart'('bool',V_27B_27),V_27n_27) = s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.WORD_LESS_|48|_word_T|split|0', axiom, ![V_27A_27]: ~ (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.WORD_LESS_|48|_word_T|split|1', axiom, ![V_27B_27]: ~ (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27B_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.WORD_LESS_|48|_word_T|split|2', axiom, ![V_27C_27]: p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27C_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))).
fof('thm.words.WORD_LESS_|48|_word_T|split|3', axiom, ![V_27D_27]: p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27D_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27D_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27D_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))).
fof('thm.words.words_68|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.words.words_682_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.words_683_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num',V_27n_27)))).
fof('thm.words.words_684_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.words_685_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))).
fof('thm.words.word_reverse_thm|split|3', axiom, ![V_27A_27]: ![V_27w_27, V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))))).
fof('thm.words.word_reverse_thm|split|4', axiom, ![V_27A_27]: ![V_27w_27, V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))))).
fof('thm.words.word_reverse_thm|split|5', axiom, ![V_27A_27]: ![V_27w_27, V_27v_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27v_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_xor_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27v_27)))))).
fof('thm.words.word_reverse_thm|split|6', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_|49|comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_reverse_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.bit_count_upto_|48|', axiom, ![V_27A_27]: ![V_27w_27]: s('type.num.num','const.words.bit_count_upto_2'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.num.|48|_0')).
fof('thm.words.bit_count_upto_SUC', axiom, ![V_27A_27]: ![V_27w_27, V_27n_27]: s('type.num.num','const.words.bit_count_upto_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.words.bit_count_upto_2'(s('type.num.num',V_27n_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.words.bit_count_upto_is_zero', axiom, ![V_27A_27]: ![V_27n_27, V_27w_27]: (s('type.num.num','const.words.bit_count_upto_2'(s('type.num.num',V_27n_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.num.|48|_0') <=> ![V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27)))) => ~ (p(s('bool','const.fcp.fcp_index_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27i_27)))))))).
fof('thm.words.bit_count_is_zero', axiom, ![V_27A_27]: ![V_27w_27]: (s('type.num.num','const.words.bit_count_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.num.|48|_0') <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.words.WORD_FINITE', axiom, ![V_27A_27]: ![V_27s_27]: p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27s_27))))).
fof('thm.words.WORD_SET_INDUCT', axiom, ![V_27A_27]: ![V_27P_27]: ((p(s('bool','happ'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'bool'),V_27P_27),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.pred_set.EMPTY_0')))) & ![V_27s_27]: (p(s('bool','happ'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'bool'),V_27P_27),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27s_27)))) => ![V_27e_27]: (~ (p(s('bool','const.bool.IN_2'(s('type.fcp.cart'('bool',V_27A_27),V_27e_27),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27s_27))))) => p(s('bool','happ'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'bool'),V_27P_27),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'const.pred_set.INSERT_2'(s('type.fcp.cart'('bool',V_27A_27),V_27e_27),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27s_27))))))))) => ![V_27s_27]: p(s('bool','happ'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'bool'),V_27P_27),s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),V_27s_27)))))).
fof('thm.words.SUC_WORD_PRED', axiom, ![V_27A_27]: ![V_27x_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27x_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) => s('type.num.num','const.num.SUC_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) = s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))).
fof('thm.words.WORD_PRED_THM', axiom, ![V_27A_27]: ![V_27m_27]: (~ (s('type.fcp.cart'('bool',V_27A_27),V_27m_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27)))))))).
fof('thm.words.words_695_prove_ltb', axiom, ![V_27m_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27m_27))))))).
fof('thm.words.words_696_prove_ltb', axiom, ![V_27m_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27m_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27m_27)))))))).
fof('thm.words.LSR_LESS', axiom, ![V_27A_27]: ![V_27m_27, V_27y_27]: ((~ (s('type.fcp.cart'('bool',V_27A_27),V_27y_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27m_27))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.num.num',V_27m_27))))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))))).
fof('thm.words.word_sub_w2n', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: (p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))) => s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))))).
fof('thm.words.words_699_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27]: (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))))) <=> s('bool','const.bit.BIT_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27))) = s('bool','F_0'))).
fof('thm.words.WORD_LE_EQ_LS', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))) => s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))) = s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))).
fof('thm.words.WORD_LT_EQ_LO', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))) => s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))) = s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))).
fof('thm.words.WORD_ZERO_LE', axiom, ![V_27A_27]: ![V_27w_27]: s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))).
fof('thm.words.words_7|48|3_prove_ltb', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))) & p(s('bool','const.words.word_ls_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) => p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))))).
fof('thm.words.words_7|48|4_prove_ltb', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) => p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))))).
fof('thm.words.words_7|48|5_prove_ltb', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) & p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) => p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))))).
fof('thm.words.WORD_LT_SUB_UPPER', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) & p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) => p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))))).
fof('thm.words.words_7|48|7_prove_ltb', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) => p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27)))))).
fof('thm.words.WORD_SUB_LT', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) & p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) => (p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))) & p(s('bool','const.words.word_lt_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))).
fof('thm.words.WORD_SUB_LE', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: ((p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))) => (p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))))) & p(s('bool','const.words.word_le_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))).
fof('thm.words.INT_MIN_|49|', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.one.one'),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.words.dimword_|49|', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.one.one'),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.words.dimindex_2', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.one.one')),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.words.finite_2', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.one.one'),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_2', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.one.one')),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.words.dimword_2', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.one.one')),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.dimindex_3', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.one.one')),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.finite_3', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|49|'('type.one.one'),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_3', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.one.one')),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.dimword_3', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.one.one')),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.dimindex_4', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.finite_4', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_4', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.dimword_4', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.dimindex_5', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.finite_5', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one')),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_5', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.dimword_5', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.dimindex_6', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.words.finite_6', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_6', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.dimword_6', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.words.dimindex_7', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.finite_7', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one')),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_7', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.words.dimword_7', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))).
fof('thm.words.dimindex_8', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.finite_8', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_8', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))).
fof('thm.words.dimword_8', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))).
fof('thm.words.dimindex_9', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.finite_9', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_9', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))).
fof('thm.words.dimword_9', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))).
fof('thm.words.dimindex_|49||48|', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.finite_|49||48|', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one'))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_|49||48|', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))).
fof('thm.words.dimword_|49||48|', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))).
fof('thm.words.dimindex_|49||49|', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.finite_|49||49|', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one'))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_|49||49|', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))).
fof('thm.words.dimword_|49||49|', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))).
fof('thm.words.dimindex_|49|2', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.words.finite_|49|2', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_|49|2', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))).
fof('thm.words.dimword_|49|2', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))).
fof('thm.words.dimindex_|49|6', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.finite_|49|6', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_|49|6', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_|49|6', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_2|48|', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.finite_2|48|', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one')))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_2|48|', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_2|48|', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_24', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.finite_24', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_24', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_24', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_28', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.finite_28', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one')))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_28', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_28', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_3|48|', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.words.finite_3|48|', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one')))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_3|48|', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_3|48|', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.fcp.bit|49|'('type.one.one'))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_32', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.finite_32', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_32', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_32', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_48', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.words.finite_48', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_48', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_48', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_64', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.words.finite_64', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_64', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_64', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_96', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.words.finite_96', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one')))))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_96', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_96', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|49|'('type.one.one'))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimindex_|49|28', axiom, s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))).
fof('thm.words.finite_|49|28', axiom, p(s('bool','const.pred_set.FINITE_1'(s('fun'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.words.INT_MIN_|49|28', axiom, s('type.num.num','const.words.INT_MIN_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.dimword_|49|28', axiom, s('type.num.num','const.words.dimword_1'(s('type.bool.itself'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.words.n2w_itself_primitive_def', axiom, ![V_27A_27]: s('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_itself_0') = s('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'type.fcp.cart'('bool',V_27A_27)),'const.relation.WFREC_2'(s('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'bool')),'const.min.@_1'(s('fun'('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'type.fcp.cart'('bool',V_27A_27)),'fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'type.fcp.cart'('bool',V_27A_27))),'_dst_x0_1'(s('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'type.fcp.cart'('bool',V_27A_27)),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'fun'('fun'('type.num.num','fun'('type.bool.itself'(V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'type.fcp.cart'('bool',V_27A_27))),'const.pair.pair_CASE_0'),s('fun'('type.num.num','fun'('type.bool.itself'(V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'_dst_x00x10_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'const.combin.I_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0')))))))))).
fof('thm.words.words_799_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: (?[V_27n_27]: s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) => ?[V_27n_27]: s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))).
fof('thm.words.n2w_itself_ind', axiom, ![V_27A_27]: ![V_27P_27]: (![V_27n_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'bool'),V_27P_27),s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'bool'),V_27P_27),s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.bool.itself'(V_27A_27),V_27v_7c49_7c_27)))))))).
fof('ARITY_0_1_const.words.n2w_itself', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_itself_0'),s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),VV0))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_itself_1'(s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),VV0)))).
fof('thm.words.n2w_itself_def', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_itself_1'(s('type.pair.prod'('type.num.num','type.bool.itself'(V_27A_27)),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27n_27)))).
