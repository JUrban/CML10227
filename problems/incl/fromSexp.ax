fof('thm.fromSexp.isHexDigit_HEX', axiom, ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) => (p(s('bool','const.string.isHexDigit_1'(s('type.string.char','const.ASCIInumbers.HEX_1'(s('type.num.num',V_27n_27)))))) & (p(s('bool','const.string.isAlpha_1'(s('type.string.char','const.ASCIInumbers.HEX_1'(s('type.num.num',V_27n_27)))))) => p(s('bool','const.string.isUpper_1'(s('type.string.char','const.ASCIInumbers.HEX_1'(s('type.num.num',V_27n_27)))))))))).
fof('thm.fromSexp.EVERY_isHexDigit_num_to_hex_string', axiom, ![V_27n_27]: p(s('bool','const.list.EVERY_2'(s('fun'('type.string.char','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'const.string.isHexDigit_0'),s('fun'('type.string.char','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.string.char','bool'),'const.string.isAlpha_0'),s('fun'('type.string.char','bool'),'const.string.isUpper_0'))))),s('type.list.list'('type.string.char'),'const.ASCIInumbers.num_to_hex_string_1'(s('type.num.num',V_27n_27))))))).
fof('thm.fromSexp.isHexDigit_isPrint', axiom, ![V_27x_27]: (p(s('bool','const.string.isHexDigit_1'(s('type.string.char',V_27x_27)))) => p(s('bool','const.string.isPrint_1'(s('type.string.char',V_27x_27)))))).
fof('thm.fromSexp.num_to_hex_string_length_|49|', axiom, ![V_27x_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),'const.ASCIInumbers.num_to_hex_string_1'(s('type.num.num',V_27x_27))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.fromSexp.num_to_hex_string_length_2', axiom, ![V_27x_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',V_27x_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),'const.ASCIInumbers.num_to_hex_string_1'(s('type.num.num',V_27x_27))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.fromSexp.num_from_hex_string_length_2', axiom, ![V_27d2_27, V_27d_7c49_7c_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.ASCIInumbers.num_from_hex_string_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27d_7c49_7c_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27d2_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))).
fof('thm.fromSexp.num_from_hex_string_leading_|48|', axiom, ![V_27ls_27]: (~ (s('type.list.list'('type.string.char'),V_27ls_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0')) => s('type.num.num','const.ASCIInumbers.num_from_hex_string_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),V_27ls_27))))) = s('type.num.num','const.ASCIInumbers.num_from_hex_string_1'(s('type.list.list'('type.string.char'),V_27ls_27))))).
fof('thm.fromSexp.num_from_hex_string_length_2_less_|49|6', axiom, ![V_27h_7c49_7c_27, V_27h2_27]: (p(s('bool','const.string.isHexDigit_1'(s('type.string.char',V_27h_7c49_7c_27)))) => (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.ASCIInumbers.num_from_hex_string_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_7c49_7c_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h2_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) => s('type.string.char',V_27h_7c49_7c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))).
fof('thm.fromSexp.num_from_hex_string_num_to_hex_string', axiom, ![V_27n_27]: s('type.num.num','const.ASCIInumbers.num_from_hex_string_1'(s('type.list.list'('type.string.char'),'const.ASCIInumbers.num_to_hex_string_1'(s('type.num.num',V_27n_27))))) = s('type.num.num',V_27n_27)).
fof('thm.fromSexp.OPTION_MAP_INJ', axiom, ![V_27B_27,V_27A_27]: ![V_27f_27]: (![V_27x_27, V_27y_27]: (s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27x_27))) = s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27y_27))) => s(V_27A_27,V_27x_27) = s(V_27A_27,V_27y_27)) => ![V_27o_7c49_7c_27, V_27o2_27]: (s('type.option.option'(V_27B_27),'const.option.OPTION_MAP_2'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s('type.option.option'(V_27A_27),V_27o_7c49_7c_27))) = s('type.option.option'(V_27B_27),'const.option.OPTION_MAP_2'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s('type.option.option'(V_27A_27),V_27o2_27))) => s('type.option.option'(V_27A_27),V_27o_7c49_7c_27) = s('type.option.option'(V_27A_27),V_27o2_27)))).
fof('thm.fromSexp.OPTION_CHOICE_NONE', axiom, ![V_27A_27]: ![V_27x_27]: s('type.option.option'(V_27A_27),'const.option.OPTION_CHOICE_2'(s('type.option.option'(V_27A_27),V_27x_27),s('type.option.option'(V_27A_27),'const.option.NONE_0'))) = s('type.option.option'(V_27A_27),V_27x_27)).
fof('thm.fromSexp.OPTION_BIND_OPTION_GUARD', axiom, ![V_27A_27]: ![V_27f_27, V_27b_27]: s('type.option.option'(V_27A_27),'const.option.OPTION_BIND_2'(s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',V_27b_27))),s('fun'('type.one.one','type.option.option'(V_27A_27)),V_27f_27))) = s('type.option.option'(V_27A_27),'const.bool.COND_3'(s('bool',V_27b_27),s('type.option.option'(V_27A_27),'happ'(s('fun'('type.one.one','type.option.option'(V_27A_27)),V_27f_27),s('type.one.one','const.one.one_0'))),s('type.option.option'(V_27A_27),'const.option.NONE_0')))).
fof('thm.fromSexp.OPTION_IGNORE_BIND_OPTION_GUARD', axiom, ![V_27A_27]: ![V_27f_27, V_27b_27]: s('type.option.option'(V_27A_27),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',V_27b_27))),s('type.option.option'(V_27A_27),V_27f_27))) = s('type.option.option'(V_27A_27),'const.bool.COND_3'(s('bool',V_27b_27),s('type.option.option'(V_27A_27),V_27f_27),s('type.option.option'(V_27A_27),'const.option.NONE_0')))).
fof('thm.fromSexp.OPTION_APPLY_MAP3', axiom, ![V_27D_27,V_27C_27,V_27B_27,V_27A_27]: ![V_27z_27, V_27y_27, V_27x_27, V_27r_27, V_27f_27]: (s('type.option.option'(V_27A_27),'const.option.OPTION_APPLY_2'(s('type.option.option'('fun'(V_27B_27,V_27A_27)),'const.option.OPTION_APPLY_2'(s('type.option.option'('fun'(V_27C_27,'fun'(V_27B_27,V_27A_27))),'const.option.OPTION_MAP_2'(s('fun'(V_27D_27,'fun'(V_27C_27,'fun'(V_27B_27,V_27A_27))),V_27f_27),s('type.option.option'(V_27D_27),V_27x_27))),s('type.option.option'(V_27C_27),V_27y_27))),s('type.option.option'(V_27B_27),V_27z_27))) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27r_27))) <=> ?[V_27a_27, V_27b_27, V_27c_27]: (s('type.option.option'(V_27D_27),V_27x_27) = s('type.option.option'(V_27D_27),'const.option.SOME_1'(s(V_27D_27,V_27a_27))) & (s('type.option.option'(V_27C_27),V_27y_27) = s('type.option.option'(V_27C_27),'const.option.SOME_1'(s(V_27C_27,V_27b_27))) & (s('type.option.option'(V_27B_27),V_27z_27) = s('type.option.option'(V_27B_27),'const.option.SOME_1'(s(V_27B_27,V_27c_27))) & s(V_27A_27,'happ'(s('fun'(V_27B_27,V_27A_27),'happ'(s('fun'(V_27C_27,'fun'(V_27B_27,V_27A_27)),'happ'(s('fun'(V_27D_27,'fun'(V_27C_27,'fun'(V_27B_27,V_27A_27))),V_27f_27),s(V_27D_27,V_27a_27))),s(V_27C_27,V_27b_27))),s(V_27B_27,V_27c_27))) = s(V_27A_27,V_27r_27)))))).
fof('thm.fromSexp.FOLDR_SX_CONS_INJ', axiom, ![V_27l_7c49_7c_27, V_27l2_27]: (s('type.simpleSexp.sexp','const.list.FOLDR_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),V_27l_7c49_7c_27))) = s('type.simpleSexp.sexp','const.list.FOLDR_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),V_27l2_27))) => s('type.list.list'('type.simpleSexp.sexp'),V_27l_7c49_7c_27) = s('type.list.list'('type.simpleSexp.sexp'),V_27l2_27))).
fof('thm.fromSexp.strip_sxcons_|49||49|', axiom, ![V_27s_7c49_7c_27, V_27s2_27, V_27x_27]: ((s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp',V_27s_7c49_7c_27))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.SOME_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27x_27))) & s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp',V_27s2_27))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.SOME_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27x_27)))) => s('type.simpleSexp.sexp',V_27s_7c49_7c_27) = s('type.simpleSexp.sexp',V_27s2_27))).
fof('thm.fromSexp.dstrip_sexp_size', axiom, ![V_27s_27, V_27sym_27, V_27args_27]: (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27sym_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) => ![V_27e_27]: (p(s('bool','const.bool.IN_2'(s('type.simpleSexp.sexp',V_27e_27),s('fun'('type.simpleSexp.sexp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp',V_27e_27))),s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp',V_27s_27))))))))).
fof('thm.fromSexp.dstrip_sexp_SOME', axiom, ![V_27x_27, V_27s_27]: (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),V_27x_27))) <=> ?[V_27sym_27, V_27sa_27, V_27args_27]: (s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27sym_27))),s('type.simpleSexp.sexp',V_27sa_27))) & (s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp',V_27sa_27))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.SOME_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) & s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),V_27x_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27sym_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))).
fof('thm.fromSexp.strip_sxcons_SOME_NIL', axiom, ![V_27s_27]: (s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.SOME_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))) <=> s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))).
fof('thm.fromSexp.encode_control_def|split|0', axiom, s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.list.list'('type.string.char'),'const.list.NIL_0')).
fof('thm.fromSexp.encode_control_def|split|1', axiom, ![V_27c_27, V_27cs_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.string.char',V_27c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))) & s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27cs_27))))) = s('type.list.list'('type.string.char'),'const.bool.COND_3'(s('bool',Vv),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27cs_27))))))),s('type.list.list'('type.string.char'),'const.bool.COND_3'(s('bool','const.string.isPrint_1'(s('type.string.char',V_27c_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27cs_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.ASCIInumbers.num_to_hex_string_1'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))))))))),s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27cs_27))))))))))).
fof('ARITY_0_1_const.fromSexp.decode_control', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.decode_control_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.decode_control_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('_dst_x000000x011111x111010_ax', axiom, ![VA,VA4,VA6,VA7,VA2,VA3,VA5,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x011111x111010_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,VA8)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11111x11010_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7))))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA5,VA8))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,VA8)))),V__1),s(VA1,V__z)))))).
fof('thm.fromSexp.decode_control_primitive_def', axiom, s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.decode_control_0') = s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'const.min.@_1'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool')))))))),'_dst_x00000000x01111111x11100001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool'))))))),'_dst_x0000000x0100000x1011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool')))))),'_dst_x000000x111000x011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool'))))),'_dst_x00000x10100x01111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x01x10_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('fun'('type.string.char','type.string.char'),'_i_0_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool')))),'_dst_x0000x0100x1011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool'))),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','type.list.list'('type.string.char'))),'_dst_x01x10_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'))))))))))))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','bool')))))),'_dst_x000000x011111x111010_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','bool'))))),'_dst_x00000x01000x10111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','bool')))),'_dst_x0000x1110x0101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x01x10_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('fun'('type.string.char','type.string.char'),'_i_0_0'))),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool'))),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','type.list.list'('type.string.char'))),'_dst_x01x10_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','bool'))),'_dst_x000x001x111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.string.char','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','bool'))),'_dstsel_0_x010x011_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','type.list.list'('type.string.char'))),'_dst_x01x10_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'))))))))))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x111x111_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))))),'_dst_x0000x1101x0010_3'(s('fun'('fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))),'const.bool.literal_case_0'),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))))),'_dst_x0000x0001x1110x1011_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x101_3'(s('fun'('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_MAP_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_i_0_0'))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.string.char'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x000x101_4'(s('fun'('type.list.list'('type.string.char'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))))),'_dst_x0000x0110x1111_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.string.char','fun'('type.string.char','type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'const.string.isHexDigit_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'const.string.isHexDigit_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.string.char','bool'),'const.string.isAlpha_0'),s('fun'('type.string.char','bool'),'const.string.isUpper_0'))),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.string.char','bool'),'const.string.isAlpha_0'),s('fun'('type.string.char','bool'),'const.string.isUpper_0'))),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x11_2'(s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('fun'('type.string.char','fun'('type.string.char','type.string.char')),'_dst_x00x11_2'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('fun'('type.string.char','fun'('type.string.char','type.num.num')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.num.num'),'const.ASCIInumbers.num_from_hex_string_0'),s('fun'('type.string.char','fun'('type.string.char','type.list.list'('type.string.char'))),'_dst_x00x10x01_3'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.string.char','type.string.char'),'_i_0_0'),s('fun'('type.string.char','type.list.list'('type.string.char')),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))))),'_dst_x0000x0110x1001_3'(s('fun'('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_MAP_0'),s('fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.string.char','fun'('type.string.char','type.string.char')),'_dst_x00x11_2'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('fun'('type.string.char','fun'('type.string.char','type.num.num')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.num.num'),'const.ASCIInumbers.num_from_hex_string_0'),s('fun'('type.string.char','fun'('type.string.char','type.list.list'('type.string.char'))),'_dst_x00x10x01_3'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.string.char','type.string.char'),'_i_0_0'),s('fun'('type.string.char','type.list.list'('type.string.char')),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_i_0_0'))))))))),s('fun'('type.string.char','type.string.char'),'_i_0_0'))))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x111_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.string.char','type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.string.char','bool'),'const.string.isPrint_0'))),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x101_3'(s('fun'('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_MAP_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_i_0_0')))))))))))))).
fof('thm.fromSexp.fromSexp_2|49|_prove_ltb', axiom, ![V_27a_27]: ((s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0') | ?[V_27c_27, V_27cs_27]: s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27cs_27)))) => (s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0') | ?[V_27c_27, V_27cs_27]: s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27cs_27)))))).
fof('thm.fromSexp.decode_control_ind', axiom, ![V_27P_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) & ![V_27c_27, V_27cs_27]: ((![V_27v2_27, V_27cs_7c39_7c_27, V_27d_7c49_7c_27, V_27d2_27, V_27cs_7c39_7c_7c39_7c_27]: ((s('type.string.char',V_27c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) & (s('type.list.list'('type.string.char'),V_27cs_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27v2_27),s('type.list.list'('type.string.char'),V_27cs_7c39_7c_27))) & (s('type.string.char',V_27d_7c49_7c_27) = s('type.string.char',V_27v2_27) & (~ (s('type.string.char',V_27d_7c49_7c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))) & s('type.list.list'('type.string.char'),V_27cs_7c39_7c_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27d2_27),s('type.list.list'('type.string.char'),V_27cs_7c39_7c_7c39_7c_27))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),V_27cs_7c39_7c_7c39_7c_27))))) & (![V_27v2_27, V_27cs_7c39_7c_27, V_27d_7c49_7c_27]: ((s('type.string.char',V_27c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) & (s('type.list.list'('type.string.char'),V_27cs_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27v2_27),s('type.list.list'('type.string.char'),V_27cs_7c39_7c_27))) & (s('type.string.char',V_27d_7c49_7c_27) = s('type.string.char',V_27v2_27) & s('type.string.char',V_27d_7c49_7c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),V_27cs_7c39_7c_27))))) & (~ (s('type.string.char',V_27c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),V_27cs_27))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27cs_27)))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),V_27v_27)))))).
fof('thm.fromSexp.decode_control_def|split|0', axiom, s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.decode_control_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0')))).
fof('thm.fromSexp.decode_control_def|split|1', axiom, ![V_27cs_27, V_27c_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.string.char',V_27c_27) = s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))) & s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.decode_control_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char',V_27c_27))),s('type.list.list'('type.string.char'),V_27cs_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'happ'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('bool',Vv))),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char')))),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),V_27cs_27))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))),'const.bool.literal_case_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x01x10x11_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','happ'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_MAP_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char',V_27c_27))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.decode_control_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x00x01_4'(s('fun'('type.list.list'('type.string.char'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x110x111_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.string.char','fun'('type.string.char','type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'const.string.isHexDigit_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'const.string.isHexDigit_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.string.char','bool'),'const.string.isAlpha_0'),s('fun'('type.string.char','bool'),'const.string.isUpper_0'))),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.string.char','bool'),'const.string.isAlpha_0'),s('fun'('type.string.char','bool'),'const.string.isUpper_0'))),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x00x11_2'(s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('fun'('type.string.char','fun'('type.string.char','type.string.char')),'_dst_x00x11_2'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('fun'('type.string.char','fun'('type.string.char','type.num.num')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.num.num'),'const.ASCIInumbers.num_from_hex_string_0'),s('fun'('type.string.char','fun'('type.string.char','type.list.list'('type.string.char'))),'_dst_x00x10x01_3'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.string.char','type.string.char'),'_i_0_0'),s('fun'('type.string.char','type.list.list'('type.string.char')),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x110x001_3'(s('fun'('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_MAP_0'),s('fun'('type.string.char','fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.string.char','fun'('type.string.char','type.string.char')),'_dst_x00x11_2'(s('fun'('type.num.num','type.string.char'),'const.string.CHR_0'),s('fun'('type.string.char','fun'('type.string.char','type.num.num')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.num.num'),'const.ASCIInumbers.num_from_hex_string_0'),s('fun'('type.string.char','fun'('type.string.char','type.list.list'('type.string.char'))),'_dst_x00x10x01_3'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.string.char','type.string.char'),'_i_0_0'),s('fun'('type.string.char','type.list.list'('type.string.char')),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.decode_control_0'))))))))),s('fun'('type.string.char','type.string.char'),'_i_0_0'))))))),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_IGNORE_BIND_0'),s('type.option.option'('type.one.one'),'happ'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('bool','happ'(s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('type.string.char',V_27c_27))))))),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_MAP_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char',V_27c_27))))),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.decode_control_0'),s('type.list.list'('type.string.char'),V_27cs_27))))))))))).
fof('thm.fromSexp.EVERY_isPrint_encode_control', axiom, ![V_27ls_27]: p(s('bool','const.list.EVERY_2'(s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27ls_27))))))).
fof('thm.fromSexp.decode_encode_control', axiom, ![V_27ls_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.decode_control_1'(s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27ls_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27ls_27)))).
fof('thm.fromSexp.encode_decode_control', axiom, ![V_27ls_27, V_27r_27]: (s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.decode_control_1'(s('type.list.list'('type.string.char'),V_27ls_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27r_27))) => s('type.list.list'('type.string.char'),V_27ls_27) = s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27r_27))))).
fof('thm.fromSexp.SEXSTR_def', axiom, ![V_27s_27]: s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27s_27)))))).
fof('thm.fromSexp.SEXSTR_|49||49|', axiom, ![V_27s2_27, V_27s_7c49_7c_27]: (s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s2_27))) <=> s('type.list.list'('type.string.char'),V_27s_7c49_7c_27) = s('type.list.list'('type.string.char'),V_27s2_27))).
fof('thm.fromSexp.SEXSTR_distinct|split|0', axiom, ![V_27sym_27, V_27s_27]: ~ (s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27sym_27))))).
fof('thm.fromSexp.SEXSTR_distinct|split|1', axiom, ![V_27s_27, V_27num_27]: ~ (s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27num_27))))).
fof('thm.fromSexp.SEXSTR_distinct|split|2', axiom, ![V_27s_27, V_27d_27, V_27a_27]: ~ (s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_27),s('type.simpleSexp.sexp',V_27d_27))))).
fof('thm.fromSexp.SEXSTR_distinct|split|3', axiom, ![V_27s_7c39_7c_27, V_27s_27]: (s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_7c39_7c_27))) <=> s('type.list.list'('type.string.char'),V_27s_7c39_7c_27) = s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27s_27))))).
fof('thm.fromSexp.odestSEXSTR_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'_dst_x1x0x0x0x0_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.num.num','type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char'))))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('type.num.num','type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.decode_control_0')))))))))).
fof('thm.fromSexp.fromSexp_3|49|_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27v2_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))) | (?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))) | ?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) => (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27v_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27v2_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))) | ?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27)))))))).
fof('thm.fromSexp.odestSEXSTR_ind', axiom, ![V_27P_27]: ((![V_27s_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) & (![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27)))))) & (![V_27v2_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27)))))) & ![V_27v3_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('ARITY_0_1_const.fromSexp.odestSEXSTR', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSEXSTR_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.odestSEXSTR_def|split|0', axiom, ![V_27s_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSEXSTR_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.decode_control_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.fromSexp.odestSEXSTR_def|split|1', axiom, ![V_27v_7c49_7c_27, V_27v_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSEXSTR_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.odestSEXSTR_def|split|2', axiom, ![V_27v2_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSEXSTR_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.odestSEXSTR_def|split|3', axiom, ![V_27v3_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSEXSTR_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.encode_control_remove', axiom, ![V_27s_27]: ((p(s('bool','const.list.EVERY_2'(s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('type.list.list'('type.string.char'),V_27s_27)))) & ~ (p(s('bool','const.bool.IN_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.string.char','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),V_27s_27)))))))) => s('type.list.list'('type.string.char'),'const.fromSexp.encode_control_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),V_27s_27))).
fof('thm.fromSexp.SEXSTR_remove', axiom, ![V_27s_27]: ((p(s('bool','const.list.EVERY_2'(s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('type.list.list'('type.string.char'),V_27s_27)))) & ~ (p(s('bool','const.bool.IN_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.string.char','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),V_27s_27)))))))) => s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))))).
fof('ARITY_0_1_const.fromSexp.odestSXSTR', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSXSTR_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSTR_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.odestSXSTR_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSXSTR_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'_dst_x1x0x0x0x0_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.num.num','type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char'))))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('type.num.num','type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0')))))))))).
fof('thm.fromSexp.odestSXSTR_def|split|0', axiom, ![V_27s_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSTR_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.fromSexp.odestSXSTR_def|split|1', axiom, ![V_27v_7c49_7c_27, V_27v_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSTR_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXSTR_def|split|2', axiom, ![V_27v2_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSTR_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXSTR_def|split|3', axiom, ![V_27v3_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSTR_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('ARITY_0_1_const.fromSexp.odestSXSYM', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSXSYM_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSYM_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.odestSXSYM_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSXSYM_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'_dst_x1x0x0x0x0_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.num.num','type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char'))))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'))),s('fun'('type.num.num','type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')))))))))))).
fof('thm.fromSexp.fromSexp_4|49|_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))) | ?[V_27v4_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27)))))) => (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27v_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))) | ?[V_27v4_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27)))))))).
fof('thm.fromSexp.odestSXSYM_ind', axiom, ![V_27P_27]: ((![V_27s_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) & (![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27)))))) & (![V_27v3_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27)))))) & ![V_27v4_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.fromSexp.odestSXSYM_def|split|0', axiom, ![V_27s_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSYM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.fromSexp.odestSXSYM_def|split|1', axiom, ![V_27v_7c49_7c_27, V_27v_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSYM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXSYM_def|split|2', axiom, ![V_27v3_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSYM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXSYM_def|split|3', axiom, ![V_27v4_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSYM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('ARITY_0_1_const.fromSexp.odestSXNUM', axiom, ![VV0]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.fromSexp.odestSXNUM_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.num.num'),'const.fromSexp.odestSXNUM_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.odestSXNUM_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.fromSexp.odestSXNUM_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'fun'('type.simpleSexp.sexp','type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'_dst_x1x0x0x0x0_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.num.num'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.num.num')),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.num.num')),'type.option.option'('type.num.num')))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'happ'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.I_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'happ'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.I_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))))),s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'happ'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.I_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0')))))))))))).
fof('thm.fromSexp.fromSexp_45_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27v2_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))) | (?[V_27n_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))) | ?[V_27v4_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27)))))) => (?[V_27n_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))) | (?[V_27v_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27v2_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))) | ?[V_27v4_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27)))))))).
fof('thm.fromSexp.odestSXNUM_ind', axiom, ![V_27P_27]: ((![V_27n_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))) & (![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27)))))) & (![V_27v2_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27)))))) & ![V_27v4_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.fromSexp.odestSXNUM_def|split|0', axiom, ![V_27n_27]: s('type.option.option'('type.num.num'),'const.fromSexp.odestSXNUM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27n_27)))).
fof('thm.fromSexp.odestSXNUM_def|split|1', axiom, ![V_27v_7c49_7c_27, V_27v_27]: s('type.option.option'('type.num.num'),'const.fromSexp.odestSXNUM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXNUM_def|split|2', axiom, ![V_27v2_27]: s('type.option.option'('type.num.num'),'const.fromSexp.odestSXNUM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXNUM_def|split|3', axiom, ![V_27v4_27]: s('type.option.option'('type.num.num'),'const.fromSexp.odestSXNUM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')).
fof('ARITY_1_2_const.fromSexp.sexpopt', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.option.option'('type.option.option'(V_27A_27)),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.option.option'(V_27A_27))),'const.fromSexp.sexpopt_1'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0))),s('type.simpleSexp.sexp',VV1))) = s('type.option.option'('type.option.option'(V_27A_27)),'const.fromSexp.sexpopt_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0),s('type.simpleSexp.sexp',VV1)))).
fof('thm.fromSexp.sexpopt_def', axiom, ![V_27A_27]: ![V_27p_27, V_27s_27]: s('type.option.option'('type.option.option'(V_27A_27)),'const.fromSexp.sexpopt_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.option.option'(V_27A_27)),'const.option.OPTION_CHOICE_2'(s('type.option.option'('type.option.option'(V_27A_27)),'const.option.OPTION_BIND_2'(s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSYM_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.option.option'(V_27A_27))),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.option.option'(V_27A_27)),'type.option.option'('type.option.option'(V_27A_27)))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.option.option'('type.option.option'(V_27A_27)),'happ'(s('fun'('type.option.option'(V_27A_27),'type.option.option'('type.option.option'(V_27A_27))),'const.option.SOME_0'),s('type.option.option'(V_27A_27),'const.option.NONE_0'))))))),s('type.option.option'('type.option.option'(V_27A_27)),'const.option.OPTION_BIND_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.option.option'(V_27A_27))),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'(V_27A_27)))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.option.option'(V_27A_27)),'type.option.option'('type.option.option'(V_27A_27)))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.option.option'(V_27A_27),'type.option.option'('type.option.option'(V_27A_27))),'const.option.OPTION_MAP_1'(s('fun'(V_27A_27,'type.option.option'(V_27A_27)),'const.option.SOME_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0')))))))))))))).
fof('thm.fromSexp.fromSexp_5|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: (?[V_27p_27, V_27s_27]: s('type.pair.prod'('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),'type.simpleSexp.sexp'),V_27a_27) = s('type.pair.prod'('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),'type.simpleSexp.sexp'),'const.pair.,_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('type.simpleSexp.sexp',V_27s_27))) => ?[V_27p_27, V_27s_27]: s('type.pair.prod'('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),'type.simpleSexp.sexp'),V_27a_27) = s('type.pair.prod'('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),'type.simpleSexp.sexp'),'const.pair.,_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('type.simpleSexp.sexp',V_27s_27))))).
fof('thm.fromSexp.sexplist_ind', axiom, ![V_27A_27]: ![V_27P_27]: (![V_27p_27, V_27s_27]: (![V_27h_27, V_27t_27, V_27ph_27]: ((s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27h_27),s('type.simpleSexp.sexp',V_27t_27))) & s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('type.simpleSexp.sexp',V_27h_27))) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27ph_27)))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),'happ'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),'fun'('type.simpleSexp.sexp','bool')),V_27P_27),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27))),s('type.simpleSexp.sexp',V_27t_27))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),'happ'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),'fun'('type.simpleSexp.sexp','bool')),V_27P_27),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27))),s('type.simpleSexp.sexp',V_27s_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),'happ'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),'fun'('type.simpleSexp.sexp','bool')),V_27P_27),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27v_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27)))))).
fof('thm.fromSexp.sexplist_def', axiom, ![V_27A_27]: ![V_27s_27, V_27p_27]: s('type.option.option'('type.list.list'(V_27A_27)),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'(V_27A_27))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27))),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp',V_27s_27),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'(V_27A_27)))),'_dst_x00x10x01_3'(s('fun'('type.option.option'(V_27A_27),'fun'('fun'(V_27A_27,'type.option.option'('type.list.list'(V_27A_27))),'type.option.option'('type.list.list'(V_27A_27)))),'const.option.OPTION_BIND_0'),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('fun'('type.simpleSexp.sexp','fun'(V_27A_27,'type.option.option'('type.list.list'(V_27A_27)))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.list.list'(V_27A_27)),'fun'('fun'('type.list.list'(V_27A_27),'type.option.option'('type.list.list'(V_27A_27))),'type.option.option'('type.list.list'(V_27A_27)))),'const.option.OPTION_BIND_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'(V_27A_27))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27))),s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'type.option.option'('type.list.list'(V_27A_27)))),'_dst_x00x11_2'(s('fun'('type.list.list'(V_27A_27),'type.option.option'('type.list.list'(V_27A_27))),'const.option.SOME_0'),s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.list.CONS_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'(V_27A_27))),'_dst_x0x1x0x0_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'(V_27A_27)),'fun'('type.option.option'('type.list.list'(V_27A_27)),'type.option.option'('type.list.list'(V_27A_27))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.option.option'('type.list.list'(V_27A_27)),'happ'(s('fun'('type.list.list'(V_27A_27),'type.option.option'('type.list.list'(V_27A_27))),'const.option.SOME_0'),s('type.list.list'(V_27A_27),'const.list.NIL_0'))),s('type.option.option'('type.list.list'(V_27A_27)),'const.option.NONE_0'))),s('fun'('type.num.num','type.option.option'('type.list.list'(V_27A_27))),'_dst_x0_1'(s('type.option.option'('type.list.list'(V_27A_27)),'const.option.NONE_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'(V_27A_27))),'_dst_x0_1'(s('type.option.option'('type.list.list'(V_27A_27)),'const.option.NONE_0')))))).
fof('ARITY_2_3_const.fromSexp.sexppair', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'(V_27A_27,V_27B_27))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),VV1))),s('type.simpleSexp.sexp',VV2))) = s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.fromSexp.sexppair_3'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),VV1),s('type.simpleSexp.sexp',VV2)))).
fof('thm.fromSexp.sexppair_def', axiom, ![V_27A_27,V_27B_27]: ![V_27p_7c49_7c_27, V_27p2_27, V_27s_27]: s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.fromSexp.sexppair_3'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_7c49_7c_27),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),V_27p2_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp',V_27s_27),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)))),'_dst_x00x10x01_3'(s('fun'('type.option.option'(V_27A_27),'fun'('type.option.option'(V_27B_27),'type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)))),'const.option.OPTION_MAP2_1'(s('fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'(V_27A_27,V_27B_27))),'const.pair.,_0'))),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_7c49_7c_27),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),V_27p2_27))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'(V_27A_27,V_27B_27))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.option.NONE_0'))),s('fun'('type.num.num','type.option.option'('type.pair.prod'(V_27A_27,V_27B_27))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.option.NONE_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'(V_27A_27,V_27B_27))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.option.NONE_0')))))).
fof('thm.fromSexp.sexppair_CONG', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c49_7c_27, V_27s2_27, V_27p_7c49_7c_27, V_27p_7c49_7c_7c39_7c_27, V_27p2_27, V_27p2_7c39_7c_27]: ((s('type.simpleSexp.sexp',V_27s_7c49_7c_27) = s('type.simpleSexp.sexp',V_27s2_27) & (![V_27s_27]: (?[V_27s_7c39_7c_27]: s('type.simpleSexp.sexp',V_27s2_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_27),s('type.simpleSexp.sexp',V_27s_7c39_7c_27))) => s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_7c49_7c_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_7c49_7c_7c39_7c_27),s('type.simpleSexp.sexp',V_27s_27)))) & ![V_27s_27]: (?[V_27s_7c39_7c_27]: s('type.simpleSexp.sexp',V_27s2_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c39_7c_27),s('type.simpleSexp.sexp',V_27s_27))) => s('type.option.option'(V_27B_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),V_27p2_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'(V_27B_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),V_27p2_7c39_7c_27),s('type.simpleSexp.sexp',V_27s_27)))))) => s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.fromSexp.sexppair_3'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_7c49_7c_27),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),V_27p2_27),s('type.simpleSexp.sexp',V_27s_7c49_7c_27))) = s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.fromSexp.sexppair_3'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_7c49_7c_7c39_7c_27),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),V_27p2_7c39_7c_27),s('type.simpleSexp.sexp',V_27s2_27))))).
fof('ARITY_1_2_const.fromSexp.sexplist', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.option.option'('type.list.list'(V_27A_27)),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'(V_27A_27))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0))),s('type.simpleSexp.sexp',VV1))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.fromSexp.sexplist_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0),s('type.simpleSexp.sexp',VV1)))).
fof('thm.fromSexp.strip_sxcons_FAIL_sexplist_FAIL', axiom, ![V_27A_27]: ![V_27p_27, V_27s_27]: (s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.NONE_0') => s('type.option.option'('type.list.list'(V_27A_27)),'const.fromSexp.sexplist_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.option.NONE_0'))).
fof('thm.fromSexp.monad_bind_FAIL', axiom, ![V_27B_27,V_27A_27]: ![V_27m_7c49_7c_27]: s('type.option.option'(V_27A_27),'const.option.OPTION_BIND_2'(s('type.option.option'(V_27B_27),V_27m_7c49_7c_27),s('fun'(V_27B_27,'type.option.option'(V_27A_27)),'_dst_x0_1'(s('type.option.option'(V_27A_27),'const.option.NONE_0'))))) = s('type.option.option'(V_27A_27),'const.option.NONE_0')).
fof('thm.fromSexp.monad_unitbind_CONG', axiom, ![V_27A_27]: ![V_27m_7c49_7c_7c49_7c_27, V_27m2_7c49_7c_27, V_27m_7c49_7c2_27, V_27m22_27]: ((s('type.option.option'('type.one.one'),V_27m_7c49_7c_7c49_7c_27) = s('type.option.option'('type.one.one'),V_27m_7c49_7c2_27) & (s('type.option.option'('type.one.one'),V_27m_7c49_7c2_27) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))) => s('type.option.option'(V_27A_27),V_27m2_7c49_7c_27) = s('type.option.option'(V_27A_27),V_27m22_27))) => s('type.option.option'(V_27A_27),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'('type.one.one'),V_27m_7c49_7c_7c49_7c_27),s('type.option.option'(V_27A_27),V_27m2_7c49_7c_27))) = s('type.option.option'(V_27A_27),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'('type.one.one'),V_27m_7c49_7c2_27),s('type.option.option'(V_27A_27),V_27m22_27))))).
fof('thm.fromSexp.sexplist_CONG', axiom, ![V_27A_27]: ![V_27s_7c49_7c_27, V_27s2_27, V_27p_7c49_7c_27, V_27p2_27]: ((s('type.simpleSexp.sexp',V_27s_7c49_7c_27) = s('type.simpleSexp.sexp',V_27s2_27) & ![V_27e_27]: (p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27e_27),s('type.simpleSexp.sexp',V_27s2_27)))) => s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_7c49_7c_27),s('type.simpleSexp.sexp',V_27e_27))) = s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p2_27),s('type.simpleSexp.sexp',V_27e_27))))) => s('type.option.option'('type.list.list'(V_27A_27)),'const.fromSexp.sexplist_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_7c49_7c_27),s('type.simpleSexp.sexp',V_27s_7c49_7c_27))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.fromSexp.sexplist_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p2_27),s('type.simpleSexp.sexp',V_27s2_27))))).
fof('ARITY_1_2_const.fromSexp.sexpid', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.option.option'('type.ast.id'(V_27A_27)),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.id'(V_27A_27))),'const.fromSexp.sexpid_1'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0))),s('type.simpleSexp.sexp',VV1))) = s('type.option.option'('type.ast.id'(V_27A_27)),'const.fromSexp.sexpid_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0),s('type.simpleSexp.sexp',VV1)))).
fof('thm.fromSexp.sexpid_def', axiom, ![V_27A_27]: ![V_27p_27, V_27s_27]: s('type.option.option'('type.ast.id'(V_27A_27)),'const.fromSexp.sexpid_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.id'(V_27A_27)),'const.option.OPTION_BIND_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.id'(V_27A_27))),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.id'(V_27A_27)))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.id'(V_27A_27)),'fun'('type.option.option'('type.ast.id'(V_27A_27)),'type.option.option'('type.ast.id'(V_27A_27)))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.id'(V_27A_27)))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.id'(V_27A_27)),'type.option.option'('type.ast.id'(V_27A_27)))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.id'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.option.option'(V_27A_27),'type.option.option'('type.ast.id'(V_27A_27))),'const.option.OPTION_MAP_1'(s('fun'(V_27A_27,'type.ast.id'(V_27A_27)),'const.ast.Short_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.id'(V_27A_27)))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.id'(V_27A_27)),'type.option.option'('type.ast.id'(V_27A_27)))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.id'(V_27A_27))),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'(V_27A_27),'type.option.option'('type.ast.id'(V_27A_27)))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'type.ast.id'(V_27A_27))),'const.ast.Long_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27p_27),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))).
fof('thm.fromSexp.sexptctor_def', axiom, ![V_27s_27]: s('type.option.option'('type.ast.tctor'),'const.fromSexp.sexptctor_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.tctor'),'happ'(s('fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor')),'happ'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('type.option.option'('type.ast.tctor'),'const.option.OPTION_BIND_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.tctor')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.tctor'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.tctor')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'type.option.option'('type.ast.tctor')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.tctor'),'const.ast.TC_name_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'const.fromSexp.sexpid_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.OPTION_BIND_2'(s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSYM_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.tctor'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_int_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_char_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_string_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_ref_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_word8_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_word64_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_word8array_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_fn_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_tup_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_exn_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_vector_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.tctor')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.tctor'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor','const.ast.TC_array_0')))))))))))).
fof('ARITY_0_2_const.simpleSexp.sxMEM', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.simpleSexp.sxMEM_0'),s('type.simpleSexp.sexp',VV0))),s('type.simpleSexp.sexp',VV1))) = s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',VV0),s('type.simpleSexp.sexp',VV1)))).
fof('ARITY_0_1_const.fromSexp.sexplist', axiom, ![V_27A_27]: ![VV0]: s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'(V_27A_27))),'happ'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'(V_27A_27)))),'const.fromSexp.sexplist_0'),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0))) = s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'(V_27A_27))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0)))).
fof('ARITY_0_1_const.fromSexp.sexptctor', axiom, ![VV0]: s('type.option.option'('type.ast.tctor'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.tctor')),'const.fromSexp.sexptctor_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.tctor'),'const.fromSexp.sexptctor_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.sexptype_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x01111x11001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x1110x0111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.simpleSexp.sxMEM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t')),'const.combin.I_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t'))),'_dst_x00x01x10_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.t')),'type.option.option'('type.ast.t'))),'const.option.OPTION_BIND_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.t'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.t'))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')))),'_dst_x000x011x111_3'(s('fun'('type.option.option'('type.ast.t'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.t'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.ast.t')),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.string.char'),'type.ast.t'),'const.ast.Tvar_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.ast.t')),'const.option.OPTION_MAP_1'(s('fun'('type.num.num','type.ast.t'),'const.ast.Tvar_db_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.fromSexp.odestSXNUM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.list.list'('type.ast.t')),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.t'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.t')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.t')))),'const.fromSexp.sexplist_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t'))),'_i_0_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.tctor')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.tctor')),'const.fromSexp.sexptctor_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))).
fof('thm.fromSexp.sexptype_ind', axiom, ![V_27P_27]: (![V_27s_27]: (![V_27s_7c39_7c_27, V_27args_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_7c39_7c_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27s_7c39_7c_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))) & p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27a_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s_27))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.fromSexp.sexptype_def', axiom, ![V_27s_27]: s('type.option.option'('type.ast.t'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0'),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.t'),'const.option.OPTION_BIND_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.t')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.t'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.t'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.ast.t')),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.string.char'),'type.ast.t'),'const.ast.Tvar_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.ast.t')),'const.option.OPTION_MAP_1'(s('fun'('type.num.num','type.ast.t'),'const.ast.Tvar_db_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.fromSexp.odestSXNUM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.t'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.ast.t')),'fun'('type.option.option'('type.ast.tctor'),'type.option.option'('type.ast.t'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.t'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.t'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.tctor')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.tctor')),'const.fromSexp.sexptctor_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))).
fof('ARITY_0_1_const.fromSexp.sexplit', axiom, ![VV0]: s('type.option.option'('type.ast.lit'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lit')),'const.fromSexp.sexplit_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.lit'),'const.fromSexp.sexplit_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.sexplit_def', axiom, ![V_27s_27]: s('type.option.option'('type.ast.lit'),'const.fromSexp.sexplit_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.lit'),'happ'(s('fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit')),'happ'(s('fun'('type.option.option'('type.ast.lit'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_CHOICE_0'),s('type.option.option'('type.ast.lit'),'happ'(s('fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit')),'happ'(s('fun'('type.option.option'('type.ast.lit'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_CHOICE_0'),s('type.option.option'('type.ast.lit'),'const.option.OPTION_MAP_2'(s('fun'('type.num.num','type.ast.lit'),'const.combin.o_2'(s('fun'('type.integer.int','type.ast.lit'),'const.ast.IntLit_0'),s('fun'('type.num.num','type.integer.int'),'const.integer.int_of_num_0'))),s('type.option.option'('type.num.num'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.fromSexp.odestSXNUM_0'),s('type.simpleSexp.sexp',V_27s_27))))))),s('type.option.option'('type.ast.lit'),'const.option.OPTION_MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.ast.lit'),'const.ast.StrLit_0'),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('type.simpleSexp.sexp',V_27s_27))))))))),s('type.option.option'('type.ast.lit'),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.lit')),'type.option.option'('type.ast.lit')),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.lit')),'type.option.option'('type.ast.lit'))),'const.option.OPTION_BIND_0'),s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.lit')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit'))),'_dst_x00x01x11_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.lit'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.lit'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.lit'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.ast.lit')),'type.option.option'('type.ast.lit'))),'const.option.OPTION_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.fromSexp.odestSXNUM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))),s('fun'('type.num.num','type.option.option'('type.ast.lit')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.lit'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit')))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.num.|48|_0'))),s('type.option.option'('type.ast.lit'),'const.option.NONE_0'),s('fun'('type.num.num','type.option.option'('type.ast.lit')),'_dst_x0x1_2'(s('fun'('type.ast.lit','type.option.option'('type.ast.lit')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.lit'),'_dst_x0x1_2'(s('fun'('type.integer.int','type.ast.lit'),'const.ast.IntLit_0'),s('fun'('type.num.num','type.integer.int'),'_dst_x0x1_2'(s('fun'('type.integer.int','type.integer.int'),'const.integer.int_neg_0'),s('fun'('type.num.num','type.integer.int'),'const.integer.int_of_num_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lit')),'type.option.option'('type.ast.lit'))),'const.option.OPTION_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lit')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lit')),'_dst_x0x1_2'(s('fun'('type.ast.lit','type.option.option'('type.ast.lit')),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'type.ast.lit'),'_dst_x0x1_2'(s('fun'('type.string.char','type.ast.lit'),'const.ast.Char_0'),s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.list.HD_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.ast.lit')),'type.option.option'('type.ast.lit'))),'const.option.OPTION_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.fromSexp.odestSXNUM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))),s('fun'('type.num.num','type.option.option'('type.ast.lit')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.num.num','type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.lit')),'_dst_x0x1_2'(s('fun'('type.ast.lit','type.option.option'('type.ast.lit')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.lit'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.ast.lit'),'const.ast.Word8_0'),s('fun'('type.num.num','type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.words.n2w_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.ast.lit')),'type.option.option'('type.ast.lit'))),'const.option.OPTION_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.num.num')),'const.fromSexp.odestSXNUM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))),s('fun'('type.num.num','type.option.option'('type.ast.lit')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.lit'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.num.num','type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.lit')),'_dst_x0x1_2'(s('fun'('type.ast.lit','type.option.option'('type.ast.lit')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.lit'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ast.lit'),'const.ast.Word64_0'),s('fun'('type.num.num','type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.words.n2w_0')))))))))))))))))))))).
fof('thm.fromSexp.sexppat_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x01111x11001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x1110x0111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.simpleSexp.sxMEM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat')),'const.combin.I_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat'))),'_dst_x00x01x11_3'(s('fun'('type.option.option'('type.ast.pat'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.ast.pat')),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.string.char'),'type.ast.pat'),'const.ast.Pvar_0'))),s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat'))),'_dst_x00x01x10_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.pat')),'type.option.option'('type.ast.pat'))),'const.option.OPTION_BIND_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.pat'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.pat'))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.pat'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')))),'_dst_x000x011x111_3'(s('fun'('type.option.option'('type.ast.pat'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.pat')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.lit','type.ast.pat'),'const.ast.Plit_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lit')),'const.fromSexp.sexplit_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dst_x00x01x11_3'(s('fun'('type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'fun'('type.option.option'('type.list.list'('type.ast.pat')),'type.option.option'('type.ast.pat'))),'const.option.OPTION_MAP2_1'(s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'type.ast.pat')),'const.ast.Pcon_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))))),'const.fromSexp.sexpopt_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'const.fromSexp.sexpid_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.pat')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.pat')))),'const.fromSexp.sexplist_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat'))),'_i_0_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.pat','type.ast.pat'),'const.ast.Pref_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0')))))))))))))))))))))).
fof('thm.fromSexp.sexppat_ind', axiom, ![V_27P_27]: (![V_27s_27]: ((![V_27nm_27, V_27args_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))) & p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27a_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27a_27))))) & ![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s_27))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.fromSexp.sexppat_def', axiom, ![V_27s_27]: s('type.option.option'('type.ast.pat'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.pat'),'happ'(s('fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat')),'happ'(s('fun'('type.option.option'('type.ast.pat'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_CHOICE_0'),s('type.option.option'('type.ast.pat'),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.ast.pat')),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.string.char'),'type.ast.pat'),'const.ast.Pvar_0'))),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('type.simpleSexp.sexp',V_27s_27))))))),s('type.option.option'('type.ast.pat'),'const.option.OPTION_BIND_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.pat')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.pat'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.pat'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.pat')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.lit','type.ast.pat'),'const.ast.Plit_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lit')),'const.fromSexp.sexplit_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'fun'('type.option.option'('type.list.list'('type.ast.pat')),'type.option.option'('type.ast.pat'))),'const.option.OPTION_MAP2_1'(s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'type.ast.pat')),'const.ast.Pcon_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))))),'const.fromSexp.sexpopt_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'const.fromSexp.sexpid_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.pat'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.pat'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.pat'),'type.option.option'('type.ast.pat')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.pat','type.ast.pat'),'const.ast.Pref_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0')))))))))))))))))).
fof('ARITY_0_1_const.fromSexp.sexpop', axiom, ![VV0]: s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'const.fromSexp.sexpop_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp',VV0)))).
fof('ARITY_2_3_const.ast.Shift', axiom, ![VV0, VV1, VV2]: s('type.ast.op','happ'(s('fun'('type.num.num','type.ast.op'),'const.ast.Shift_2'(s('type.ast.word_size',VV0),s('type.ast.shift',VV1))),s('type.num.num',VV2))) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',VV0),s('type.ast.shift',VV1),s('type.num.num',VV2)))).
fof('thm.fromSexp.sexpop_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'const.fromSexp.sexpop_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op'))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'_dst_x1x0x0x0x0_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'fun'('fun'('type.num.num','type.option.option'('type.ast.op')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'type.option.option'('type.ast.op')))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op'))),'_dst_x00x10x00x01x00x00_6'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'fun'('fun'('type.num.num','type.option.option'('type.ast.op')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'type.option.option'('type.ast.op')))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op'))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'_dst_x0_1'(s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))))),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op'))),'_dst_x00x10x00x00x01x00_6'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'fun'('fun'('type.num.num','type.option.option'('type.ast.op')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'type.option.option'('type.ast.op')))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op'))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'_dst_x0_1'(s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0_1'(s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.option.option'('type.ast.op'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.option.option'('type.ast.op'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.op'),'const.ast.FFI_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.option.option'('type.ast.op'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.op'),'const.ast.Shift_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsl_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.option.option'('type.ast.op'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.op'),'const.ast.Shift_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsr_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.option.option'('type.ast.op'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.op'),'const.ast.Shift_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Asr_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.option.option'('type.ast.op'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.op'),'const.ast.Shift_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsl_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.option.option'('type.ast.op'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.op'),'const.ast.Shift_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsr_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.option.option'('type.ast.op'))),'_dst_x00x10x01x00_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('fun'('type.num.num','type.ast.op'),'const.ast.Shift_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Asr_0'))))),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))))))))))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0_1'(s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0_1'(s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0_1'(s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Plus_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Minus_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Times_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Divide_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Modulo_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Lt_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Gt_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Leq_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Geq_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Andw_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Orw_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Xor_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Add_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Sub_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Andw_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Orw_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Xor_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Add_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Sub_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Equality_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opassign_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opref_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Opderef_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Aw8alloc_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Aw8sub_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Aw8length_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Aw8update_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Ord_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Chr_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W8_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W8_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W64_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W64_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Lt_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Gt_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Leq_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Geq_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Explode_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Implode_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Strlen_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.VfromList_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Vsub_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Vlength_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Aalloc_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Asub_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Alength_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0x1x0x0_4'(s('fun'('bool','fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.ast.op','type.option.option'('type.ast.op')),'const.option.SOME_0'),s('type.ast.op','const.ast.Aupdate_0'))),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),s('fun'('type.num.num','type.option.option'('type.ast.op')),'_dst_x0_1'(s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.op')),'_dst_x0_1'(s('type.option.option'('type.ast.op'),'happ'(s('fun'('type.option.option'('type.ast.op'),'type.option.option'('type.ast.op')),'const.combin.I_0'),s('type.option.option'('type.ast.op'),'const.option.NONE_0')))))))))))).
fof('thm.fromSexp.fromSexp_72_prove_ltb', axiom, ![V_27a_27]: (((?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_7c49_7c_7c48_7c_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_7c49_7c_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | ((?[V_27v_7c49_7c2_27, V_27v2_7c48_7c_27, V_27v2_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v2_7c48_7c_27),s('type.simpleSexp.sexp',V_27v2_7c49_7c_27))))) | (?[V_27v_7c49_7c2_27, V_27v22_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v22_27))))) | (?[V_27s_27, V_27n_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))))) | ?[V_27v_7c49_7c2_27, V_27v24_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v24_27)))))))) | (?[V_27v_7c49_7c3_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v_7c49_7c3_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | ?[V_27v_7c49_7c4_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c4_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27)))))) | (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))) | ?[V_27v4_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27)))))) => (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27s_27, V_27n_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_7c49_7c_7c48_7c_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_7c49_7c_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v2_7c48_7c_27, V_27v2_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v2_7c48_7c_27),s('type.simpleSexp.sexp',V_27v2_7c49_7c_27))))) | (?[V_27v_7c49_7c2_27, V_27v22_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v22_27))))) | (?[V_27v_7c49_7c2_27, V_27v24_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v24_27))))) | (?[V_27v_7c49_7c3_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v_7c49_7c3_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27v_7c49_7c4_27, V_27v_7c49_7c_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c4_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))) | (?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))) | ?[V_27v4_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27)))))))))))))).
fof('thm.fromSexp.sexpop_ind', axiom, ![V_27P_27]: ((![V_27s_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) & (![V_27s_27, V_27n_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_7c49_7c_7c48_7c_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_7c49_7c_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27)))))) & (![V_27v_7c49_7c2_27, V_27v2_7c48_7c_27, V_27v2_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v2_7c48_7c_27),s('type.simpleSexp.sexp',V_27v2_7c49_7c_27)))))))) & (![V_27v_7c49_7c2_27, V_27v22_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v22_27)))))))) & (![V_27v_7c49_7c2_27, V_27v24_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v24_27)))))))) & (![V_27v_7c49_7c3_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v_7c49_7c3_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27)))))) & (![V_27v_7c49_7c4_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c4_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27)))))) & (![V_27v3_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27)))))) & ![V_27v4_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.fromSexp.sexpop_def|split|0', axiom, ![V_27s_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))) & ?[Vv_27_27_27]: ((p(s('bool',Vv_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))) & ?[Vv_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))) & ?[Vv_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))) & s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Plus_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Minus_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Times_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Divide_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Modulo_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Lt_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Gt_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Leq_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Geq_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Andw_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Orw_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Xor_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Add_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Sub_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Andw_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Orw_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Xor_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Add_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Sub_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Equality_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opapp_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opassign_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opref_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Opderef_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Aw8alloc_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Aw8sub_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Aw8length_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Aw8update_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Ord_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Chr_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W8_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W8_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W64_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W64_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Lt_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Gt_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Leq_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Geq_0'))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Explode_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Implode_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Strlen_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.VfromList_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Vsub_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Vlength_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Aalloc_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Asub_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Alength_0'))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Aupdate_0'))),s('type.option.option'('type.ast.op'),'const.option.NONE_0')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.fromSexp.sexpop_def|split|1', axiom, ![V_27s_27, V_27n_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))) & ?[Vv_27_27_27]: ((p(s('bool',Vv_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) & ?[Vv_27_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))) & s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))))))) = s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27n_27))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv_27),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27))))),s('type.option.option'('type.ast.op'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27))))),s('type.option.option'('type.ast.op'),'const.option.NONE_0'))))))))))))))))))))))).
fof('thm.fromSexp.sexpop_def|split|2', axiom, ![V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_7c49_7c_7c48_7c_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_7c49_7c_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))))) = s('type.option.option'('type.ast.op'),'const.option.NONE_0')).
fof('thm.fromSexp.sexpop_def|split|3', axiom, ![V_27v2_7c49_7c_27, V_27v2_7c48_7c_27, V_27v_7c49_7c2_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v2_7c48_7c_27),s('type.simpleSexp.sexp',V_27v2_7c49_7c_27))))))) = s('type.option.option'('type.ast.op'),'const.option.NONE_0')).
fof('thm.fromSexp.sexpop_def|split|4', axiom, ![V_27v22_27, V_27v_7c49_7c2_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v22_27))))))) = s('type.option.option'('type.ast.op'),'const.option.NONE_0')).
fof('thm.fromSexp.sexpop_def|split|5', axiom, ![V_27v24_27, V_27v_7c49_7c2_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c2_27))),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v24_27))))))) = s('type.option.option'('type.ast.op'),'const.option.NONE_0')).
fof('thm.fromSexp.sexpop_def|split|6', axiom, ![V_27v_7c49_7c3_27, V_27v_7c49_7c_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v_7c49_7c3_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))))) = s('type.option.option'('type.ast.op'),'const.option.NONE_0')).
fof('thm.fromSexp.sexpop_def|split|7', axiom, ![V_27v_7c49_7c4_27, V_27v_7c49_7c_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c4_27))),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))))) = s('type.option.option'('type.ast.op'),'const.option.NONE_0')).
fof('thm.fromSexp.sexpop_def|split|8', axiom, ![V_27v3_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))) = s('type.option.option'('type.ast.op'),'const.option.NONE_0')).
fof('thm.fromSexp.sexpop_def|split|9', axiom, ![V_27v4_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))) = s('type.option.option'('type.ast.op'),'const.option.NONE_0')).
fof('ARITY_0_1_const.fromSexp.sexplop', axiom, ![VV0]: s('type.option.option'('type.ast.lop'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop')),'const.fromSexp.sexplop_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.lop'),'const.fromSexp.sexplop_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.sexplop_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop')),'const.fromSexp.sexplop_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop')),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop'))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop')),'_dst_x1x0x0x0x0_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lop')),'fun'('fun'('type.num.num','type.option.option'('type.ast.lop')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lop')),'type.option.option'('type.ast.lop')))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop'))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop')),'_dst_x0_1'(s('type.option.option'('type.ast.lop'),'happ'(s('fun'('type.option.option'('type.ast.lop'),'type.option.option'('type.ast.lop')),'const.combin.I_0'),s('type.option.option'('type.ast.lop'),'const.option.NONE_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lop')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.lop'),'type.option.option'('type.ast.lop')),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lop')),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.option.option'('type.ast.lop'),'fun'('type.option.option'('type.ast.lop'),'type.option.option'('type.ast.lop')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.option.option'('type.ast.lop'),'const.option.SOME_1'(s('type.ast.lop','const.ast.And_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lop')),'_dst_x0x1x0x0_4'(s('fun'('bool','fun'('type.option.option'('type.ast.lop'),'fun'('type.option.option'('type.ast.lop'),'type.option.option'('type.ast.lop')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.option.option'('type.ast.lop'),'const.option.SOME_1'(s('type.ast.lop','const.ast.Or_0'))),s('type.option.option'('type.ast.lop'),'const.option.NONE_0'))))))),s('fun'('type.num.num','type.option.option'('type.ast.lop')),'_dst_x0_1'(s('type.option.option'('type.ast.lop'),'happ'(s('fun'('type.option.option'('type.ast.lop'),'type.option.option'('type.ast.lop')),'const.combin.I_0'),s('type.option.option'('type.ast.lop'),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.lop')),'_dst_x0_1'(s('type.option.option'('type.ast.lop'),'happ'(s('fun'('type.option.option'('type.ast.lop'),'type.option.option'('type.ast.lop')),'const.combin.I_0'),s('type.option.option'('type.ast.lop'),'const.option.NONE_0')))))))))))).
fof('thm.fromSexp.sexplop_def|split|0', axiom, ![V_27s_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))) & s('type.option.option'('type.ast.lop'),'const.fromSexp.sexplop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.ast.lop'),'const.bool.COND_3'(s('bool',Vv_27),s('type.option.option'('type.ast.lop'),'const.option.SOME_1'(s('type.ast.lop','const.ast.And_0'))),s('type.option.option'('type.ast.lop'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.ast.lop'),'const.option.SOME_1'(s('type.ast.lop','const.ast.Or_0'))),s('type.option.option'('type.ast.lop'),'const.option.NONE_0')))))))).
fof('thm.fromSexp.sexplop_def|split|1', axiom, ![V_27v_7c49_7c_27, V_27v_27]: s('type.option.option'('type.ast.lop'),'const.fromSexp.sexplop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27v_27),s('type.simpleSexp.sexp',V_27v_7c49_7c_27))))) = s('type.option.option'('type.ast.lop'),'const.option.NONE_0')).
fof('thm.fromSexp.sexplop_def|split|2', axiom, ![V_27v3_27]: s('type.option.option'('type.ast.lop'),'const.fromSexp.sexplop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))) = s('type.option.option'('type.ast.lop'),'const.option.NONE_0')).
fof('thm.fromSexp.sexplop_def|split|3', axiom, ![V_27v4_27]: s('type.option.option'('type.ast.lop'),'const.fromSexp.sexplop_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))) = s('type.option.option'('type.ast.lop'),'const.option.NONE_0')).
fof('ARITY_0_2_const.option.OPTION_APPLY', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('type.option.option'(V_27A_27),'happ'(s('fun'('type.option.option'(V_27B_27),'type.option.option'(V_27A_27)),'happ'(s('fun'('type.option.option'('fun'(V_27B_27,V_27A_27)),'fun'('type.option.option'(V_27B_27),'type.option.option'(V_27A_27))),'const.option.OPTION_APPLY_0'),s('type.option.option'('fun'(V_27B_27,V_27A_27)),VV0))),s('type.option.option'(V_27B_27),VV1))) = s('type.option.option'(V_27A_27),'const.option.OPTION_APPLY_2'(s('type.option.option'('fun'(V_27B_27,V_27A_27)),VV0),s('type.option.option'(V_27B_27),VV1)))).
fof('ARITY_1_2_const.fromSexp.sexppair', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'(V_27A_27,V_27B_27))),'happ'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)))),'const.fromSexp.sexppair_1'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0))),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),VV1))) = s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'(V_27A_27,V_27B_27))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),VV0),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),VV1)))).
fof('thm.fromSexp.sexpexp_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))))))),'_dst_x0000000x0111111x1100001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')))))),'_dst_x000000x111000x011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x11000x01111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x1100x0111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.simpleSexp.sxMEM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'?_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x100x011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'?_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x100x011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')))))),'_dst_x000000x011111x110001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x11100x01111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x1100x0111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.simpleSexp.sxMEM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'?_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x100x011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')))))),'_dst_x000000x011111x110001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x11100x01111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x1100x0111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.simpleSexp.sxMEM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'?_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x100x011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x01111x11001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x1110x0111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.simpleSexp.sxMEM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))))),'_dst_x00000x01111x11001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x1110x0111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','bool')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.simpleSexp.sxMEM_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.option.option'('type.one.one'),'happ'(s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'),s('type.one.one','const.one.one_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'bool'))),'_dstsel_0_x001x010_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp')),'const.combin.I_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp'))),'_dst_x00x01x10_3'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.exp')),'type.option.option'('type.ast.exp'))),'const.option.OPTION_BIND_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.exp'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.exp'))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x011_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x011_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x111x111_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.exp','type.ast.exp'),'const.ast.Raise_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))))),'const.fromSexp.sexplist_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'const.fromSexp.sexppair_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp'))),'_i_0_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.exp')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.lit','type.ast.exp'),'const.ast.Lit_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lit')),'const.fromSexp.sexplit_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x01x11_3'(s('fun'('type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'fun'('type.option.option'('type.list.list'('type.ast.exp')),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.Con_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))))),'const.fromSexp.sexpopt_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'const.fromSexp.sexpid_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.exp')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.exp')))),'const.fromSexp.sexplist_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp'))),'_i_0_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'type.option.option'('type.ast.exp')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'const.ast.Var_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'const.fromSexp.sexpid_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x01x11_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Fun_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x01x11_3'(s('fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.list.list'('type.ast.exp')),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'const.fromSexp.sexpop_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.exp')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.exp')))),'const.fromSexp.sexplist_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp'))),'_i_0_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('fun'('type.ast.exp','type.ast.exp')),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_APPLY_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'_dst_x00x01x11_3'(s('fun'('type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.lop'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_MAP_1'(s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lop')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop')),'const.fromSexp.sexplop_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('fun'('type.ast.exp','type.ast.exp')),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_APPLY_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_APPLY_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.ast.exp'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_MAP_1'(s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))))),'const.fromSexp.sexplist_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'const.fromSexp.sexppair_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp'))),'_i_0_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('fun'('type.ast.exp','type.ast.exp')),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_APPLY_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'_dst_x00x01x11_3'(s('fun'('type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_MAP_1'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'('type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.option.option'('type.list.list'('type.string.char')))),'const.fromSexp.sexpopt_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')))),'_dst_x000x011x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.fromSexp.sexplist_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.fromSexp.sexppair_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.fromSexp.sexppair_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp'))),'_i_0_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))).
fof('thm.fromSexp.sexpexp_ind', axiom, ![V_27P_27]: (![V_27s_27]: ((![V_27nm_27, V_27args_27, V_27e_27, V_27s_7c39_7c_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))) & (p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27e_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))) & (?[V_27s_7c39_7c_7c39_7c_27]: s('type.simpleSexp.sexp',V_27e_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c39_7c_7c39_7c_27),s('type.simpleSexp.sexp',V_27s_7c39_7c_27))) & ?[V_27s_7c39_7c_7c39_7c_27]: s('type.simpleSexp.sexp',V_27s_7c39_7c_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c39_7c_7c39_7c_27),s('type.simpleSexp.sexp',V_27a_27))))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27a_27))))) & (![V_27nm_27, V_27args_27, V_27e_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))) & (p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27e_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))) & ?[V_27s_7c39_7c_27]: s('type.simpleSexp.sexp',V_27e_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c39_7c_27),s('type.simpleSexp.sexp',V_27a_27)))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27a_27))))) & (![V_27nm_27, V_27args_27, V_27e_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))) & (p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27e_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))) & ?[V_27s_7c39_7c_27]: s('type.simpleSexp.sexp',V_27e_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c39_7c_27),s('type.simpleSexp.sexp',V_27a_27)))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27a_27))))) & (![V_27nm_27, V_27args_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))) & p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27a_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27a_27))))) & (![V_27nm_27, V_27args_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))) & p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27a_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27a_27))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & (![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))) & ![V_27nm_27, V_27args_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))) & ?[Vv]: ((p(s('bool',Vv)) <=> (s('type.list.list'('type.string.char'),V_27nm_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s('bool',Vv))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))))))))))))))))))))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s_27))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.fromSexp.sexpexp_def', axiom, ![V_27s_27]: s('type.option.option'('type.ast.exp'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.exp'),'const.option.OPTION_BIND_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.exp')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.exp','type.ast.exp'),'const.ast.Raise_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.lit'),'type.option.option'('type.ast.exp')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.lit','type.ast.exp'),'const.ast.Lit_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lit')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lit')),'const.fromSexp.sexplit_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'fun'('type.option.option'('type.list.list'('type.ast.exp')),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.Con_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))))),'const.fromSexp.sexpopt_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'const.fromSexp.sexpid_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.exp'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.exp'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'type.option.option'('type.ast.exp')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'const.ast.Var_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.id'('type.list.list'('type.string.char')))),'const.fromSexp.sexpid_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Fun_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.op'),'fun'('type.option.option'('type.list.list'('type.ast.exp')),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.op')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.op')),'const.fromSexp.sexpop_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.exp'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.exp'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.ast.exp','type.ast.exp')),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp'))),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.lop'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_MAP_1'(s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.lop')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.lop')),'const.fromSexp.sexplop_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.ast.exp','type.ast.exp')),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp'))),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.exp'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_MAP_1'(s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.exp'),'fun'('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.ast.exp','type.ast.exp')),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp'))),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'const.option.OPTION_MAP_1'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'('type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.option.option'('type.list.list'('type.string.char')))),'const.fromSexp.sexpopt_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.exp'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))).
fof('thm.fromSexp.sexptype_def_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))))),'const.fromSexp.sexptype_def_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.list.list'('type.string.char')))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.t'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0')))))))))))))).
fof('thm.fromSexp.sexpdec_def', axiom, ![V_27s_27]: s('type.option.option'('type.ast.dec'),'const.fromSexp.sexpdec_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.dec'),'const.option.OPTION_BIND_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.dec')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.dec'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.dec'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.dec'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x11_3'(s('fun'('type.option.option'('type.ast.dec'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.ast.pat'),'fun'('type.option.option'('type.ast.exp'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_MAP2_1'(s('fun'('type.ast.pat','fun'('type.ast.exp','type.ast.dec')),'const.ast.Dlet_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.pat')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.exp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.option.option'('type.ast.dec')),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.ast.dec'),'const.ast.Dletrec_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.fromSexp.sexppair_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'type.option.option'('type.ast.dec')),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.ast.dec'),'const.ast.Dtype_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))))),'const.fromSexp.sexptype_def_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.ast.t','type.ast.dec')),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.t','type.ast.dec'))),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.dec'))),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('fun'('type.ast.t','type.ast.dec')))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.dec')))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.list.list'('type.string.char'))),'type.option.option'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.dec')))),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.dec'))),'const.ast.Dtabbrev_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.list.list'('type.string.char')))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec'))),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.dec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.ast.t')),'type.option.option'('type.ast.dec'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.ast.t'),'type.ast.dec')),'const.ast.Dexn_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.t'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.t'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))).
fof('thm.fromSexp.sexpspec_def', axiom, ![V_27s_27]: s('type.option.option'('type.ast.spec'),'const.fromSexp.sexpspec_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.spec'),'const.option.OPTION_BIND_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.spec')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.spec'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.spec'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.spec')),'const.ast.Sval_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.spec'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'type.option.option'('type.ast.spec')),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.ast.spec'),'const.ast.Stype_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))))),'const.fromSexp.sexptype_def_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.spec'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.ast.t','type.ast.spec')),'fun'('type.option.option'('type.ast.t'),'type.option.option'('type.ast.spec'))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.ast.t','type.ast.spec'))),'_dst_x0x1x1_3'(s('fun'('type.option.option'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.spec'))),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('fun'('type.ast.t','type.ast.spec')))),'const.option.OPTION_APPLY_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.spec')))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.list.list'('type.string.char'))),'type.option.option'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.spec')))),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.ast.spec'))),'const.ast.Stabbrev_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.list.list'('type.string.char')))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.t')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.spec'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.list.list'('type.string.char'))),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.ast.spec'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'type.ast.spec')),'const.ast.Stype_opq_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.list.list'('type.string.char')))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec'))),'_dst_x00x10x01x00_4'(s('fun'('bool','fun'('type.option.option'('type.ast.spec'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.spec'),'type.option.option'('type.ast.spec'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.spec')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.ast.t')),'type.option.option'('type.ast.spec'))),'const.option.OPTION_MAP2_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.ast.t'),'type.ast.spec')),'const.ast.Sexn_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.t'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.t'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.option.option'('type.ast.spec'),'const.option.NONE_0')))))))))))))))).
fof('ARITY_0_1_const.fromSexp.sexpdec', axiom, ![VV0]: s('type.option.option'('type.ast.dec'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.dec')),'const.fromSexp.sexpdec_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.dec'),'const.fromSexp.sexpdec_1'(s('type.simpleSexp.sexp',VV0)))).
fof('ARITY_0_1_const.fromSexp.sexpspec', axiom, ![VV0]: s('type.option.option'('type.ast.spec'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.spec')),'const.fromSexp.sexpspec_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.spec'),'const.fromSexp.sexpspec_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.sexptop_def', axiom, ![V_27s_27]: s('type.option.option'('type.ast.top'),'const.fromSexp.sexptop_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.top'),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.top')),'type.option.option'('type.ast.top')),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.top')),'type.option.option'('type.ast.top'))),'const.option.OPTION_BIND_0'),s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',V_27s_27))))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.ast.top')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.top'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.option.option'('type.ast.top'),'fun'('type.option.option'('type.ast.top'),'type.option.option'('type.ast.top')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.top')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.top'),'type.option.option'('type.ast.top'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.top')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.top')),'type.option.option'('type.ast.top'))),'const.option.OPTION_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'type.option.option'('type.ast.top'))),'_dst_x00x10x11_3'(s('fun'('type.option.option'('type.option.option'('type.list.list'('type.ast.spec'))),'fun'('fun'('type.option.option'('type.list.list'('type.ast.spec')),'type.option.option'('type.ast.top')),'type.option.option'('type.ast.top'))),'const.option.OPTION_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.option.option'('type.list.list'('type.ast.spec')))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.option.option'('type.list.list'('type.ast.spec')))),'const.fromSexp.sexpopt_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.spec'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.spec')),'const.fromSexp.sexpspec_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'fun'('type.option.option'('type.list.list'('type.ast.spec')),'type.option.option'('type.ast.top')))),'_dst_x000x100x011_3'(s('fun'('type.option.option'('type.list.list'('type.ast.dec')),'fun'('fun'('type.list.list'('type.ast.dec'),'type.option.option'('type.ast.top')),'type.option.option'('type.ast.top'))),'const.option.OPTION_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.list.list'('type.ast.dec'))),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.ast.dec'))),'const.fromSexp.sexplist_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.dec')),'const.fromSexp.sexpdec_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.EL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.option.option'('type.list.list'('type.ast.spec')),'fun'('type.list.list'('type.ast.dec'),'type.option.option'('type.ast.top')))),'_dst_x000x111_2'(s('fun'('type.ast.top','type.option.option'('type.ast.top')),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.option.option'('type.list.list'('type.ast.spec')),'fun'('type.list.list'('type.ast.dec'),'type.ast.top'))),'const.ast.Tmod_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.top'))),'_dst_x00x10x01x00_4'(s('fun'('bool','fun'('type.option.option'('type.ast.top'),'fun'('type.option.option'('type.ast.top'),'type.option.option'('type.ast.top')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.top')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.ast.top'),'type.option.option'('type.ast.top'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.one.one')),'_dst_x0x1_2'(s('fun'('bool','type.option.option'('type.one.one')),'const.option.OPTION_GUARD_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.top')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.ast.dec'),'type.option.option'('type.ast.top')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.dec','type.ast.top'),'const.ast.Tdec_0'))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.ast.dec')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.dec')),'const.fromSexp.sexpdec_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.HD_0'))))))),s('type.option.option'('type.ast.top'),'const.option.NONE_0')))))))))).
fof('ARITY_0_1_const.fromSexp.listsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('type.list.list'('type.simpleSexp.sexp'),VV0))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),VV0)))).
fof('thm.fromSexp.listsexp_def', axiom, s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0') = s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.list.FOLDR_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.listsexp_|49||49|', axiom, ![V_27l_7c49_7c_27, V_27l2_27]: (s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l2_27))) <=> s('type.list.list'('type.simpleSexp.sexp'),V_27l_7c49_7c_27) = s('type.list.list'('type.simpleSexp.sexp'),V_27l2_27))).
fof('thm.fromSexp.optsexp_def|split|0', axiom, s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.optsexp_def|split|1', axiom, ![V_27x_27]: s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.SOME_1'(s('type.simpleSexp.sexp',V_27x_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp',V_27x_27),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.optsexp_|49||49|', axiom, ![V_27o2_27, V_27o_7c49_7c_27]: (s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),V_27o_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),V_27o2_27))) <=> s('type.option.option'('type.simpleSexp.sexp'),V_27o_7c49_7c_27) = s('type.option.option'('type.simpleSexp.sexp'),V_27o2_27))).
fof('thm.fromSexp.idsexp_def|split|0', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27n_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27n_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.idsexp_def|split|1', axiom, ![V_27ns_27, V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),V_27ns_27),s('type.list.list'('type.string.char'),V_27n_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27ns_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27n_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.idsexp_|49||49|', axiom, ![V_27i_7c49_7c_27, V_27i2_27]: (s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27i_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27i2_27))) <=> s('type.ast.id'('type.list.list'('type.string.char')),V_27i_7c49_7c_27) = s('type.ast.id'('type.list.list'('type.string.char')),V_27i2_27))).
fof('thm.fromSexp.tctorsexp_def|split|0', axiom, ![V_27id_27]: s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.tctorsexp_def|split|1', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_int_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|2', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_char_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|3', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_string_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|4', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_ref_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|5', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_word8_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|6', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_word64_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|7', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_word8array_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|8', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_fn_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|9', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_tup_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|10', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_exn_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|11', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_vector_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.tctorsexp_def|split|12', axiom, s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor','const.ast.TC_array_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.tctorsexp_|49||49|', axiom, ![V_27t_7c49_7c_27, V_27t2_27]: (s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor',V_27t_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor',V_27t2_27))) <=> s('type.ast.tctor',V_27t_7c49_7c_27) = s('type.ast.tctor',V_27t2_27))).
fof('ARITY_0_1_const.fromSexp.tctorsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.tctor','type.simpleSexp.sexp'),'const.fromSexp.tctorsexp_0'),s('type.ast.tctor',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor',VV0)))).
fof('ARITY_0_1_const.fromSexp.typesexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.t','type.simpleSexp.sexp'),'const.fromSexp.typesexp_0'),s('type.ast.t',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',VV0)))).
fof('ARITY_0_1_const.fromSexp.SEXSTR', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('thm.fromSexp.typesexp_primitive_def', axiom, s('fun'('type.ast.t','type.simpleSexp.sexp'),'const.fromSexp.typesexp_0') = s('fun'('type.ast.t','type.simpleSexp.sexp'),'const.relation.WFREC_2'(s('fun'('type.ast.t','fun'('type.ast.t','bool')),'const.min.@_1'(s('fun'('fun'('type.ast.t','fun'('type.ast.t','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.t','fun'('type.ast.t','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.ast.t','fun'('type.ast.t','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.tctor','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.t','fun'('type.ast.t','bool')),'fun'('type.ast.tctor','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.t','fun'('type.ast.t','bool')),'fun'('type.ast.tctor','fun'('type.list.list'('type.ast.t'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.t','fun'('type.ast.t','bool')),'fun'('type.ast.tctor','fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool')),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('fun'('type.ast.t','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.ast.t','fun'('type.ast.t','bool')),'fun'('type.ast.tctor','fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.ast.t','fun'('type.ast.t','bool')),'fun'('type.ast.t','fun'('type.ast.t','bool'))),'_i_0_0'),s('fun'('type.ast.tctor','fun'('type.list.list'('type.ast.t'),'type.ast.t')),'_dst_x01x10_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.ast.tctor','type.ast.tctor'),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.ast.t','type.simpleSexp.sexp')),'_dst_x01x00x00x10_4'(s('fun'('type.ast.t','fun'('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'fun'('fun'('type.num.num','type.simpleSexp.sexp'),'fun'('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.simpleSexp.sexp')),'type.simpleSexp.sexp')))),'const.ast.t_CASE_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.num.num','type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('fun'('type.num.num','type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x110x001_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.t'),'type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1_2'(s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.MAP_0'),s('fun'('fun'('type.ast.t','type.simpleSexp.sexp'),'fun'('type.ast.t','type.simpleSexp.sexp')),'_i_0_0'))))),s('fun'('type.ast.tctor','type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.ast.tctor','type.simpleSexp.sexp'),'const.fromSexp.tctorsexp_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.fromSexp_96_prove_ltb', axiom, ![V_27a_27]: ((?[V_27s_27]: s('type.ast.t',V_27a_27) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27n_27]: s('type.ast.t',V_27a_27) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27n_27))) | ?[V_27ts_27, V_27ct_27]: s('type.ast.t',V_27a_27) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.tctor',V_27ct_27))))) => (?[V_27s_27]: s('type.ast.t',V_27a_27) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27n_27]: s('type.ast.t',V_27a_27) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27n_27))) | ?[V_27ts_27, V_27ct_27]: s('type.ast.t',V_27a_27) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.tctor',V_27ct_27))))))).
fof('thm.fromSexp.typesexp_ind', axiom, ![V_27P_27]: ((![V_27s_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_27),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_27),s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27n_27)))))) & ![V_27ts_27, V_27ct_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.ast.t',V_27a_27),s('fun'('type.ast.t','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.t'),V_27ts_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_27),s('type.ast.t',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.tctor',V_27ct_27))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_27),s('type.ast.t',V_27v_27)))))).
fof('thm.fromSexp.typesexp_def|split|0', axiom, ![V_27s_27]: s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.typesexp_def|split|1', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27n_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.typesexp_def|split|2', axiom, ![V_27ts_27, V_27ct_27]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.t','type.simpleSexp.sexp'),'const.fromSexp.typesexp_0'),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.tctor',V_27ct_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.ast.t','type.simpleSexp.sexp'),'const.fromSexp.typesexp_0'),s('type.list.list'('type.ast.t'),V_27ts_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor',V_27ct_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.typesexp_|49||49|', axiom, ![V_27t_7c49_7c_27, V_27t2_27]: (s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',V_27t_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',V_27t2_27))) <=> s('type.ast.t',V_27t_7c49_7c_27) = s('type.ast.t',V_27t2_27))).
fof('thm.fromSexp.litsexp_def|split|0', axiom, ![V_27i_27]: s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_27))))) = s('type.simpleSexp.sexp','const.bool.COND_3'(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',V_27i_27))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',V_27i_27)))))))).
fof('thm.fromSexp.litsexp_def|split|1', axiom, ![V_27c_27]: s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.litsexp_def|split|2', axiom, ![V_27s_27]: s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.fromSexp.litsexp_def|split|3', axiom, ![V_27w_27]: s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.litsexp_def|split|4', axiom, ![V_27w_27]: s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.litsexp_|49||49|', axiom, ![V_27l_7c49_7c_27, V_27l2_27]: (s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit',V_27l_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit',V_27l2_27))) <=> s('type.ast.lit',V_27l_7c49_7c_27) = s('type.ast.lit',V_27l2_27))).
fof('ARITY_0_1_const.fromSexp.idsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'const.fromSexp.idsexp_0'),s('type.ast.id'('type.list.list'('type.string.char')),VV0))) = s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),VV0)))).
fof('ARITY_0_1_const.fromSexp.optsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.optsexp_0'),s('type.option.option'('type.simpleSexp.sexp'),VV0))) = s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),VV0)))).
fof('ARITY_0_1_const.fromSexp.litsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.lit','type.simpleSexp.sexp'),'const.fromSexp.litsexp_0'),s('type.ast.lit',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit',VV0)))).
fof('ARITY_0_1_const.fromSexp.patsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.fromSexp.patsexp_0'),s('type.ast.pat',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat',VV0)))).
fof('thm.fromSexp.patsexp_primitive_def', axiom, s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.fromSexp.patsexp_0') = s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.relation.WFREC_2'(s('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'const.min.@_1'(s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.pat'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.pat','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'fun'('type.ast.pat','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.ast.pat'),'fun'('type.ast.pat','bool')),'_dst_x01x10_2'(s('fun'('type.ast.pat','fun'('fun'('type.ast.pat','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.ast.pat'),'fun'('type.ast.pat','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'fun'('type.ast.pat','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'fun'('type.ast.pat','fun'('type.ast.pat','bool'))),'_i_0_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'type.ast.pat')),'const.ast.Pcon_0'))))))))))),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.pat','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'fun'('type.ast.pat','bool')),'_dst_x11x01_2'(s('fun'('fun'('type.ast.pat','fun'('type.ast.pat','bool')),'fun'('type.ast.pat','fun'('type.ast.pat','bool'))),'_i_0_0'),s('fun'('type.ast.pat','type.ast.pat'),'const.ast.Pref_0'))))))))))),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.ast.pat','type.simpleSexp.sexp')),'_dst_x01x00x00x10x10_5'(s('fun'('type.ast.pat','fun'('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'fun'('fun'('type.ast.lit','type.simpleSexp.sexp'),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'type.simpleSexp.sexp')),'fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'type.simpleSexp.sexp'))))),'const.ast.pat_CASE_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'))),s('fun'('type.ast.lit','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.ast.lit','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.ast.lit','type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.ast.lit','type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.ast.lit','type.simpleSexp.sexp'),'const.fromSexp.litsexp_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.pat'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x010x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.optsexp_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'type.option.option'('type.simpleSexp.sexp')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'const.fromSexp.idsexp_0'))))),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.pat'),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.pat'),'type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.pat'),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1_2'(s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.pat'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.MAP_0'),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.ast.pat','type.simpleSexp.sexp')),'_i_0_0'))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.ast.pat','type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.ast.pat','type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.ast.pat','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.ast.pat','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.pat','type.simpleSexp.sexp'),'fun'('type.ast.pat','type.simpleSexp.sexp')),'_i_0_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))))).
fof('thm.fromSexp.fromSexp_|49||48|3_prove_ltb', axiom, ![V_27a_27]: ((?[V_27s_27]: s('type.ast.pat',V_27a_27) = s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27l_27]: s('type.ast.pat',V_27a_27) = s('type.ast.pat','const.ast.Plit_1'(s('type.ast.lit',V_27l_27))) | (?[V_27cn_27, V_27ps_27]: s('type.ast.pat',V_27a_27) = s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.ast.pat'),V_27ps_27))) | ?[V_27p_27]: s('type.ast.pat',V_27a_27) = s('type.ast.pat','const.ast.Pref_1'(s('type.ast.pat',V_27p_27)))))) => (?[V_27s_27]: s('type.ast.pat',V_27a_27) = s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27l_27]: s('type.ast.pat',V_27a_27) = s('type.ast.pat','const.ast.Plit_1'(s('type.ast.lit',V_27l_27))) | (?[V_27cn_27, V_27ps_27]: s('type.ast.pat',V_27a_27) = s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.ast.pat'),V_27ps_27))) | ?[V_27p_27]: s('type.ast.pat',V_27a_27) = s('type.ast.pat','const.ast.Pref_1'(s('type.ast.pat',V_27p_27)))))))).
fof('thm.fromSexp.patsexp_ind', axiom, ![V_27P_27]: ((![V_27s_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_27),s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) & (![V_27l_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_27),s('type.ast.pat','const.ast.Plit_1'(s('type.ast.lit',V_27l_27)))))) & (![V_27cn_27, V_27ps_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.ast.pat',V_27a_27),s('fun'('type.ast.pat','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.pat'),V_27ps_27)))))) => p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_27),s('type.ast.pat',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_27),s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.ast.pat'),V_27ps_27))))))) & ![V_27p_27]: (p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_27),s('type.ast.pat',V_27p_27)))) => p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_27),s('type.ast.pat','const.ast.Pref_1'(s('type.ast.pat',V_27p_27)))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_27),s('type.ast.pat',V_27v_27)))))).
fof('thm.fromSexp.patsexp_def|split|0', axiom, ![V_27s_27]: s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.fromSexp.patsexp_def|split|1', axiom, ![V_27l_27]: s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat','const.ast.Plit_1'(s('type.ast.lit',V_27l_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit',V_27l_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.patsexp_def|split|2', axiom, ![V_27ps_27, V_27cn_27]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.fromSexp.patsexp_0'),s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.ast.pat'),V_27ps_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.OPTION_MAP_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'const.fromSexp.idsexp_0'),s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.fromSexp.patsexp_0'),s('type.list.list'('type.ast.pat'),V_27ps_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.patsexp_def|split|3', axiom, ![V_27p_27]: s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat','const.ast.Pref_1'(s('type.ast.pat',V_27p_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat',V_27p_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.patsexp_|49||49|', axiom, ![V_27p_7c49_7c_27, V_27p2_27]: (s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat',V_27p_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat',V_27p2_27))) <=> s('type.ast.pat',V_27p_7c49_7c_27) = s('type.ast.pat',V_27p2_27))).
fof('thm.fromSexp.lopsexp_def|split|0', axiom, s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop','const.ast.And_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.lopsexp_def|split|1', axiom, s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop','const.ast.Or_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.lopsexp_|49||49|', axiom, ![V_27l_7c49_7c_27, V_27l2_27]: (s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop',V_27l_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop',V_27l2_27))) <=> s('type.ast.lop',V_27l_7c49_7c_27) = s('type.ast.lop',V_27l2_27))).
fof('ARITY_0_4_const.ast.shift_CASE', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s(V_27A_27,'happ'(s('fun'(V_27A_27,V_27A_27),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,V_27A_27))),'happ'(s('fun'('type.ast.shift','fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)))),'const.ast.shift_CASE_0'),s('type.ast.shift',VV0))),s(V_27A_27,VV1))),s(V_27A_27,VV2))),s(V_27A_27,VV3))) = s(V_27A_27,'const.ast.shift_CASE_4'(s('type.ast.shift',VV0),s(V_27A_27,VV1),s(V_27A_27,VV2),s(V_27A_27,VV3)))).
fof('ARITY_0_1_const.fromSexp.opsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.op','type.simpleSexp.sexp'),'const.fromSexp.opsexp_0'),s('type.ast.op',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op',VV0)))).
fof('ARITY_1_2_const.simpleSexp.SX_CONS', axiom, ![VV0, VV1]: s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.SX_CONS_1'(s('type.simpleSexp.sexp',VV0))),s('type.simpleSexp.sexp',VV1))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',VV0),s('type.simpleSexp.sexp',VV1)))).
fof('ARITY_0_6_const.ast.opw_CASE', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3, VV4, VV5]: s(V_27A_27,'happ'(s('fun'(V_27A_27,V_27A_27),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,V_27A_27))),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)))),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,V_27A_27))))),'happ'(s('fun'('type.ast.opw','fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)))))),'const.ast.opw_CASE_0'),s('type.ast.opw',VV0))),s(V_27A_27,VV1))),s(V_27A_27,VV2))),s(V_27A_27,VV3))),s(V_27A_27,VV4))),s(V_27A_27,VV5))) = s(V_27A_27,'const.ast.opw_CASE_6'(s('type.ast.opw',VV0),s(V_27A_27,VV1),s(V_27A_27,VV2),s(V_27A_27,VV3),s(V_27A_27,VV4),s(V_27A_27,VV5)))).
fof('thm.fromSexp.opsexp_primitive_def', axiom, s('fun'('type.ast.op','type.simpleSexp.sexp'),'const.fromSexp.opsexp_0') = s('fun'('type.ast.op','type.simpleSexp.sexp'),'const.relation.WFREC_2'(s('fun'('type.ast.op','fun'('type.ast.op','bool')),'const.min.@_1'(s('fun'('fun'('type.ast.op','fun'('type.ast.op','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.ast.op','type.simpleSexp.sexp'),'fun'('type.ast.op','type.simpleSexp.sexp')),'_dst_x0_1'(s('fun'('type.ast.op','type.simpleSexp.sexp'),'_dst_x1x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0_30'(s('fun'('type.ast.op','fun'('fun'('type.ast.opn','type.simpleSexp.sexp'),'fun'('fun'('type.ast.opb','type.simpleSexp.sexp'),'fun'('fun'('type.ast.word_size','fun'('type.ast.opw','type.simpleSexp.sexp')),'fun'('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.simpleSexp.sexp'))),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('fun'('type.ast.word_size','type.simpleSexp.sexp'),'fun'('fun'('type.ast.word_size','type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('fun'('type.ast.opb','type.simpleSexp.sexp'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('fun'('type.num.num','type.simpleSexp.sexp'),'type.simpleSexp.sexp')))))))))))))))))))))))))))))),'const.ast.op_CASE_0'),s('fun'('type.ast.opn','type.simpleSexp.sexp'),'_dst_x1x0x0x0x0x0_6'(s('fun'('type.ast.opn','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')))))),'const.ast.opn_CASE_0'),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))),s('fun'('type.ast.opb','type.simpleSexp.sexp'),'_dst_x1x0x0x0x0_5'(s('fun'('type.ast.opb','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'))))),'const.ast.opb_CASE_0'),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('fun'('type.ast.word_size','fun'('type.ast.opw','type.simpleSexp.sexp')),'_dst_x00x10x01x01_4'(s('fun'('type.ast.word_size','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'))),'const.ast.word_size_CASE_0'),s('fun'('type.ast.word_size','type.ast.word_size'),'_i_0_0'),s('fun'('type.ast.opw','type.simpleSexp.sexp'),'_dst_x1x0x0x0x0x0_6'(s('fun'('type.ast.opw','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')))))),'const.ast.opw_CASE_0'),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('fun'('type.ast.opw','type.simpleSexp.sexp'),'_dst_x1x0x0x0x0x0_6'(s('fun'('type.ast.opw','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')))))),'const.ast.opw_CASE_0'),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.simpleSexp.sexp'))),'_dst_x000x100x011x011_4'(s('fun'('type.ast.word_size','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'))),'const.ast.word_size_CASE_0'),s('fun'('type.ast.word_size','type.ast.word_size'),'_i_0_0'),s('fun'('type.ast.shift','fun'('type.num.num','type.simpleSexp.sexp')),'_dst_x00x10x01x01x01_5'(s('fun'('type.ast.shift','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')))),'const.ast.shift_CASE_0'),s('fun'('type.ast.shift','type.ast.shift'),'_i_0_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.SX_CONS_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.SX_CONS_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.SX_CONS_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))))))),s('fun'('type.ast.shift','fun'('type.num.num','type.simpleSexp.sexp')),'_dst_x00x10x01x01x01_5'(s('fun'('type.ast.shift','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')))),'const.ast.shift_CASE_0'),s('fun'('type.ast.shift','type.ast.shift'),'_i_0_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.SX_CONS_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.SX_CONS_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.SX_CONS_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('fun'('type.ast.word_size','type.simpleSexp.sexp'),'_dst_x1x0x0_3'(s('fun'('type.ast.word_size','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'))),'const.ast.word_size_CASE_0'),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))),s('fun'('type.ast.word_size','type.simpleSexp.sexp'),'_dst_x1x0x0_3'(s('fun'('type.ast.word_size','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'))),'const.ast.word_size_CASE_0'),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.ast.opb','type.simpleSexp.sexp'),'_dst_x1x0x0x0x0_5'(s('fun'('type.ast.opb','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'))))),'const.ast.opb_CASE_0'),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.SX_CONS_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0')))))))))))).
fof('thm.fromSexp.fromSexp_|49||49||48|_prove_ltb', axiom, ![V_27a_27]: (((s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Plus_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Minus_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Times_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Divide_0'))) | s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Modulo_0'))))))) | ((s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Lt_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Gt_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Leq_0'))) | s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Geq_0')))))) | (((s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Andw_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Orw_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Xor_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Add_0'))) | s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Sub_0'))))))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Andw_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Orw_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Xor_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Add_0'))) | s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Sub_0')))))))) | (((?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27))) | ?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27))))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27))) | ?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27)))))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Equality_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opapp_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opassign_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opref_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opderef_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aw8alloc_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aw8sub_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aw8length_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aw8update_0') | ((s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W8_0'))) | s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W64_0')))) | ((s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W8_0'))) | s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W64_0')))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Ord_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chr_0') | ((s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Lt_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Gt_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Leq_0'))) | s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Geq_0')))))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Explode_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Implode_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Strlen_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.VfromList_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Vsub_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Vlength_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aalloc_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Asub_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Alength_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aupdate_0') | ?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27n_27))))))))))))))))))))))))))))))) => (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Plus_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Minus_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Times_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Divide_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Modulo_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Lt_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Gt_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Leq_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Geq_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Andw_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Orw_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Xor_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Add_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Sub_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Andw_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Orw_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Xor_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Add_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Sub_0'))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27))) | (?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Equality_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opapp_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opassign_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opref_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Opderef_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aw8alloc_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aw8sub_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aw8length_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aw8update_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Ord_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chr_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W8_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W8_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W64_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W64_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Lt_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Gt_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Leq_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Geq_0'))) | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Explode_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Implode_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Strlen_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.VfromList_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Vsub_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Vlength_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aalloc_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Asub_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Alength_0') | (s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.Aupdate_0') | ?[V_27n_27]: s('type.ast.op',V_27a_27) = s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27n_27))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.fromSexp.opsexp_ind', axiom, ![V_27P_27]: ((p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Plus_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Minus_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Times_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Divide_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Modulo_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Lt_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Gt_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Leq_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Geq_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Andw_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Orw_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Xor_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Add_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Sub_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Andw_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Orw_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Xor_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Add_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Sub_0')))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27)))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Equality_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opapp_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opassign_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opref_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Opderef_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Aw8alloc_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Aw8sub_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Aw8length_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Aw8update_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Ord_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Chr_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W8_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W8_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W64_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W64_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Lt_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Gt_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Leq_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Geq_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Explode_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Implode_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Strlen_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.VfromList_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Vsub_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Vlength_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Aalloc_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Asub_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Alength_0')))) & (p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.Aupdate_0')))) & ![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27n_27)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.op','bool'),V_27P_27),s('type.ast.op',V_27v_27)))))).
fof('thm.fromSexp.opsexp_def|split|0', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Plus_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|1', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Minus_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|2', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Times_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|3', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Divide_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|4', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn','const.ast.Modulo_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|5', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Lt_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))).
fof('thm.fromSexp.opsexp_def|split|6', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Gt_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))).
fof('thm.fromSexp.opsexp_def|split|7', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Leq_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|8', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Geq_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|9', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Andw_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|10', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Orw_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|11', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Xor_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|12', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Add_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|13', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.opw','const.ast.Sub_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|14', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Andw_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|15', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Orw_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|16', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Xor_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|17', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Add_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|18', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.opw','const.ast.Sub_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|19', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))).
fof('thm.fromSexp.opsexp_def|split|20', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))).
fof('thm.fromSexp.opsexp_def|split|21', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))).
fof('thm.fromSexp.opsexp_def|split|22', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsl_0'),s('type.num.num',V_27n_27))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))).
fof('thm.fromSexp.opsexp_def|split|23', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Lsr_0'),s('type.num.num',V_27n_27))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))).
fof('thm.fromSexp.opsexp_def|split|24', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.shift','const.ast.Asr_0'),s('type.num.num',V_27n_27))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))).
fof('thm.fromSexp.opsexp_def|split|25', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Equality_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|26', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opapp_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))).
fof('thm.fromSexp.opsexp_def|split|27', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opassign_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|28', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opref_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))).
fof('thm.fromSexp.opsexp_def|split|29', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Opderef_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|30', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Aw8alloc_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|31', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Aw8sub_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|32', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Aw8length_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|33', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Aw8update_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|34', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Ord_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.opsexp_def|split|35', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Chr_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.opsexp_def|split|36', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W8_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|37', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W8_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|38', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size','const.ast.W64_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|39', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size','const.ast.W64_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|40', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Lt_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|41', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Gt_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|42', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Leq_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|43', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb','const.ast.Geq_0'))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|44', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Explode_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|45', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Implode_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|46', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Strlen_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|47', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.VfromList_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|48', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Vsub_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.opsexp_def|split|49', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Vlength_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|50', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Aalloc_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|51', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Asub_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.opsexp_def|split|52', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Alength_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|53', axiom, s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.Aupdate_0'))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.fromSexp.opsexp_def|split|54', axiom, ![V_27n_27]: s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27n_27))))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))).
fof('thm.fromSexp.opsexp_|49||49|', axiom, ![V_27o_7c49_7c_27, V_27o2_27]: (s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op',V_27o_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op',V_27o2_27))) <=> s('type.ast.op',V_27o_7c49_7c_27) = s('type.ast.op',V_27o2_27))).
fof('ARITY_0_1_const.fromSexp.lopsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.lop','type.simpleSexp.sexp'),'const.fromSexp.lopsexp_0'),s('type.ast.lop',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop',VV0)))).
fof('ARITY_0_1_const.fromSexp.expsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',VV0)))).
fof('thm.fromSexp.expsexp_primitive_def', axiom, s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0') = s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.relation.WFREC_2'(s('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'const.min.@_1'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x11x01_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','type.ast.exp'),'const.ast.Raise_0'))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','type.ast.exp')),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'_i_0_0'))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.pat','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','bool'))))),'_dst_x00000x00111x11101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','bool'))),'_dst_x000x011x100_3'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.ast.pat','fun'('type.ast.exp','type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'))))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool')),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('fun'('type.ast.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.Con_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Fun_0'))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.op','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.op','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool')),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('fun'('type.ast.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.lop','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.lop','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.lop','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.lop','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','type.ast.exp'))),'_dst_x011x100_2'(s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x011x100_2'(s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x001x010x100_3'(s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','type.ast.exp')),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'_i_0_0'))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.pat','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','bool'))))),'_dst_x00000x00111x11101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','bool'))),'_dst_x000x011x100_3'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.ast.pat','fun'('type.ast.exp','type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'))))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','type.ast.exp'))),'_dst_x011x100_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool')))))),'_dst_x000000x001111x111001_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool')))),'_dst_x0000x0111x1000_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.pair.,_0'))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.ast.exp')),'_dst_x01x10_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0'))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_dst_x01x10x10x00x10x00x10x10x10x10x10x10x10_13'(s('fun'('type.ast.exp','fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.simpleSexp.sexp')),'fun'('fun'('type.ast.lit','type.simpleSexp.sexp'),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.simpleSexp.sexp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.simpleSexp.sexp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.simpleSexp.sexp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.simpleSexp.sexp')),'type.simpleSexp.sexp'))))))))))))),'const.ast.exp_CASE_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x110x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1_2'(s('fun'('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp'))),'const.list.MAP_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('fun'('type.ast.pat','fun'('type.ast.exp','type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.pat','fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x010x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.fromSexp.patsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))),s('fun'('type.ast.lit','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.ast.lit','type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.ast.lit','type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.ast.lit','type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.ast.lit','type.simpleSexp.sexp'),'const.fromSexp.litsexp_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x010x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.optsexp_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'type.option.option'('type.simpleSexp.sexp')),'const.option.OPTION_MAP_1'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'const.fromSexp.idsexp_0'))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.exp'),'type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.MAP_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'const.fromSexp.idsexp_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x010x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x010x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.ast.op','type.simpleSexp.sexp'),'const.fromSexp.opsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.exp'),'type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.MAP_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp')))),'_dst_x0000x1111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp')))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0000x0100x1011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.ast.lop','type.simpleSexp.sexp'),'const.fromSexp.lopsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x110x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp')))),'_dst_x0000x1111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp')))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0000x1100x1011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x110x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x110x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1_2'(s('fun'('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.simpleSexp.sexp'))),'const.list.MAP_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('fun'('type.ast.pat','fun'('type.ast.exp','type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.pat','fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x010x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.fromSexp.patsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp')))),'_dst_x0000x1111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.simpleSexp.sexp')))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0000x0100x1011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.optsexp_0'),s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.simpleSexp.sexp')),'const.option.OPTION_MAP_1'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x110x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.combin.I_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp')))),'_dst_x000x110x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.simpleSexp.sexp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1_2'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.simpleSexp.sexp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.simpleSexp.sexp'))),'const.list.MAP_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp'))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp')))),'_dst_x0000x0100x1011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x010x101_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'))))))))))))),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.list.list'('type.simpleSexp.sexp'))),'_dst_x00x11x00_3'(s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.ast.exp','type.simpleSexp.sexp'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_i_0_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))))))).
fof('thm.fromSexp.fromSexp_|49||49|5_prove_ltb', axiom, ![V_27a_27]: ((?[V_27e_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27e_27))) | (?[V_27e_27, V_27pes_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))) | (?[V_27l_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27l_27))) | (?[V_27cn_27, V_27es_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.ast.exp'),V_27es_27))) | (?[V_27id_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))) | (?[V_27x_27, V_27e_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))) | (?[V_27op_27, V_27es_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),V_27es_27))) | (?[V_27lop_27, V_27e_7c49_7c_27, V_27e2_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27lop_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))) | (?[V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27),s('type.ast.exp',V_27e3_27))) | (?[V_27e_27, V_27pes_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))) | (?[V_27so_27, V_27e_7c49_7c_27, V_27e2_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27so_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))) | ?[V_27funs_27, V_27e_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.ast.exp',V_27e_27)))))))))))))) => (?[V_27e_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27e_27))) | (?[V_27e_27, V_27pes_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))) | (?[V_27l_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27l_27))) | (?[V_27cn_27, V_27es_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.ast.exp'),V_27es_27))) | (?[V_27id_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))) | (?[V_27x_27, V_27e_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))) | (?[V_27op_27, V_27es_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),V_27es_27))) | (?[V_27lop_27, V_27e_7c49_7c_27, V_27e2_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27lop_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))) | (?[V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27),s('type.ast.exp',V_27e3_27))) | (?[V_27e_27, V_27pes_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))) | (?[V_27so_27, V_27e_7c49_7c_27, V_27e2_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27so_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))) | ?[V_27funs_27, V_27e_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.ast.exp',V_27e_27)))))))))))))))).
fof('thm.fromSexp.expsexp_ind', axiom, ![V_27P_27]: ((![V_27e_27]: (p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_27)))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27e_27))))))) & (![V_27e_27, V_27pes_27]: ((![V_27p_27, V_27e_7c39_7c_27]: (p(s('bool','const.bool.IN_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_7c39_7c_27))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_7c39_7c_27))))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))))) & (![V_27l_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27l_27)))))) & (![V_27cn_27, V_27es_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.ast.exp',V_27a_27),s('fun'('type.ast.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.exp'),V_27es_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.ast.exp'),V_27es_27))))))) & (![V_27id_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27)))))) & (![V_27x_27, V_27e_27]: (p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_27)))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))))) & (![V_27op_27, V_27es_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.ast.exp',V_27a_27),s('fun'('type.ast.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.exp'),V_27es_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),V_27es_27))))))) & (![V_27lop_27, V_27e_7c49_7c_27, V_27e2_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e2_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27lop_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))))))) & (![V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e2_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e3_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27),s('type.ast.exp',V_27e3_27))))))) & (![V_27e_27, V_27pes_27]: ((![V_27p_27, V_27e_7c39_7c_27]: (p(s('bool','const.bool.IN_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_7c39_7c_27))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_7c39_7c_27))))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))))) & (![V_27so_27, V_27e_7c49_7c_27, V_27e2_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e2_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27so_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))))))) & ![V_27funs_27, V_27e_27]: ((![V_27x_27, V_27y_27, V_27z_27]: (p(s('bool','const.bool.IN_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27y_27),s('type.ast.exp',V_27z_27))))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27z_27))))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27e_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.ast.exp',V_27e_27)))))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27v_27)))))).
fof('thm.fromSexp.expsexp_def|split|0', axiom, ![V_27e_27]: s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27e_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.expsexp_def|split|1', axiom, ![V_27pes_27, V_27e_27]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp',V_27e_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.simpleSexp.sexp'),'const.pair.UNCURRY_1'(s('fun'('type.ast.pat','fun'('type.ast.exp','type.simpleSexp.sexp')),'_dst_x00x10x01_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.fromSexp.patsexp_0'),s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'))))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.expsexp_def|split|2', axiom, ![V_27l_27]: s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27l_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit',V_27l_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.expsexp_def|split|3', axiom, ![V_27es_27, V_27cn_27]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.ast.exp'),V_27es_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.OPTION_MAP_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'const.fromSexp.idsexp_0'),s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.list.list'('type.ast.exp'),V_27es_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.expsexp_def|split|4', axiom, ![V_27id_27]: s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.expsexp_def|split|5', axiom, ![V_27x_27, V_27e_27]: s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27x_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.expsexp_def|split|6', axiom, ![V_27op_27, V_27es_27]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),V_27es_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op',V_27op_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.list.list'('type.ast.exp'),V_27es_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.expsexp_def|split|7', axiom, ![V_27lop_27, V_27e2_27, V_27e_7c49_7c_27]: s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27lop_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop',V_27lop_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_7c49_7c_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e2_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.expsexp_def|split|8', axiom, ![V_27e3_27, V_27e2_27, V_27e_7c49_7c_27]: s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27),s('type.ast.exp',V_27e3_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_7c49_7c_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e2_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e3_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.expsexp_def|split|9', axiom, ![V_27pes_27, V_27e_27]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp',V_27e_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.simpleSexp.sexp'),'const.pair.UNCURRY_1'(s('fun'('type.ast.pat','fun'('type.ast.exp','type.simpleSexp.sexp')),'_dst_x00x10x01_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.ast.pat','type.simpleSexp.sexp'),'const.fromSexp.patsexp_0'),s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'))))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.expsexp_def|split|10', axiom, ![V_27so_27, V_27e2_27, V_27e_7c49_7c_27]: s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27so_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.OPTION_MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.option.option'('type.list.list'('type.string.char')),V_27so_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_7c49_7c_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e2_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.expsexp_def|split|11', axiom, ![V_27funs_27, V_27e_27]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.ast.exp',V_27e_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.simpleSexp.sexp'),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x100x011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_dst_x00x10x01_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'))))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'),s('type.ast.exp',V_27e_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.fromSexp_|49||49|8_prove_ltb', axiom, ![V_27x_27]: ?[V_27x_7c39_7c_27, V_27y_27, V_27z_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),V_27x_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27y_27),s('type.ast.exp',V_27z_27)))))).
fof('thm.fromSexp.fromSexp_|49||49|9_prove_ltb', axiom, ![V_27y_27]: ?[V_27x_27, V_27y_7c39_7c_27, V_27z_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),V_27y_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27y_7c39_7c_27),s('type.ast.exp',V_27z_27)))))).
fof('thm.fromSexp.fromSexp_|49|2|48|_prove_ltb', axiom, ![V_27x_27]: ?[V_27p_27, V_27e_7c39_7c_27]: s('type.pair.prod'('type.ast.pat','type.ast.exp'),V_27x_27) = s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_7c39_7c_27)))).
fof('thm.fromSexp.fromSexp_|49|2|49|_prove_ltb', axiom, ![V_27y_27]: ?[V_27p_27, V_27e_7c39_7c_27]: s('type.pair.prod'('type.ast.pat','type.ast.exp'),V_27y_27) = s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_7c39_7c_27)))).
fof('thm.fromSexp.expsexp_|49||49|', axiom, ![V_27e_7c49_7c_27, V_27e2_27]: (s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e2_27))) => s('type.ast.exp',V_27e_7c49_7c_27) = s('type.ast.exp',V_27e2_27))).
fof('ARITY_0_1_const.fromSexp.type_defsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.simpleSexp.sexp'),'const.fromSexp.type_defsexp_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),VV0))) = s('type.simpleSexp.sexp','const.fromSexp.type_defsexp_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),VV0)))).
fof('thm.fromSexp.type_defsexp_def', axiom, s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.simpleSexp.sexp'),'const.fromSexp.type_defsexp_0') = s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.simpleSexp.sexp'),'const.combin.o_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.simpleSexp.sexp')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.simpleSexp.sexp'),'happ'(s('fun'('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),'type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),'type.simpleSexp.sexp'))),'_dst_x000x100x011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.list.list'('type.string.char')),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.simpleSexp.sexp')),'const.list.MAP_1'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),'type.simpleSexp.sexp')),'_dst_x00x10x01_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),'type.list.list'('type.simpleSexp.sexp')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),'type.simpleSexp.sexp'),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.ast.t'),'type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.ast.t'),'type.simpleSexp.sexp')),'_dst_x00x10x01_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('type.list.list'('type.ast.t'),'type.simpleSexp.sexp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.simpleSexp.sexp')),'const.list.MAP_1'(s('fun'('type.ast.t','type.simpleSexp.sexp'),'const.fromSexp.typesexp_0')))))))))))))))))))))))))).
fof('thm.fromSexp.fromSexp_|49|26_prove_ltb', axiom, ![V_27x_27]: ?[V_27xs_27, V_27x_7c39_7c_27, V_27ls_27]: s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),V_27x_27) = s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27xs_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),V_27ls_27)))))).
fof('thm.fromSexp.fromSexp_|49|27_prove_ltb', axiom, ![V_27y_27]: ?[V_27xs_27, V_27x_27, V_27ls_27]: s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),V_27y_27) = s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27xs_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),V_27ls_27)))))).
fof('thm.fromSexp.fromSexp_|49|28_prove_ltb', axiom, ![V_27x_27]: ?[V_27y_27, V_27ts_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),V_27x_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27y_27),s('type.list.list'('type.ast.t'),V_27ts_27)))).
fof('thm.fromSexp.fromSexp_|49|29_prove_ltb', axiom, ![V_27y_27]: ?[V_27y_7c39_7c_27, V_27ts_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),V_27y_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27y_7c39_7c_27),s('type.list.list'('type.ast.t'),V_27ts_27)))).
fof('thm.fromSexp.type_defsexp_|49||49|', axiom, ![V_27t_7c49_7c_27, V_27t2_27]: (s('type.simpleSexp.sexp','const.fromSexp.type_defsexp_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27t_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.type_defsexp_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27t2_27))) <=> s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27t_7c49_7c_27) = s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27t2_27))).
fof('thm.fromSexp.decsexp_def|split|0', axiom, ![V_27p_27, V_27e_27]: s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat',V_27p_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.decsexp_def|split|1', axiom, ![V_27funs_27]: s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.simpleSexp.sexp'),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.simpleSexp.sexp')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp'))),'_dst_x000x100x011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.simpleSexp.sexp')),'_dst_x00x10x01_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('fun'('type.ast.exp','type.simpleSexp.sexp'),'const.fromSexp.expsexp_0'))))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.decsexp_def|split|2', axiom, ![V_27td_27]: s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27td_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.type_defsexp_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27td_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.decsexp_def|split|3', axiom, ![V_27ns_27, V_27x_27, V_27t_27]: s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),V_27ns_27),s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.t',V_27t_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.list.list'('type.list.list'('type.string.char')),V_27ns_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.list.list'('type.string.char'),V_27x_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',V_27t_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.decsexp_def|split|4', axiom, ![V_27x_27, V_27ts_27]: s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.list.list'('type.ast.t'),V_27ts_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27x_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.ast.t','type.simpleSexp.sexp'),'const.fromSexp.typesexp_0'),s('type.list.list'('type.ast.t'),V_27ts_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.fromSexp_|49|32_prove_ltb', axiom, ![V_27x_27]: ?[V_27f_27, V_27x_7c39_7c_27, V_27e_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),V_27x_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27f_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_7c39_7c_27),s('type.ast.exp',V_27e_27)))))).
fof('thm.fromSexp.fromSexp_|49|33_prove_ltb', axiom, ![V_27y_27]: ?[V_27f_27, V_27x_27, V_27e_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),V_27y_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27f_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27)))))).
fof('thm.fromSexp.decsexp_|49||49|', axiom, ![V_27d_7c49_7c_27, V_27d2_27]: (s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec',V_27d_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec',V_27d2_27))) <=> s('type.ast.dec',V_27d_7c49_7c_27) = s('type.ast.dec',V_27d2_27))).
fof('thm.fromSexp.specsexp_def|split|0', axiom, ![V_27x_27, V_27t_27]: s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec','const.ast.Sval_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.t',V_27t_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27x_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',V_27t_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.specsexp_def|split|1', axiom, ![V_27t_27]: s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec','const.ast.Stype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27t_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.type_defsexp_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27t_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.specsexp_def|split|2', axiom, ![V_27ns_27, V_27x_27, V_27t_27]: s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec','const.ast.Stabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),V_27ns_27),s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.t',V_27t_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.list.list'('type.list.list'('type.string.char')),V_27ns_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.list.list'('type.string.char'),V_27x_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',V_27t_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.specsexp_def|split|3', axiom, ![V_27ns_27, V_27x_27]: s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec','const.ast.Stype_opq_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27ns_27),s('type.list.list'('type.string.char'),V_27x_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.list.list'('type.list.list'('type.string.char')),V_27ns_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.fromSexp.SEXSTR_0'),s('type.list.list'('type.string.char'),V_27x_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.specsexp_def|split|4', axiom, ![V_27x_27, V_27ts_27]: s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec','const.ast.Sexn_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.list.list'('type.ast.t'),V_27ts_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27x_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'('type.ast.t','type.simpleSexp.sexp'),'const.fromSexp.typesexp_0'),s('type.list.list'('type.ast.t'),V_27ts_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))).
fof('thm.fromSexp.specsexp_|49||49|', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: (s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec',V_27s_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec',V_27s2_27))) <=> s('type.ast.spec',V_27s_7c49_7c_27) = s('type.ast.spec',V_27s2_27))).
fof('ARITY_0_1_const.fromSexp.specsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.spec','type.simpleSexp.sexp'),'const.fromSexp.specsexp_0'),s('type.ast.spec',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec',VV0)))).
fof('ARITY_0_1_const.fromSexp.decsexp', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.ast.dec','type.simpleSexp.sexp'),'const.fromSexp.decsexp_0'),s('type.ast.dec',VV0))) = s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec',VV0)))).
fof('thm.fromSexp.topsexp_def|split|0', axiom, ![V_27modN_27, V_27specopt_27, V_27declist_27]: s('type.simpleSexp.sexp','const.fromSexp.topsexp_1'(s('type.ast.top','const.ast.Tmod_3'(s('type.list.list'('type.string.char'),V_27modN_27),s('type.option.option'('type.list.list'('type.ast.spec')),V_27specopt_27),s('type.list.list'('type.ast.dec'),V_27declist_27))))) = s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27modN_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.OPTION_MAP_2'(s('fun'('type.list.list'('type.ast.spec'),'type.simpleSexp.sexp'),'const.combin.o_2'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('fun'('type.list.list'('type.ast.spec'),'type.list.list'('type.simpleSexp.sexp')),'const.list.MAP_1'(s('fun'('type.ast.spec','type.simpleSexp.sexp'),'const.fromSexp.specsexp_0'))))),s('type.option.option'('type.list.list'('type.ast.spec')),V_27specopt_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.simpleSexp.sexp'),'const.fromSexp.listsexp_0'),s('type.list.list'('type.simpleSexp.sexp'),'happ'(s('fun'('type.list.list'('type.ast.dec'),'type.list.list'('type.simpleSexp.sexp')),'const.list.MAP_1'(s('fun'('type.ast.dec','type.simpleSexp.sexp'),'const.fromSexp.decsexp_0'))),s('type.list.list'('type.ast.dec'),V_27declist_27))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))))))).
fof('thm.fromSexp.topsexp_def|split|1', axiom, ![V_27dec_27]: s('type.simpleSexp.sexp','const.fromSexp.topsexp_1'(s('type.ast.top','const.ast.Tdec_1'(s('type.ast.dec',V_27dec_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.CONS_2'(s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec',V_27dec_27))),s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0')))))))).
fof('thm.fromSexp.topsexp_|49||49|', axiom, ![V_27t_7c49_7c_27, V_27t2_27]: (s('type.simpleSexp.sexp','const.fromSexp.topsexp_1'(s('type.ast.top',V_27t_7c49_7c_27))) = s('type.simpleSexp.sexp','const.fromSexp.topsexp_1'(s('type.ast.top',V_27t2_27))) <=> s('type.ast.top',V_27t_7c49_7c_27) = s('type.ast.top',V_27t2_27))).
fof('thm.fromSexp.odestSXSTR_SOME', axiom, ![V_27y_27, V_27s_27]: (s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSTR_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27y_27))) <=> s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27y_27))))).
fof('thm.fromSexp.odestSEXSTR_SOME', axiom, ![V_27y_27, V_27s_27]: (s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSEXSTR_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27y_27))) <=> s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27y_27))))).
fof('thm.fromSexp.odestSEXSTR_SEXSTR', axiom, ![V_27s_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSEXSTR_1'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.fromSexp.odestSXNUM_SX_STR', axiom, ![V_27s_27]: s('type.option.option'('type.num.num'),'const.fromSexp.odestSXNUM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXNUM_SEXSTR', axiom, ![V_27s_27]: s('type.option.option'('type.num.num'),'const.fromSexp.odestSXNUM_1'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXSTR_listsexp', axiom, ![V_27l_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSXSTR_1'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.odestSEXSTR_listsexp', axiom, ![V_27l_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.fromSexp.odestSEXSTR_1'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.fromSexp.odestSXNUM_listsexp', axiom, ![V_27l_27]: s('type.option.option'('type.num.num'),'const.fromSexp.odestSXNUM_1'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_27))))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')).
fof('thm.fromSexp.dstrip_sexp_SX_STR', axiom, ![V_27s_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0')).
fof('thm.fromSexp.dstrip_sexp_SEXSTR', axiom, ![V_27s_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0')).
fof('thm.fromSexp.strip_sxcons_listsexp', axiom, ![V_27ls_27]: s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27ls_27))))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.SOME_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27ls_27)))).
fof('thm.fromSexp.dstrip_sexp_listsexp', axiom, ![V_27ls_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27ls_27))))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.list_CASE_3'(s('type.list.list'('type.simpleSexp.sexp'),V_27ls_27),s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x10x00x01x00x00_6'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'fun'('fun'('type.num.num','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'),s('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'_i_0_0'))))),s('fun'('type.num.num','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0')))))))).
fof('thm.fromSexp.sexplist_listsexp_matchable', axiom, ![V_27A_27]: ![V_27l_27, V_27f_27, V_27g_27, V_27gl_27]: ((![V_27x_27]: (p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27x_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27l_27)))))) => s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp','happ'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27g_27),s(V_27A_27,V_27x_27))))) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27x_27)))) & s('type.list.list'('type.simpleSexp.sexp'),V_27gl_27) = s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27g_27),s('type.list.list'(V_27A_27),V_27l_27)))) => s('type.option.option'('type.list.list'(V_27A_27)),'const.fromSexp.sexplist_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27gl_27))))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.option.SOME_1'(s('type.list.list'(V_27A_27),V_27l_27))))).
fof('thm.fromSexp.sexplist_listsexp_rwt', axiom, ![V_27A_27]: ![V_27l_27, V_27g_27, V_27f_27]: (![V_27x_27]: (p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27x_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27l_27)))))) => s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp','happ'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27g_27),s(V_27A_27,V_27x_27))))) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27x_27)))) => s('type.option.option'('type.list.list'(V_27A_27)),'const.fromSexp.sexplist_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27g_27),s('type.list.list'(V_27A_27),V_27l_27))))))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.option.SOME_1'(s('type.list.list'(V_27A_27),V_27l_27))))).
fof('thm.fromSexp.sexplist_listsexp_imp', axiom, ![V_27A_27]: ![V_27l2_27, V_27l_7c49_7c_27, V_27f_27]: (s('type.option.option'('type.list.list'(V_27A_27)),'const.fromSexp.sexplist_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_7c49_7c_27))))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.option.SOME_1'(s('type.list.list'(V_27A_27),V_27l2_27))) => ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_7c49_7c_27)))))) => s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.simpleSexp.sexp'),V_27l_7c49_7c_27))))) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,'const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'(V_27A_27),V_27l2_27)))))))).
fof('thm.fromSexp.sexpopt_optsexp', axiom, ![V_27A_27]: ![V_27x_27, V_27g_27, V_27f_27]: (![V_27y_27]: (s('type.option.option'(V_27A_27),V_27x_27) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27y_27))) => s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp','happ'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27g_27),s(V_27A_27,V_27y_27))))) = s('type.option.option'(V_27A_27),V_27x_27)) => s('type.option.option'('type.option.option'(V_27A_27)),'const.fromSexp.sexpopt_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.OPTION_MAP_2'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27g_27),s('type.option.option'(V_27A_27),V_27x_27))))))) = s('type.option.option'('type.option.option'(V_27A_27)),'const.option.SOME_1'(s('type.option.option'(V_27A_27),V_27x_27))))).
fof('thm.fromSexp.sexpid_odestSEXSTR_idsexp', axiom, ![V_27i_27]: s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.fromSexp.sexpid_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27i_27))))) = s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27i_27)))).
fof('thm.fromSexp.sexptctor_tctorsexp', axiom, ![V_27t_27]: s('type.option.option'('type.ast.tctor'),'const.fromSexp.sexptctor_1'(s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor',V_27t_27))))) = s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor',V_27t_27)))).
fof('ARITY_0_1_const.fromSexp.sexptype', axiom, ![VV0]: s('type.option.option'('type.ast.t'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.t')),'const.fromSexp.sexptype_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.t'),'const.fromSexp.sexptype_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.sexptype_typesexp', axiom, ![V_27t_27]: s('type.option.option'('type.ast.t'),'const.fromSexp.sexptype_1'(s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',V_27t_27))))) = s('type.option.option'('type.ast.t'),'const.option.SOME_1'(s('type.ast.t',V_27t_27)))).
fof('ARITY_0_1_const.fromSexp.sexptype_def', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))))),'const.fromSexp.sexptype_def_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.fromSexp.sexptype_def_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.sexptype_def_type_defsexp', axiom, ![V_27l_27]: s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.fromSexp.sexptype_def_1'(s('type.simpleSexp.sexp','const.fromSexp.type_defsexp_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27l_27))))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27l_27)))).
fof('thm.fromSexp.sexplit_litsexp', axiom, ![V_27l_27]: s('type.option.option'('type.ast.lit'),'const.fromSexp.sexplit_1'(s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit',V_27l_27))))) = s('type.option.option'('type.ast.lit'),'const.option.SOME_1'(s('type.ast.lit',V_27l_27)))).
fof('ARITY_0_1_const.fromSexp.sexppat', axiom, ![VV0]: s('type.option.option'('type.ast.pat'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.pat')),'const.fromSexp.sexppat_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.pat'),'const.fromSexp.sexppat_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.sexppat_patsexp', axiom, ![V_27p_27]: s('type.option.option'('type.ast.pat'),'const.fromSexp.sexppat_1'(s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat',V_27p_27))))) = s('type.option.option'('type.ast.pat'),'const.option.SOME_1'(s('type.ast.pat',V_27p_27)))).
fof('thm.fromSexp.sexpop_opsexp', axiom, ![V_27op_27]: s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op',V_27op_27))))) = s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op',V_27op_27)))).
fof('thm.fromSexp.sexplop_lopsexp', axiom, ![V_27l_27]: s('type.option.option'('type.ast.lop'),'const.fromSexp.sexplop_1'(s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop',V_27l_27))))) = s('type.option.option'('type.ast.lop'),'const.option.SOME_1'(s('type.ast.lop',V_27l_27)))).
fof('ARITY_0_1_const.fromSexp.sexpexp', axiom, ![VV0]: s('type.option.option'('type.ast.exp'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.ast.exp')),'const.fromSexp.sexpexp_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.ast.exp'),'const.fromSexp.sexpexp_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.fromSexp.sexpexp_expsexp', axiom, ![V_27e_27]: s('type.option.option'('type.ast.exp'),'const.fromSexp.sexpexp_1'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_27))))) = s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',V_27e_27)))).
fof('thm.fromSexp.sexpdec_decsexp', axiom, ![V_27d_27]: s('type.option.option'('type.ast.dec'),'const.fromSexp.sexpdec_1'(s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec',V_27d_27))))) = s('type.option.option'('type.ast.dec'),'const.option.SOME_1'(s('type.ast.dec',V_27d_27)))).
fof('thm.fromSexp.sexpspec_specsexp', axiom, ![V_27s_27]: s('type.option.option'('type.ast.spec'),'const.fromSexp.sexpspec_1'(s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec',V_27s_27))))) = s('type.option.option'('type.ast.spec'),'const.option.SOME_1'(s('type.ast.spec',V_27s_27)))).
fof('thm.fromSexp.sexptop_topsexp', axiom, ![V_27t_27]: s('type.option.option'('type.ast.top'),'const.fromSexp.sexptop_1'(s('type.simpleSexp.sexp','const.fromSexp.topsexp_1'(s('type.ast.top',V_27t_27))))) = s('type.option.option'('type.ast.top'),'const.option.SOME_1'(s('type.ast.top',V_27t_27)))).
fof('thm.fromSexp.sexpopt_SOME', axiom, ![V_27A_27]: ![V_27s_27, V_27opt_27, V_27f_27]: (s('type.option.option'('type.option.option'(V_27A_27)),'const.fromSexp.sexpopt_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.option.option'(V_27A_27)),'const.option.SOME_1'(s('type.option.option'(V_27A_27),V_27opt_27))) => ?[V_27x_27]: (s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),V_27x_27))) & ?[Vv]: ((p(s('bool',Vv)) <=> s('type.option.option'(V_27A_27),V_27opt_27) = s('type.option.option'(V_27A_27),'const.option.NONE_0')) & p(s('bool','const.option.option_CASE_3'(s('type.option.option'('type.simpleSexp.sexp'),V_27x_27),s('bool',Vv),s('fun'('type.simpleSexp.sexp','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool','const.option.IS_SOME_1'(s('type.option.option'(V_27A_27),V_27opt_27))))),s('fun'('type.simpleSexp.sexp','bool'),'_dst_x0x1_2'(s('fun'('type.option.option'(V_27A_27),'bool'),'=_1'(s('type.option.option'(V_27A_27),V_27opt_27))),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27)))))))))))).
fof('thm.fromSexp.listsexp_MAP_EQ_f', axiom, ![V_27A_27]: ![V_27ls_27, V_27f2_27, V_27f_7c49_7c_27]: (![V_27x_27]: (p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27x_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27ls_27)))))) => s('type.simpleSexp.sexp','happ'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27f_7c49_7c_27),s(V_27A_27,V_27x_27))) = s('type.simpleSexp.sexp','happ'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27f2_27),s(V_27A_27,V_27x_27)))) => s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27f_7c49_7c_27),s('type.list.list'(V_27A_27),V_27ls_27))))) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.MAP_2'(s('fun'(V_27A_27,'type.simpleSexp.sexp'),V_27f2_27),s('type.list.list'(V_27A_27),V_27ls_27))))))).
fof('thm.fromSexp.sexplist_SOME', axiom, ![V_27A_27]: ![V_27s_27, V_27ls_27, V_27f_27]: (s('type.option.option'('type.list.list'(V_27A_27)),'const.fromSexp.sexplist_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'(V_27A_27)),'happ'(s('fun'('type.list.list'(V_27A_27),'type.option.option'('type.list.list'(V_27A_27))),'const.option.SOME_0'),s('type.list.list'(V_27A_27),V_27ls_27))) => ?[V_27l_27]: (s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_27))) & s('type.list.list'('type.option.option'(V_27A_27)),'const.list.MAP_2'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_27),s('type.list.list'('type.simpleSexp.sexp'),V_27l_27))) = s('type.list.list'('type.option.option'(V_27A_27)),'const.list.MAP_2'(s('fun'(V_27A_27,'type.option.option'(V_27A_27)),'const.option.SOME_0'),s('type.list.list'(V_27A_27),V_27ls_27)))))).
fof('thm.fromSexp.sexppair_SOME', axiom, ![V_27A_27,V_27B_27]: ![V_27s_27, V_27p_27, V_27f2_27, V_27f_7c49_7c_27]: (s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.fromSexp.sexppair_3'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_7c49_7c_27),s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),V_27f2_27),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.option.SOME_1'(s('type.pair.prod'(V_27A_27,V_27B_27),V_27p_27))) => ?[V_27x_27, V_27y_27]: (s('type.option.option'(V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27A_27)),V_27f_7c49_7c_27),s('type.simpleSexp.sexp',V_27x_27))) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,'const.pair.FST_1'(s('type.pair.prod'(V_27A_27,V_27B_27),V_27p_27))))) & (s('type.option.option'(V_27B_27),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'(V_27B_27)),V_27f2_27),s('type.simpleSexp.sexp',V_27y_27))) = s('type.option.option'(V_27B_27),'const.option.SOME_1'(s(V_27B_27,'const.pair.SND_1'(s('type.pair.prod'(V_27A_27,V_27B_27),V_27p_27))))) & s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27x_27),s('type.simpleSexp.sexp',V_27y_27))))))).
fof('thm.fromSexp.fromSexp_|49|74_prove_ltb', axiom, ![V_27x_27]: ?[V_27nm_27, V_27args_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),V_27x_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27nm_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27)))).
fof('thm.fromSexp.litsexp_sexplit', axiom, ![V_27s_27, V_27l_27]: (s('type.option.option'('type.ast.lit'),'const.fromSexp.sexplit_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.lit'),'const.option.SOME_1'(s('type.ast.lit',V_27l_27))) => s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit',V_27l_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.idsexp_sexpid_odestSEXSTR', axiom, ![V_27y_27, V_27x_27]: (s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.fromSexp.sexpid_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.string.char'))),'const.fromSexp.odestSEXSTR_0'),s('type.simpleSexp.sexp',V_27x_27))) = s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27y_27))) => s('type.simpleSexp.sexp',V_27x_27) = s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27y_27))))).
fof('thm.fromSexp.patsexp_sexppat', axiom, ![V_27s_27, V_27p_27]: (s('type.option.option'('type.ast.pat'),'const.fromSexp.sexppat_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.pat'),'const.option.SOME_1'(s('type.ast.pat',V_27p_27))) => s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat',V_27p_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.opsexp_sexpop', axiom, ![V_27s_27, V_27p_27]: (s('type.option.option'('type.ast.op'),'const.fromSexp.sexpop_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.op'),'const.option.SOME_1'(s('type.ast.op',V_27p_27))) => s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op',V_27p_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.lopsexp_sexplop', axiom, ![V_27z_27, V_27s_27]: (s('type.option.option'('type.ast.lop'),'const.fromSexp.sexplop_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.lop'),'const.option.SOME_1'(s('type.ast.lop',V_27z_27))) => s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop',V_27z_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.fromSexp_|49|82_prove_ltb', axiom, ![V_27x_7c49_7c_27, V_27x_27]: ?[V_27x_7c39_7c_27, V_27y_27, V_27z_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27x_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27y_27),s('type.ast.exp',V_27z_27)))))).
fof('thm.fromSexp.fromSexp_|49|83_prove_ltb', axiom, ![V_27y_7c39_7c_7c39_7c_27]: ?[V_27a_27]: s('type.simpleSexp.sexp',V_27y_7c39_7c_7c39_7c_27) = s('type.simpleSexp.sexp',V_27a_27)).
fof('thm.fromSexp.fromSexp_|49|84_prove_ltb', axiom, ![V_27x2_27, V_27x_27]: ?[V_27p_27, V_27e_7c39_7c_27]: s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27x2_27))) = s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_7c39_7c_27)))).
fof('thm.fromSexp.fromSexp_|49|85_prove_ltb', axiom, ![V_27y_7c39_7c_27]: ?[V_27a_27]: s('type.simpleSexp.sexp',V_27y_7c39_7c_27) = s('type.simpleSexp.sexp',V_27a_27)).
fof('thm.fromSexp.expsexp_sexpexp', axiom, ![V_27s_27, V_27e_27]: (s('type.option.option'('type.ast.exp'),'const.fromSexp.sexpexp_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',V_27e_27))) => s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.tctorsexp_sexptctor', axiom, ![V_27t_27, V_27s_27]: (s('type.option.option'('type.ast.tctor'),'const.fromSexp.sexptctor_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.tctor'),'const.option.SOME_1'(s('type.ast.tctor',V_27t_27))) => s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor',V_27t_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.fromSexp_|49|9|48|_prove_ltb', axiom, ![V_27sym_27, V_27args_27]: ?[V_27s_7c39_7c_27, V_27args_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27sym_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_27))) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_7c39_7c_27),s('type.list.list'('type.simpleSexp.sexp'),V_27args_7c39_7c_27)))).
fof('thm.fromSexp.typesexp_sexptype', axiom, ![V_27s_27, V_27t_27]: (s('type.option.option'('type.ast.t'),'const.fromSexp.sexptype_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.t'),'const.option.SOME_1'(s('type.ast.t',V_27t_27))) => s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',V_27t_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.fromSexp_|49|92_prove_ltb', axiom, ![V_27x_7c39_7c_27, V_27x_27]: ?[V_27xs_27, V_27x_7c39_7c_7c39_7c_27, V_27ls_27]: s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.list.EL_2'(s('type.num.num',V_27x_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27x_27))) = s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27xs_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_7c39_7c_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),V_27ls_27)))))).
fof('thm.fromSexp.fromSexp_|49|93_prove_ltb', axiom, ![V_27x_7c39_7c_7c39_7c_27, V_27ls_27]: ?[V_27y_27, V_27ts_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),'const.list.EL_2'(s('type.num.num',V_27x_7c39_7c_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),V_27ls_27))) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27y_27),s('type.list.list'('type.ast.t'),V_27ts_27)))).
fof('thm.fromSexp.type_defsexp_sexptype_def', axiom, ![V_27x_27, V_27s_27]: (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.fromSexp.sexptype_def_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27x_27))) => s('type.simpleSexp.sexp','const.fromSexp.type_defsexp_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27x_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.fromSexp_|49|96_prove_ltb', axiom, ![V_27z_27, V_27x_27]: ?[V_27f_27, V_27x_7c39_7c_27, V_27e_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27z_27))) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27f_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_7c39_7c_27),s('type.ast.exp',V_27e_27)))))).
fof('thm.fromSexp.decsexp_sexpdec', axiom, ![V_27s_27, V_27d_27]: (s('type.option.option'('type.ast.dec'),'const.fromSexp.sexpdec_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.dec'),'const.option.SOME_1'(s('type.ast.dec',V_27d_27))) => s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec',V_27d_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.specsexp_sexpspec', axiom, ![V_27z_27, V_27s_27]: (s('type.option.option'('type.ast.spec'),'const.fromSexp.sexpspec_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.spec'),'const.option.SOME_1'(s('type.ast.spec',V_27z_27))) => s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec',V_27z_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.topsexp_sexptop', axiom, ![V_27t_27, V_27s_27]: (s('type.option.option'('type.ast.top'),'const.fromSexp.sexptop_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.ast.top'),'const.option.SOME_1'(s('type.ast.top',V_27t_27))) => s('type.simpleSexp.sexp','const.fromSexp.topsexp_1'(s('type.ast.top',V_27t_27))) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.fromSexp.SEXSTR_valid', axiom, ![V_27s_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.SEXSTR_1'(s('type.list.list'('type.string.char'),V_27s_27))))))).
fof('thm.fromSexp.listsexp_valid', axiom, ![V_27ls_27]: (p(s('bool','const.list.EVERY_2'(s('fun'('type.simpleSexp.sexp','bool'),'const.simpleSexp.valid_sexp_0'),s('type.list.list'('type.simpleSexp.sexp'),V_27ls_27)))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),'const.simpleSexp.valid_sexp_0'),s('type.simpleSexp.sexp','const.fromSexp.listsexp_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27ls_27)))))))).
fof('thm.fromSexp.idsexp_valid', axiom, ![V_27i_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.idsexp_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27i_27))))))).
fof('thm.fromSexp.tctorsexp_valid', axiom, ![V_27t_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.tctorsexp_1'(s('type.ast.tctor',V_27t_27))))))).
fof('thm.fromSexp.typesexp_valid', axiom, ![V_27t_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.typesexp_1'(s('type.ast.t',V_27t_27))))))).
fof('thm.fromSexp.litsexp_valid', axiom, ![V_27l_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.litsexp_1'(s('type.ast.lit',V_27l_27))))))).
fof('thm.fromSexp.optsexp_valid', axiom, ![V_27x_27]: (![V_27y_27]: (s('type.option.option'('type.simpleSexp.sexp'),V_27x_27) = s('type.option.option'('type.simpleSexp.sexp'),'const.option.SOME_1'(s('type.simpleSexp.sexp',V_27y_27))) => p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp',V_27y_27))))) => p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.optsexp_1'(s('type.option.option'('type.simpleSexp.sexp'),V_27x_27)))))))).
fof('thm.fromSexp.patsexp_valid', axiom, ![V_27p_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.patsexp_1'(s('type.ast.pat',V_27p_27))))))).
fof('thm.fromSexp.type_defsexp_valid', axiom, ![V_27t_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.type_defsexp_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27t_27))))))).
fof('thm.fromSexp.opsexp_valid', axiom, ![V_27op_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.opsexp_1'(s('type.ast.op',V_27op_27))))))).
fof('thm.fromSexp.lopsexp_valid', axiom, ![V_27l_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.lopsexp_1'(s('type.ast.lop',V_27l_27))))))).
fof('thm.fromSexp.expsexp_valid', axiom, ![V_27e_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.expsexp_1'(s('type.ast.exp',V_27e_27))))))).
fof('thm.fromSexp.decsexp_valid', axiom, ![V_27d_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.decsexp_1'(s('type.ast.dec',V_27d_27))))))).
fof('thm.fromSexp.specsexp_valid', axiom, ![V_27s_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.specsexp_1'(s('type.ast.spec',V_27s_27))))))).
fof('thm.fromSexp.topsexp_valid', axiom, ![V_27t_27]: p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.fromSexp.topsexp_1'(s('type.ast.top',V_27t_27))))))).
fof('ARITY_1_3_const.word_inst.pull_ops', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.list.list'('type.wordLang.exp'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.wordLang.exp'(V_27A_27)),'type.list.list'('type.wordLang.exp'(V_27A_27))),'happ'(s('fun'('type.list.list'('type.wordLang.exp'(V_27A_27)),'fun'('type.list.list'('type.wordLang.exp'(V_27A_27)),'type.list.list'('type.wordLang.exp'(V_27A_27)))),'const.word_inst.pull_ops_1'(s('type.asm.binop',VV0))),s('type.list.list'('type.wordLang.exp'(V_27A_27)),VV1))),s('type.list.list'('type.wordLang.exp'(V_27A_27)),VV2))) = s('type.list.list'('type.wordLang.exp'(V_27A_27)),'const.word_inst.pull_ops_3'(s('type.asm.binop',VV0),s('type.list.list'('type.wordLang.exp'(V_27A_27)),VV1),s('type.list.list'('type.wordLang.exp'(V_27A_27)),VV2)))).
