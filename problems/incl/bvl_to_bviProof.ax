fof('thm.bvl_to_bviProof.SNOC_REPLICATE', axiom, ![V_27A_27]: ![V_27n_27, V_27x_27]: s('type.list.list'(V_27A_27),'const.list.SNOC_2'(s(V_27A_27,V_27x_27),s('type.list.list'(V_27A_27),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27n_27),s(V_27A_27,V_27x_27))))) = s('type.list.list'(V_27A_27),'const.rich_list.REPLICATE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s(V_27A_27,V_27x_27)))).
fof('thm.bvl_to_bviProof.REVERSE_REPLICATE', axiom, ![V_27A_27]: ![V_27n_27, V_27x_27]: s('type.list.list'(V_27A_27),'const.list.REVERSE_1'(s('type.list.list'(V_27A_27),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27n_27),s(V_27A_27,V_27x_27))))) = s('type.list.list'(V_27A_27),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27n_27),s(V_27A_27,V_27x_27)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_3_prove_ltb', axiom, ![V_27a_27]: ((?[V_27b_27, V_27i_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27i_27))))) | (?[V_27b_27, V_27w_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))) | (?[V_27b_27, V_27tag_27, V_27vs_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))) | (?[V_27b_27, V_27c_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',V_27c_27))))) | ?[V_27b_27, V_27r_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27r_27))))))))) => (?[V_27b_27, V_27i_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27i_27))))) | (?[V_27b_27, V_27w_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))) | (?[V_27b_27, V_27r_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27r_27))))) | (?[V_27b_27, V_27c_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',V_27c_27))))) | ?[V_27b_27, V_27tag_27, V_27vs_27]: s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('fun'('type.num.num','type.num.num'),'type.bvlSem.v'),'const.pair.,_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))))))))).
fof('thm.bvl_to_bviProof.adjust_bv_ind', axiom, ![V_27P_27]: ((![V_27b_27, V_27i_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.bvlSem.v','bool')),V_27P_27),s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27i_27)))))) & (![V_27b_27, V_27w_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.bvlSem.v','bool')),V_27P_27),s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))) & (![V_27b_27, V_27r_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.bvlSem.v','bool')),V_27P_27),s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27r_27)))))) & (![V_27b_27, V_27c_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.bvlSem.v','bool')),V_27P_27),s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',V_27c_27)))))) & ![V_27b_27, V_27tag_27, V_27vs_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.bvlSem.v',V_27a_27),s('fun'('type.bvlSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.bvlSem.v'),V_27vs_27)))))) => p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.bvlSem.v','bool')),V_27P_27),s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.bvlSem.v',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.bvlSem.v','bool')),V_27P_27),s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.bvlSem.v','bool')),V_27P_27),s('fun'('type.num.num','type.num.num'),V_27v_27))),s('type.bvlSem.v',V_27v_7c49_7c_27)))))).
fof('ARITY_1_2_const.bvl_to_bviProof.adjust_bv', axiom, ![VV0, VV1]: s('type.bvlSem.v','happ'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),VV0))),s('type.bvlSem.v',VV1))) = s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.bvlSem.v',VV1)))).
fof('thm.bvl_to_bviProof.adjust_bv_def|split|0', axiom, ![V_27i_27, V_27b_27]: s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27i_27))))) = s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27i_27)))).
fof('thm.bvl_to_bviProof.adjust_bv_def|split|1', axiom, ![V_27w_27, V_27b_27]: s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))) = s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))).
fof('thm.bvl_to_bviProof.adjust_bv_def|split|2', axiom, ![V_27r_27, V_27b_27]: s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27r_27))))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.num.num',V_27r_27)))))).
fof('thm.bvl_to_bviProof.adjust_bv_def|split|3', axiom, ![V_27c_27, V_27b_27]: s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',V_27c_27))))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27c_27)))))))).
fof('thm.bvl_to_bviProof.adjust_bv_def|split|4', axiom, ![V_27vs_27, V_27tag_27, V_27b_27]: s('type.bvlSem.v','happ'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),'const.list.MAP_2'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.list.list'('type.bvlSem.v'),V_27vs_27)))))).
fof('thm.bvl_to_bviProof.adjust_bv_Unit', axiom, ![V_27x_27]: s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),V_27x_27),s('type.bvlSem.v','const.bvlSem.Unit_0'))) = s('type.bvlSem.v','const.bvlSem.Unit_0')).
fof('thm.bvl_to_bviProof.adjust_bv_Boolv', axiom, ![V_27x_27, V_27b_27]: s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),V_27x_27),s('type.bvlSem.v','const.bvlSem.Boolv_1'(s('bool',V_27b_27))))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s('bool',V_27b_27)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_|49||48|_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: ((?[V_27t_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.NIL_0'),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27))) | ?[V_27name_27, V_27arg__count_27, V_27body_27, V_27rest_27, V_27t_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'const.pair.,_2'(s('type.num.num',V_27name_27),s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27arg__count_27),s(V_27B_27,V_27body_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27rest_27))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27)))) => (?[V_27t_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.NIL_0'),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27))) | ?[V_27name_27, V_27arg__count_27, V_27body_27, V_27rest_27, V_27t_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'const.pair.,_2'(s('type.num.num',V_27name_27),s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27arg__count_27),s(V_27B_27,V_27body_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27rest_27))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27)))))).
fof('thm.bvl_to_bviProof.aux_code_installed_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27]: ((![V_27t_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.NIL_0'))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27)))) & ![V_27name_27, V_27arg__count_27, V_27body_27, V_27rest_27, V_27t_27]: (p(s('bool','happ'(s('fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27rest_27))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27)))) => p(s('bool','happ'(s('fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'const.pair.,_2'(s('type.num.num',V_27name_27),s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27arg__count_27),s(V_27B_27,V_27body_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27rest_27))))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27)))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27v_27))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27v_7c49_7c_27)))))).
fof('thm.bvl_to_bviProof.aux_code_installed_def|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27t_27]: s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.NIL_0'),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27))) = s('bool','T_0')).
fof('thm.bvl_to_bviProof.aux_code_installed_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27t_27, V_27rest_27, V_27name_27, V_27body_27, V_27arg__count_27]: (p(s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'const.pair.,_2'(s('type.num.num',V_27name_27),s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27arg__count_27),s(V_27B_27,V_27body_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27rest_27))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27)))) <=> (s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.sptree.lookup_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27name_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27))) = s('type.option.option'('type.pair.prod'(V_27A_27,V_27B_27)),'const.option.SOME_1'(s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27arg__count_27),s(V_27B_27,V_27body_27))))) & p(s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27rest_27),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27t_27))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_|49|4_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27code_27, V_27xs_27, V_27ys_27]: (p(s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27ys_27))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27code_27)))) => (p(s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27xs_27),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27code_27)))) & p(s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27ys_27),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),V_27code_27))))))).
fof('ARITY_0_2_const.bvl_to_bviProof.aux_code_installed', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'fun'('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'bool')),'const.bvl_to_bviProof.aux_code_installed_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),VV0))),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),VV1))) = s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),VV0),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),VV1)))).
fof('thm.bvl_to_bviProof.state_rel_def', axiom, ![V_27FFI_27]: ![V_27b_27, V_27s_27, V_27t_27]: (p(s('bool','const.bvl_to_bviProof.state_rel_3'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.bvlSem.state'(V_27FFI_27),V_27s_27),s('type.bviSem.state'(V_27FFI_27),V_27t_27)))) <=> (p(s('bool','const.pred_set.INJ_3'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27)))))))) & (![V_27k_27]: p(s('bool','const.option.option_CASE_3'(s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))),s('type.num.num',V_27k_27))),s('bool','T_0'),s('fun'('type.closSem.ref'('type.bvlSem.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.closSem.ref'('type.bvlSem.v'),'fun'('fun'('type.list.list'('type.bvlSem.v'),'bool'),'fun'('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'bool'),'bool'))),'const.closSem.ref_CASE_0'),s('fun'('type.list.list'('type.bvlSem.v'),'bool'),'_dst_x0x1_2'(s('fun'('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'bool'),'=_1'(s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.num.num',V_27k_27))))))),s('fun'('type.list.list'('type.bvlSem.v'),'type.option.option'('type.closSem.ref'('type.bvlSem.v'))),'_dst_x0x1_2'(s('fun'('type.closSem.ref'('type.bvlSem.v'),'type.option.option'('type.closSem.ref'('type.bvlSem.v'))),'const.option.SOME_0'),s('fun'('type.list.list'('type.bvlSem.v'),'type.closSem.ref'('type.bvlSem.v')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvlSem.v'),'type.closSem.ref'('type.bvlSem.v')),'const.closSem.ValueArray_0'),s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b_27))))))))))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'bool'),'_dst_x0x1_2'(s('fun'('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'bool'),'=_1'(s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('type.num.num',V_27k_27))))))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.option.option'('type.closSem.ref'('type.bvlSem.v'))),'_dst_x0x1_2'(s('fun'('type.closSem.ref'('type.bvlSem.v'),'type.option.option'('type.closSem.ref'('type.bvlSem.v'))),'const.option.SOME_0'),s('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.closSem.ref'('type.bvlSem.v')),'const.closSem.ByteArray_0')))))))))) & (s('type.ffi.ffi_state'(V_27FFI_27),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))) = s('type.ffi.ffi_state'(V_27FFI_27),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))) & (![V_27p_27]: (s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))) = s('type.option.option'('type.num.num'),'happ'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('type.num.num',V_27p_27))) => (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27p_27),s('fun'('type.num.num','bool'),'const.pred_set.IMAGE_2'(s('fun'('type.num.num','type.num.num'),V_27b_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))))))))) & ?[V_27z_27]: (s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))),s('type.num.num',V_27p_27))) = s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'happ'(s('fun'('type.closSem.ref'('type.bvlSem.v'),'type.option.option'('type.closSem.ref'('type.bvlSem.v'))),'const.option.SOME_0'),s('type.closSem.ref'('type.bvlSem.v'),'happ'(s('fun'('type.list.list'('type.bvlSem.v'),'type.closSem.ref'('type.bvlSem.v')),'const.closSem.ValueArray_0'),s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))))))))),s('type.list.list'('type.bvlSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.bvlSem.v'),'happ'(s('fun'('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.option.option'('type.bvlSem.v'),'type.bvlSem.v'),'const.combin.o_2'(s('fun'('type.option.option'('type.bvlSem.v'),'type.bvlSem.v'),'const.lib.the_1'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.option.option'('type.bvlSem.v'),'type.option.option'('type.bvlSem.v')),'const.option.OPTION_MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b_27))))))))),s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))),s('type.list.list'('type.bvlSem.v'),'const.rich_list.REPLICATE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27z_27),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))))))),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))))))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))))),s('type.num.num',V_27z_27))))))) & (s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.lookup_2'(s('type.num.num','const.bvl_to_bvi.AllocGlobal_location_0'),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.bvi.exp'),'type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp'))),'const.option.SOME_0'),s('type.pair.prod'('type.num.num','type.bvi.exp'),'const.bvl_to_bvi.AllocGlobal_code_0'))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.lookup_2'(s('type.num.num','const.bvl_to_bvi.CopyGlobals_location_0'),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.bvi.exp'),'type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp'))),'const.option.SOME_0'),s('type.pair.prod'('type.num.num','type.bvi.exp'),'const.bvl_to_bvi.CopyGlobals_code_0'))) & ![V_27name_27, V_27arity_27, V_27exp_27]: (s('type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.lookup_2'(s('type.num.num',V_27name_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp'))),'const.option.SOME_0'),s('type.pair.prod'('type.num.num','type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.,_1'(s('type.num.num',V_27arity_27))),s('type.bvl.exp',V_27exp_27))))) => ?[V_27n_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'bool'),'happ'(s('fun'('fun'('type.list.list'('type.bvi.exp'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'bool')),'fun'('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvi.exp'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvi.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'fun'('type.num.num','bool'))),'_dst_x000x100x010_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.bvi.exp'),'bool'),'_dst_x0x1_2'(s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'bool'),'=_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.lookup_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27name_27))))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))))))),s('fun'('type.list.list'('type.bvi.exp'),'type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp'))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.bvi.exp'),'type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp'))),'const.option.SOME_0'),s('fun'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.num.num','type.bvi.exp')),'_dst_x0x1_2'(s('fun'('type.bvi.exp','type.pair.prod'('type.num.num','type.bvi.exp')),'const.pair.,_1'(s('type.num.num',V_27arity_27))),s('fun'('type.list.list'('type.bvi.exp'),'type.bvi.exp'),'const.list.HD_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'fun'('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'bool')),'const.bvl_to_bviProof.aux_code_installed_0'),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_27))))),s('bool','const.bvlProps.bEvery_2'(s('fun'('type.bvl.exp','bool'),'const.bvlProps.GoodHandleLet_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27exp_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))))))),s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27exp_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))))))))))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_|49|7_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((?[V_27refs_27, V_27v2_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27v2_27))))) | (?[V_27refs_27, V_27v3_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v3_27))))) | (?[V_27refs_27, V_27tag_27, V_27vs_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))) | (?[V_27refs_27, V_27v6_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',V_27v6_27))))) | ?[V_27refs_27, V_27r_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27r_27))))))))) => (?[V_27refs_27, V_27r_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27r_27))))) | (?[V_27refs_27, V_27tag_27, V_27vs_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))) | (?[V_27refs_27, V_27v2_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27v2_27))))) | (?[V_27refs_27, V_27v3_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v3_27))))) | ?[V_27refs_27, V_27v6_27]: s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),V_27a_27) = s('type.pair.prod'('type.finite_map.fmap'('type.num.num',V_27A_27),'type.bvlSem.v'),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',V_27v6_27))))))))))).
fof('thm.bvl_to_bviProof.bv_ok_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27refs_27, V_27r_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num',V_27A_27),'fun'('type.bvlSem.v','bool')),V_27P_27),s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27r_27)))))) & (![V_27refs_27, V_27tag_27, V_27vs_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.bvlSem.v',V_27a_27),s('fun'('type.bvlSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.bvlSem.v'),V_27vs_27)))))) => p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num',V_27A_27),'fun'('type.bvlSem.v','bool')),V_27P_27),s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.bvlSem.v',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num',V_27A_27),'fun'('type.bvlSem.v','bool')),V_27P_27),s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))))) & (![V_27refs_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num',V_27A_27),'fun'('type.bvlSem.v','bool')),V_27P_27),s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27v2_27)))))) & (![V_27refs_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num',V_27A_27),'fun'('type.bvlSem.v','bool')),V_27P_27),s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v3_27)))))) & ![V_27refs_27, V_27v6_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num',V_27A_27),'fun'('type.bvlSem.v','bool')),V_27P_27),s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',V_27v6_27)))))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num',V_27A_27),'fun'('type.bvlSem.v','bool')),V_27P_27),s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27v_27))),s('type.bvlSem.v',V_27v_7c49_7c_27)))))).
fof('ARITY_1_2_const.bvl_to_bviProof.bv_ok', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),VV0))),s('type.bvlSem.v',VV1))) = s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),VV0),s('type.bvlSem.v',VV1)))).
fof('thm.bvl_to_bviProof.bv_ok_def|split|0', axiom, ![V_27A_27]: ![V_27refs_27, V_27r_27]: s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27r_27))))) = s('bool','const.bool.IN_2'(s('type.num.num',V_27r_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27)))))).
fof('thm.bvl_to_bviProof.bv_ok_def|split|1', axiom, ![V_27A_27]: ![V_27vs_27, V_27tag_27, V_27refs_27]: s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',V_27tag_27),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))) = s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.list.list'('type.bvlSem.v'),V_27vs_27)))).
fof('thm.bvl_to_bviProof.bv_ok_def|split|2', axiom, ![V_27A_27]: ![V_27v2_27, V_27refs_27]: s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27v2_27))))) = s('bool','T_0')).
fof('thm.bvl_to_bviProof.bv_ok_def|split|3', axiom, ![V_27A_27]: ![V_27v3_27, V_27refs_27]: s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v3_27))))) = s('bool','T_0')).
fof('thm.bvl_to_bviProof.bv_ok_def|split|4', axiom, ![V_27A_27]: ![V_27v6_27, V_27refs_27]: s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',V_27v6_27))))) = s('bool','T_0')).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_2|49|_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27refs_27, V_27x_27, V_27refs2_27]: ((p(s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v',V_27x_27)))) & p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num',V_27B_27),V_27refs2_27))))))) => p(s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27B_27),V_27refs2_27),s('type.bvlSem.v',V_27x_27)))))).
fof('thm.bvl_to_bviProof.bv_ok_Unit', axiom, ![V_27A_27]: ![V_27refs_27]: p(s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Unit_0'))))).
fof('thm.bvl_to_bviProof.bv_ok_Boolv', axiom, ![V_27A_27]: ![V_27refs_27, V_27b_27]: p(s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27),s('type.bvlSem.v','const.bvlSem.Boolv_1'(s('bool',V_27b_27))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_24_prove_ltb', axiom, ![V_27FFI_27]: ![V_27s5_27, V_27b2_27, V_27a_7c49_7c_27, V_27b3_27]: ((p(s('bool','const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s5_27))),s('type.bvlSem.v',V_27a_7c49_7c_27)))) & ![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27a_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s5_27)))))))) => s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27b2_27),s('type.num.num',V_27a_27))) = s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27b3_27),s('type.num.num',V_27a_27))))) => s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),V_27b2_27),s('type.bvlSem.v',V_27a_7c49_7c_27))) = s('type.bvlSem.v','const.bvl_to_bviProof.adjust_bv_2'(s('fun'('type.num.num','type.num.num'),V_27b3_27),s('type.bvlSem.v',V_27a_7c49_7c_27))))).
fof('thm.bvl_to_bviProof.state_ok_def', axiom, ![V_27FFI_27]: ![V_27s_27]: (p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27)))) <=> (p(s('bool','happ'(s('fun'('type.list.list'('type.option.option'('type.bvlSem.v')),'bool'),'const.list.EVERY_1'(s('fun'('type.option.option'('type.bvlSem.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.bvlSem.v'),'fun'('bool','fun'('fun'('type.bvlSem.v','bool'),'bool'))),'const.option.option_CASE_0'),s('bool','T_0'),s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))))))),s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27)))))) & ![V_27k_27]: p(s('bool','happ'(s('fun'('fun'('type.closSem.ref'('type.bvlSem.v'),'bool'),'bool'),'happ'(s('fun'('bool','fun'('fun'('type.closSem.ref'('type.bvlSem.v'),'bool'),'bool')),'happ'(s('fun'('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'fun'('bool','fun'('fun'('type.closSem.ref'('type.bvlSem.v'),'bool'),'bool'))),'const.option.option_CASE_0'),s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))),s('type.num.num',V_27k_27))))),s('bool','T_0'))),s('fun'('type.closSem.ref'('type.bvlSem.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.closSem.ref'('type.bvlSem.v'),'fun'('fun'('type.list.list'('type.bvlSem.v'),'bool'),'fun'('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'bool'),'bool'))),'const.closSem.ref_CASE_0'),s('fun'('type.list.list'('type.bvlSem.v'),'bool'),'const.list.EVERY_1'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_27))))))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'bool'),'_dst_x0_1'(s('bool','T_0'))))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_26_prove_ltb|split|0', axiom, ![V_27A_27]: ![V_27s_27, V_27n_27]: s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),'const.bvlSem.dec_clock_2'(s('type.num.num',V_27n_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))))) = s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),V_27s_27)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_26_prove_ltb|split|1', axiom, ![V_27A_27]: ![V_27s_27, V_27n_27]: s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),'const.bvlSem.dec_clock_2'(s('type.num.num',V_27n_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27s_27)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_27_prove_ltb', axiom, ![V_27A_27]: ![V_27xs_27, V_27t_27, V_27s_27, V_27res_27, V_27env_27, V_27as_27, V_27a_7c49_7c_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27),s('type.bvlSem.state'(V_27A_27),V_27t_27))) => ((p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27s_27))))),s('type.bvlSem.v',V_27a_7c49_7c_27)))) => p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27))))),s('type.bvlSem.v',V_27a_7c49_7c_27))))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27s_27))))),s('type.list.list'('type.bvlSem.v'),V_27as_27)))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27))))),s('type.list.list'('type.bvlSem.v'),V_27as_27)))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_28_prove_ltb', axiom, ![V_27A_27]: ![V_27refs_27, V_27v_27, V_27x_27]: ((s('type.option.option'('type.list.list'('type.bvlSem.v')),'const.bvlSem.v_to_list_1'(s('type.bvlSem.v',V_27v_27))) = s('type.option.option'('type.list.list'('type.bvlSem.v')),'const.option.SOME_1'(s('type.list.list'('type.bvlSem.v'),V_27x_27))) & p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.bvlSem.v',V_27v_27))))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27refs_27))),s('type.list.list'('type.bvlSem.v'),V_27x_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_29_prove_ltb', axiom, ![V_27A_27]: ![V_27t_27, V_27r_27, V_27q_27, V_27op_27, V_27a_27]: ((p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),V_27r_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27r_27))))),s('type.list.list'('type.bvlSem.v'),V_27a_27)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'type.bvlSem.v'),'const.bvlSem.do_app_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.bvlSem.v'),V_27a_27),s('type.bvlSem.state'(V_27A_27),V_27r_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.bvlSem.v',V_27q_27),s('type.bvlSem.state'(V_27A_27),V_27t_27))))))) => (p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27)))) & p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27))))),s('type.bvlSem.v',V_27q_27))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_3|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27t_27, V_27r_27, V_27q_27, V_27op_27, V_27env_27, V_27a_27]: ((p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),V_27r_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27r_27))))),s('type.list.list'('type.bvlSem.v'),V_27a_27)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'type.bvlSem.v'),'const.bvlSem.do_app_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.bvlSem.v'),V_27a_27),s('type.bvlSem.state'(V_27A_27),V_27r_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.bvlSem.v',V_27q_27),s('type.bvlSem.state'(V_27A_27),V_27t_27))))))) => (p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27)))) & (p(s('bool','happ'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27))))),s('type.bvlSem.v',V_27q_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27r_27))))),s('type.list.list'('type.bvlSem.v'),V_27env_27)))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27))))),s('type.list.list'('type.bvlSem.v'),V_27env_27))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_3|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27xs_27, V_27env_27, V_27s_27, V_27res_27, V_27t_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27),s('type.bvlSem.state'(V_27A_27),V_27t_27))) & (p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),V_27s_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.bvlSem.v'),'bool'),'const.list.EVERY_1'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27s_27))))))),s('type.list.list'('type.bvlSem.v'),V_27env_27)))))) => (p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27)))) & (p(s('bool','const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27),s('fun'('type.list.list'('type.bvlSem.v'),'bool'),'const.list.EVERY_1'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27))))))),s('fun'('type.semanticPrimitives.error_result'('type.bvlSem.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.semanticPrimitives.error_result'('type.bvlSem.v'),'fun'('fun'('type.bvlSem.v','bool'),'fun'('fun'('type.semanticPrimitives.abort','bool'),'bool'))),'const.semanticPrimitives.error_result_CASE_0'),s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27))))),s('fun'('type.semanticPrimitives.abort','bool'),'_dst_x0_1'(s('bool','T_0')))))))) & p(s('bool','happ'(s('fun'('type.list.list'('type.bvlSem.v'),'bool'),'const.list.EVERY_1'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27t_27))))))),s('type.list.list'('type.bvlSem.v'),V_27env_27)))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_32_prove_ltb', axiom, ![V_27A_27]: ![V_27l_27, V_27env_27, V_27vs_27, V_27b_27, V_27s_27]: ((p(s('bool','const.list.EVERY_2'(s('fun'('type.bvl.exp','bool'),'const.bvlProps.isVar_0'),s('type.list.list'('type.bvl.exp'),V_27l_27)))) & s('type.option.option'('type.list.list'('type.bvlSem.v')),'const.bvlProps.get_vars_2'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.bvl.exp','type.num.num'),'const.bvlProps.destVar_0'),s('type.list.list'('type.bvl.exp'),V_27l_27))),s('type.list.list'('type.bvlSem.v'),V_27env_27))) = s('type.option.option'('type.list.list'('type.bvlSem.v')),'const.option.SOME_1'(s('type.list.list'('type.bvlSem.v'),V_27vs_27)))) => s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.MAP_2'(s('fun'('type.bvl.exp','type.bvi.exp'),'const.combin.o_2'(s('fun'('type.num.num','type.bvi.exp'),'const.bvi.Var_0'),s('fun'('type.bvl.exp','type.num.num'),'const.bvlProps.destVar_0'))),s('type.list.list'('type.bvl.exp'),V_27l_27))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.MAP_2'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.list.list'('type.bvlSem.v'),V_27env_27))),s('type.bviSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.bvlSem.v'),'const.list.MAP_2'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b_27))),s('type.list.list'('type.bvlSem.v'),V_27vs_27))))),s('type.bviSem.state'(V_27A_27),V_27s_27))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_33_prove_ltb', axiom, ![V_27A_27]: ![V_27vs_27, V_27s_27, V_27env_27, V_27args_27]: ((p(s('bool','const.bvlProps.bVarBound_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvlSem.v'),V_27vs_27))),s('type.list.list'('type.bvl.exp'),V_27args_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.bvl.exp','bool'),'const.bvlProps.isVar_0'),s('type.list.list'('type.bvl.exp'),V_27args_27))))) => ?[V_27ts_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.MAP_2'(s('fun'('type.bvl.exp','type.bvi.exp'),'const.combin.o_2'(s('fun'('type.num.num','type.bvi.exp'),'const.bvi.Var_0'),s('fun'('type.bvl.exp','type.num.num'),'const.bvlProps.destVar_0'))),s('type.list.list'('type.bvl.exp'),V_27args_27))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.bvlSem.v'),V_27vs_27),s('type.list.list'('type.bvlSem.v'),V_27env_27))),s('type.bviSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.bvlSem.v'),V_27ts_27))),s('type.bviSem.state'(V_27A_27),V_27s_27))) & s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.MAP_2'(s('fun'('type.bvl.exp','type.bvi.exp'),'const.combin.o_2'(s('fun'('type.num.num','type.bvi.exp'),'const.bvi.Var_0'),s('fun'('type.bvl.exp','type.num.num'),'const.bvlProps.destVar_0'))),s('type.list.list'('type.bvl.exp'),V_27args_27))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27vs_27),s('type.bviSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.bvlSem.v'),V_27ts_27))),s('type.bviSem.state'(V_27A_27),V_27s_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_34_prove_ltb', axiom, ![V_27A_27]: ![V_27xs_27, V_27vs_27, V_27s_27, V_27env_27]: (p(s('bool','const.bvlProps.bVarBound_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvlSem.v'),V_27vs_27))),s('type.list.list'('type.bvl.exp'),V_27xs_27)))) => s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.bvlSem.v'),V_27vs_27),s('type.list.list'('type.bvlSem.v'),V_27env_27))),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27vs_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_35_prove_ltb', axiom, ![V_27A_27]: ![V_27p_7c49_7c_27, V_27p_27, V_27ls_27, V_27n_27, V_27l_7c49_7c_27, V_27s_27]: ((s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.lookup_2'(s('type.num.num','const.bvl_to_bvi.CopyGlobals_location_0'),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(V_27A_27),V_27s_27))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.bvi.exp'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvi.exp','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.bvi.exp'),'const.bvl_to_bvi.CopyGlobals_code_0'))))))) & (s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27A_27),V_27s_27))),s('type.num.num',V_27p_27))) = s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.bvlSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.bvlSem.v'),V_27ls_27))))) & (s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27A_27),V_27s_27))),s('type.num.num',V_27p_7c49_7c_27))) = s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.bvlSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.bvlSem.v'),V_27l_7c49_7c_27))))) & (~ (s('type.num.num',V_27p_27) = s('type.num.num',V_27p_7c49_7c_27)) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvlSem.v'),V_27ls_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvlSem.v'),V_27l_7c49_7c_27))))))))))) => ?[V_27c_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.bvi.exp'),'const.bvl_to_bvi.CopyGlobals_code_0'))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27p_7c49_7c_27))),s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',V_27p_27))),s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',V_27n_27))))),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))))))),s('type.bviSem.state'(V_27A_27),'const.bviProps.inc_clock_2'(s('type.num.num',V_27c_27),s('type.bviSem.state'(V_27A_27),V_27s_27))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Unit_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))))),s('type.bviSem.state'(V_27A_27),'const.bviSem.state_refs_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27A_27),V_27s_27))),s('type.pair.prod'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.pair.,_2'(s('type.num.num',V_27p_7c49_7c_27),s('type.closSem.ref'('type.bvlSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.bvlSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.bvlSem.v'),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.list.list'('type.bvlSem.v'),V_27ls_27))),s('type.list.list'('type.bvlSem.v'),'const.list.DROP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.list.list'('type.bvlSem.v'),V_27l_7c49_7c_27))))))))))))),s('type.bviSem.state'(V_27A_27),V_27s_27))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_36_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27p_27, V_27n_27, V_27ls_27]: ((s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(V_27A_27),V_27s_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27p_27))) & (s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27A_27),V_27s_27))),s('type.num.num',V_27p_27))) = s('type.option.option'('type.closSem.ref'('type.bvlSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.bvlSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))))))),s('type.list.list'('type.bvlSem.v'),V_27ls_27))))))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvlSem.v'),V_27ls_27)))))) & s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.lookup_2'(s('type.num.num','const.bvl_to_bvi.CopyGlobals_location_0'),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(V_27A_27),V_27s_27))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.bvi.exp'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvi.exp','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.bvi.exp'),'const.bvl_to_bvi.CopyGlobals_code_0')))))))))) => ?[V_27p_7c49_7c_27, V_27c_27]: ((~ (s('type.num.num',V_27p_7c49_7c_27) = s('type.num.num',V_27p_27)) => ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27p_7c49_7c_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27A_27),V_27s_27)))))))))) & s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.bvi.exp'),'const.bvl_to_bvi.AllocGlobal_code_0'))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(V_27A_27),'const.bviProps.inc_clock_2'(s('type.num.num',V_27c_27),s('type.bviSem.state'(V_27A_27),V_27s_27))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Unit_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))))),s('type.bviSem.state'(V_27A_27),'const.bviSem.state_global_fupd_2'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.K_1'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27p_7c49_7c_27))))),s('type.bviSem.state'(V_27A_27),'const.bviSem.state_refs_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(V_27A_27),V_27s_27))),s('type.pair.prod'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.pair.,_2'(s('type.num.num',V_27p_27),s('type.closSem.ref'('type.bvlSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.list.list'('type.bvlSem.v'),V_27ls_27))))))))),s('type.pair.prod'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.pair.,_2'(s('type.num.num',V_27p_7c49_7c_27),s('type.closSem.ref'('type.bvlSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvlSem.v'),V_27ls_27))))),s('type.list.list'('type.bvlSem.v'),V_27ls_27),s('type.list.list'('type.bvlSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.bvlSem.v'),V_27ls_27),s('type.list.list'('type.bvlSem.v'),'const.rich_list.REPLICATE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvlSem.v'),V_27ls_27))))),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))))))))))))))),s('type.bviSem.state'(V_27A_27),V_27s_27)))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_37_prove_ltb', axiom, ![V_27l_27, V_27n_27]: (p(s('bool','const.list.EVERY_2'(s('fun'('type.bvl.exp','bool'),'const.bvlProps.isVar_0'),s('type.list.list'('type.bvl.exp'),V_27l_27)))) => s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27l_27))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.MAP_2'(s('fun'('type.bvl.exp','type.bvi.exp'),'const.combin.o_2'(s('fun'('type.num.num','type.bvi.exp'),'const.bvi.Var_0'),s('fun'('type.bvl.exp','type.num.num'),'const.bvlProps.destVar_0'))),s('type.list.list'('type.bvl.exp'),V_27l_27))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'const.list.NIL_0'),s('type.num.num',V_27n_27))))))).
fof('ARITY_0_1_const.bvl_to_bvi.compile_int', axiom, ![VV0]: s('type.bvi.exp','happ'(s('fun'('type.integer.int','type.bvi.exp'),'const.bvl_to_bvi.compile_int_0'),s('type.integer.int',VV0))) = s('type.bvi.exp','const.bvl_to_bvi.compile_int_1'(s('type.integer.int',VV0)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_38_prove_ltb', axiom, ![V_27A_27]: ![V_27i_27, V_27env_27, V_27s_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp','const.bvl_to_bvi.compile_int_1'(s('type.integer.int',V_27i_27))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bviSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.bvlSem.v'),'const.list.CONS_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',V_27i_27))),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))))),s('type.bviSem.state'(V_27A_27),V_27s_27)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_39_prove_ltb', axiom, ![V_27FFI_27]: ![V_27n_7c39_7c_27, V_27xs_27, V_27n_27, V_27vs_27, V_27t_27, V_27s_27, V_27env_27]: ((p(s('bool','const.bvlProps.bVarBound_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvlSem.v'),V_27vs_27))),s('type.list.list'('type.bvl.exp'),V_27xs_27)))) & p(s('bool','const.bvlProps.bEvery_2'(s('fun'('type.bvl.exp','bool'),'const.bvlProps.GoodHandleLet_0'),s('type.list.list'('type.bvl.exp'),V_27xs_27))))) => s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27xs_27))))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.bvlSem.v'),V_27vs_27),s('type.list.list'('type.bvlSem.v'),V_27env_27))),s('type.bviSem.state'(V_27FFI_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27xs_27))))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27vs_27),s('type.bviSem.state'(V_27FFI_27),V_27s_27))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_4|48|_prove_ltb', axiom, ![V_27f_27, V_27x_27]: s('type.option.option'('type.list.list'('type.bvlSem.v')),'const.bvlSem.v_to_list_1'(s('type.bvlSem.v','happ'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('type.bvlSem.v',V_27x_27))))) = s('type.option.option'('type.list.list'('type.bvlSem.v')),'const.option.OPTION_MAP_2'(s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))))),s('type.option.option'('type.list.list'('type.bvlSem.v')),'const.bvlSem.v_to_list_1'(s('type.bvlSem.v',V_27x_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_4|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27t2_27, V_27s5_27, V_27r_27, V_27q_27, V_27op_27, V_27b2_27, V_27a_27]: ((p(s('bool','const.bvl_to_bviProof.state_rel_3'(s('fun'('type.num.num','type.num.num'),V_27b2_27),s('type.bvlSem.state'(V_27A_27),V_27s5_27),s('type.bviSem.state'(V_27A_27),V_27t2_27)))) & (![V_27i_27]: ~ (s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27i_27)))) & (~ (s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.Ref_0')) & (~ (s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.RefByte_0')) & (~ (s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.RefArray_0')) & (![V_27n_27]: ~ (s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27n_27)))) & (![V_27n_27]: ~ (s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27)))) & (~ (s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.AllocGlobal_0')) & (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'type.bvlSem.v'),'const.bvlSem.do_app_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.bvlSem.v'),'const.list.REVERSE_1'(s('type.list.list'('type.bvlSem.v'),V_27a_27))),s('type.bvlSem.state'(V_27A_27),V_27s5_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.bvlSem.v','type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.bvlSem.v',V_27q_27),s('type.bvlSem.state'(V_27A_27),V_27r_27))))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27A_27),V_27s5_27))))),s('type.list.list'('type.bvlSem.v'),'const.list.REVERSE_1'(s('type.list.list'('type.bvlSem.v'),V_27a_27))))))))))))))) => ?[V_27t3_27]: (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bviSem.state'(V_27A_27)),'type.bvlSem.v'),'const.bviSem.do_app_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.bvlSem.v'),'const.list.MAP_2'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))),s('type.list.list'('type.bvlSem.v'),'const.list.REVERSE_1'(s('type.list.list'('type.bvlSem.v'),V_27a_27))))),s('type.bviSem.state'(V_27A_27),V_27t2_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bviSem.state'(V_27A_27)),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.bvlSem.v','type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.bvlSem.v','happ'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))),s('type.bvlSem.v',V_27q_27))),s('type.bviSem.state'(V_27A_27),V_27t3_27))))) & p(s('bool','const.bvl_to_bviProof.state_rel_3'(s('fun'('type.num.num','type.num.num'),V_27b2_27),s('type.bvlSem.state'(V_27A_27),V_27r_27),s('type.bviSem.state'(V_27A_27),V_27t3_27))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_42_prove_ltb', axiom, ![V_27FFI_27]: ![V_27xs_27, V_27env_27, V_27s_7c49_7c_27, V_27n_27, V_27res_27, V_27s2_27, V_27t_7c49_7c_27, V_27n2_27, V_27ys_27, V_27aux_27, V_27b_7c49_7c_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27FFI_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bvlSem.state'(V_27FFI_27),V_27s_7c49_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27),s('type.bvlSem.state'(V_27FFI_27),V_27s2_27))) & (~ (s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27) = s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))) & (s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27xs_27))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27ys_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_27),s('type.num.num',V_27n2_27))))) & (p(s('bool','const.bvl_to_bviProof.state_rel_3'(s('fun'('type.num.num','type.num.num'),V_27b_7c49_7c_27),s('type.bvlSem.state'(V_27FFI_27),V_27s_7c49_7c_27),s('type.bviSem.state'(V_27FFI_27),V_27t_7c49_7c_27)))) & (p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_7c49_7c_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.bvlSem.v','bool'),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_7c49_7c_27))))),s('type.list.list'('type.bvlSem.v'),V_27env_27)))) & (p(s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_7c49_7c_27)))))) & (p(s('bool','const.bvlProps.bEvery_2'(s('fun'('type.bvl.exp','bool'),'const.bvlProps.GoodHandleLet_0'),s('type.list.list'('type.bvl.exp'),V_27xs_27)))) & p(s('bool','const.option.IS_SOME_1'(s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(V_27FFI_27),V_27t_7c49_7c_27)))))))))))))) => ?[V_27t2_27, V_27b2_27, V_27c_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27ys_27),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'happ'(s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))))),s('type.list.list'('type.bvlSem.v'),V_27env_27))),s('type.bviSem.state'(V_27FFI_27),'const.bviProps.inc_clock_2'(s('type.num.num',V_27c_27),s('type.bviSem.state'(V_27FFI_27),V_27t_7c49_7c_27))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.evalProps.map_result_3'(s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))))),s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))),s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27))),s('type.bviSem.state'(V_27FFI_27),V_27t2_27))) & (p(s('bool','const.bvl_to_bviProof.state_rel_3'(s('fun'('type.num.num','type.num.num'),V_27b2_27),s('type.bvlSem.state'(V_27FFI_27),V_27s2_27),s('type.bviSem.state'(V_27FFI_27),V_27t2_27)))) & (s('type.list.list'('type.bvlSem.v'),'happ'(s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b_7c49_7c_27))))),s('type.list.list'('type.bvlSem.v'),V_27env_27))) = s('type.list.list'('type.bvlSem.v'),'happ'(s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))))),s('type.list.list'('type.bvlSem.v'),V_27env_27))) & ![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27a_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(V_27FFI_27),V_27s_7c49_7c_27)))))))) => s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27b_7c49_7c_27),s('type.num.num',V_27a_27))) = s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27b2_27),s('type.num.num',V_27a_27))))))))).
fof('thm.bvl_to_bviProof.MAP_FST_optimise', axiom, ![V_27A_27]: ![V_27prog_27]: s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.bvl.exp')),V_27A_27),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.bvl.exp'))),'const.bvl_to_bvi.optimise_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))))) = s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.bvl.exp')),V_27A_27),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27)))).
fof('thm.bvl_to_bviProof.ALOOKUP_optimise_lookup', axiom, ![V_27n_27, V_27ls_27, V_27b_27, V_27a_27]: (s('type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.lookup_2'(s('type.num.num',V_27n_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27ls_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num',V_27a_27),s('type.bvl.exp',V_27b_27))))) => s('type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.bvl_to_bvi.optimise_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.sptree.toAList_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27ls_27))))),s('type.num.num',V_27n_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num',V_27a_27),s('type.bvl.exp','const.list.HD_1'(s('type.list.list'('type.bvl.exp'),'const.bvl_handle.compile_2'(s('type.num.num',V_27a_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl_const.compile_exp_1'(s('type.bvl.exp',V_27b_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))))))).
fof('thm.bvl_to_bviProof.optimise_evaluate', axiom, ![V_27A_27]: ![V_27xs_27, V_27env_27, V_27s_27, V_27res_27, V_27s_7c39_7c_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27),s('type.bvlSem.state'(V_27A_27),V_27s_7c39_7c_27))) & ~ (s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27) = s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) => s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bvlSem.state'(V_27A_27),'const.bvlSem.state_code_fupd_2'(s('fun'('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp'))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.bvl_to_bvi.optimise_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.sptree.toAList_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(V_27A_27),V_27s_27))))))))))),s('type.bvlSem.state'(V_27A_27),V_27s_27))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27),s('type.bvlSem.state'(V_27A_27),'const.bvlSem.state_code_fupd_2'(s('fun'('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp'))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.bvl_to_bvi.optimise_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.sptree.toAList_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(V_27A_27),V_27s_27))))))))))),s('type.bvlSem.state'(V_27A_27),V_27s_7c39_7c_27))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_47_prove_ltb', axiom, ![V_27p_27]: s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.bvl_to_bvi.optimise_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27p_27))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.map_2'(s('fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'_dst_x00x10x11_3'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'),s('fun'('type.num.num','fun'('type.bvl.exp','type.list.list'('type.bvl.exp'))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.bvl_handle.compile_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.bvl.exp','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.bvl.exp','type.bvl.exp'),'const.bvl_const.compile_exp_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27p_27)))))).
fof('thm.bvl_to_bviProof.optimise_semantics', axiom, ![V_27A_27]: ![V_27start_27, V_27prog_27, V_27ffi_7c48_7c_27]: (~ (s('type.ffi.behaviour','const.bvlSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))),s('type.num.num',V_27start_27))) = s('type.ffi.behaviour','const.ffi.Fail_0')) => s('type.ffi.behaviour','const.bvlSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.bvl_to_bvi.optimise_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))))),s('type.num.num',V_27start_27))) = s('type.ffi.behaviour','const.bvlSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))),s('type.num.num',V_27start_27))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_49_prove_ltb', axiom, ![V_27r_27, V_27n_27]: ?[V_27c_7c49_7c_27, V_27aux_7c49_7c_27, V_27n_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27r_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c_7c49_7c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_7c49_7c_27),s('type.num.num',V_27n_7c49_7c_27)))))).
fof('thm.bvl_to_bviProof.compile_single_evaluate', axiom, ![V_27A_27]: ![V_27t_7c49_7c_27, V_27start_27, V_27s2_27, V_27s_7c49_7c_27, V_27res_27, V_27b_7c49_7c_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27start_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bvlSem.state'(V_27A_27),V_27s_7c49_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27),s('type.bvlSem.state'(V_27A_27),V_27s2_27))) & (p(s('bool','const.bvl_to_bviProof.state_rel_3'(s('fun'('type.num.num','type.num.num'),V_27b_7c49_7c_27),s('type.bvlSem.state'(V_27A_27),V_27s_7c49_7c_27),s('type.bviSem.state'(V_27A_27),V_27t_7c49_7c_27)))) & (p(s('bool','const.option.IS_SOME_1'(s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(V_27A_27),V_27t_7c49_7c_27)))))) & (p(s('bool','const.bvl_to_bviProof.state_ok_1'(s('type.bvlSem.state'(V_27A_27),V_27s_7c49_7c_27)))) & ~ (s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27) = s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))))) => ?[V_27ck_27, V_27b2_27, V_27t2_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp','const.bvi.Call_4'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27start_27))))))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'),s('type.option.option'('type.bvi.exp'),'const.option.NONE_0'))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(V_27A_27),'const.bviProps.inc_clock_2'(s('type.num.num',V_27ck_27),s('type.bviSem.state'(V_27A_27),V_27t_7c49_7c_27))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.evalProps.map_result_3'(s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))))),s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))),s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27res_27))),s('type.bviSem.state'(V_27A_27),V_27t2_27))) & p(s('bool','const.bvl_to_bviProof.state_rel_3'(s('fun'('type.num.num','type.num.num'),V_27b2_27),s('type.bvlSem.state'(V_27A_27),V_27s2_27),s('type.bviSem.state'(V_27A_27),V_27t2_27))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_52_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27env_27, V_27n_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27n_27),s('type.bvi.exp','const.bvi.Op_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),V_27env_27),s('type.bviSem.state'(V_27A_27),V_27s_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.bvlSem.v'),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27n_27),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.bviSem.state'(V_27A_27),V_27s_27)))).
fof('thm.bvl_to_bviProof.bvi_stubs_evaluate', axiom, ![V_27A_27]: ![V_27kk_27, V_27start_27, V_27ffi_7c48_7c_27, V_27code_27, V_27k_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27k_27)))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'),s('type.num.num',V_27start_27))))) => p(s('bool','happ'(s('fun'('type.bviSem.state'(V_27A_27),'bool'),'const.bool.LET_1'(s('fun'('type.bviSem.state'(V_27A_27),'bool'),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'bool'),'=_1'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.bviSem.evaluate_0'),s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)))),'happ'(s('fun'('type.list.list'('type.bvi.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))))),'const.pair.,_0'),s('type.list.list'('type.bvi.exp'),'happ'(s('fun'('type.list.list'('type.bvi.exp'),'type.list.list'('type.bvi.exp')),'happ'(s('fun'('type.bvi.exp','fun'('type.list.list'('type.bvi.exp'),'type.list.list'('type.bvi.exp'))),'const.list.CONS_0'),s('type.bvi.exp','const.bvi.Call_4'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.bvl_to_bvi.InitGlobals_location_0'))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'),s('type.option.option'('type.bvi.exp'),'const.option.NONE_0'))))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'happ'(s('fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'happ'(s('fun'('type.list.list'('type.bvlSem.v'),'fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)))),'const.pair.,_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))),s('type.bviSem.state'(V_27A_27),'const.bviSem.initial_state_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'const.bvl_to_bvi.bvi_stubs_2'(s('type.num.num',V_27start_27),s('type.num.num',V_27kk_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.bool.LET_1'(s('fun'('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.UNCURRY_1'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)))),'_dst_x0x1_2'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)))),'const.pair.,_0'),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'_dst_x1x1x1_3'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'fun'('fun'('type.list.list'('type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'fun'('fun'('type.semanticPrimitives.error_result'('type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')))),'const.semanticPrimitives.result_CASE_0'),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'fun'('type.list.list'('type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'))),'_dst_x0_0'),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'fun'('type.semanticPrimitives.error_result'('type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'))),'_dst_x01x00x10_3'(s('fun'('type.semanticPrimitives.error_result'('type.bvlSem.v'),'fun'('fun'('type.bvlSem.v','type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'fun'('fun'('type.semanticPrimitives.abort','type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')))),'const.semanticPrimitives.error_result_CASE_0'),s('fun'('type.bvlSem.v','type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'const.semanticPrimitives.Rval_0'),s('fun'('type.bvlSem.v','type.list.list'('type.bvlSem.v')),'_dst_x1x0_2'(s('fun'('type.bvlSem.v','fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v'))),'const.list.CONS_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))))),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'fun'('type.semanticPrimitives.abort','type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'))),'_dst_x0_0'))))))))))),s('fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.bviSem.evaluate_0'),s('fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)))),'happ'(s('fun'('type.list.list'('type.bvi.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))))),'const.pair.,_0'),s('type.list.list'('type.bvi.exp'),'happ'(s('fun'('type.list.list'('type.bvi.exp'),'type.list.list'('type.bvi.exp')),'happ'(s('fun'('type.bvi.exp','fun'('type.list.list'('type.bvi.exp'),'type.list.list'('type.bvi.exp'))),'const.list.CONS_0'),s('type.bvi.exp','const.bvi.Call_4'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27start_27))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'),s('type.option.option'('type.bvi.exp'),'const.option.NONE_0'))))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))))),s('fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'happ'(s('fun'('type.list.list'('type.bvlSem.v'),'fun'('type.bviSem.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)))),'const.pair.,_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))))))))))))),s('type.bviSem.state'(V_27A_27),'const.bviSem.state_global_fupd_2'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.K_1'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.num.|48|_0'))))),s('type.bviSem.state'(V_27A_27),'const.bviSem.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'(V_27A_27),'type.ffi.ffi_state'(V_27A_27)),'const.combin.K_1'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27))),s('type.bviSem.state'(V_27A_27),'const.bviSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27k_27))),s('type.bviSem.state'(V_27A_27),'const.bviSem.state_code_fupd_2'(s('fun'('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp'))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'const.bvl_to_bvi.bvi_stubs_2'(s('type.num.num',V_27start_27),s('type.num.num',V_27kk_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27))))))),s('type.bviSem.state'(V_27A_27),'const.bviSem.state_refs_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.finite_map.FEMPTY_0'),s('type.pair.prod'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'happ'(s('fun'('type.closSem.ref'('type.bvlSem.v'),'type.pair.prod'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),'happ'(s('fun'('type.num.num','fun'('type.closSem.ref'('type.bvlSem.v'),'type.pair.prod'('type.num.num','type.closSem.ref'('type.bvlSem.v')))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.closSem.ref'('type.bvlSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.bvlSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.bvlSem.v'),'happ'(s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'happ'(s('fun'('type.bvlSem.v','fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v'))),'const.list.CONS_0'),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.bvlSem.v'),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27kk_27),s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))))))))))),s('type.bviSem.state'(V_27A_27),'const.bool.ARB_0')))))))))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_54_prove_ltb', axiom, ![V_27n_27, V_27es_27]: ?[V_27c_7c49_7c_27, V_27aux_7c49_7c_27, V_27n_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27es_27))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c_7c49_7c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_7c49_7c_27),s('type.num.num',V_27n_7c49_7c_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_57_prove_ltb', axiom, ![V_27x_7c49_7c_27]: ?[V_27args_27, V_27x_7c48_7c_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl_to_bvi.destLet_1'(s('type.bvl.exp',V_27x_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27args_27),s('type.bvl.exp',V_27x_7c48_7c_27)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_58_prove_ltb', axiom, ![V_27n_27, V_27args_27]: ?[V_27c_7c49_7c_27, V_27aux_7c49_7c_27, V_27n_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27args_27))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c_7c49_7c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_7c49_7c_27),s('type.num.num',V_27n_7c49_7c_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_59_prove_ltb', axiom, ![V_27x_7c48_7c_27, V_27n_7c49_7c_7c39_7c_27]: ?[V_27c2_27, V_27aux2_27, V_27n2_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_7c49_7c_7c39_7c_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27x_7c48_7c_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c2_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux2_27),s('type.num.num',V_27n2_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_6|48|_prove_ltb', axiom, ![V_27x2_27, V_27n2_27]: ?[V_27c3_27, V_27aux3_27, V_27n3_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n2_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27x2_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c3_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux3_27),s('type.num.num',V_27n3_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_72_prove_ltb', axiom, ![V_27x_7c49_7c_27, V_27n_27]: ?[V_27c_7c49_7c_27, V_27aux_7c49_7c_27, V_27n_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27x_7c49_7c_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c_7c49_7c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_7c49_7c_27),s('type.num.num',V_27n_7c49_7c_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_79_prove_ltb', axiom, ![V_27x2_27, V_27n_7c49_7c_7c39_7c_27]: ?[V_27c2_27, V_27aux2_27, V_27n2_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_7c49_7c_7c39_7c_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27x2_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c2_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux2_27),s('type.num.num',V_27n2_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_86_prove_ltb', axiom, ![V_27x3_27, V_27n2_27]: ?[V_27c3_27, V_27aux3_27, V_27n3_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n2_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27x3_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c3_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux3_27),s('type.num.num',V_27n3_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_93_prove_ltb', axiom, ![V_27x_27, V_27n_27]: ?[V_27c_7c49_7c_27, V_27aux_7c49_7c_27, V_27n_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27x_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c_7c49_7c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_7c49_7c_27),s('type.num.num',V_27n_7c49_7c_27)))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_94_prove_ltb', axiom, ![V_27y_27, V_27xs_27, V_27n_7c49_7c_7c39_7c_27]: ?[V_27c2_27, V_27aux2_27, V_27n2_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_7c49_7c_7c39_7c_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27y_27),s('type.list.list'('type.bvl.exp'),V_27xs_27))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c2_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux2_27),s('type.num.num',V_27n2_27)))))).
fof('thm.bvl_to_bviProof.compile_exps_aux_sorted', axiom, ![V_27n_27, V_27es_27, V_27c_27, V_27aux_27, V_27n_7c49_7c_27]: (s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),V_27es_27))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_27),s('type.num.num',V_27n_7c49_7c_27))))) => (p(s('bool','const.sorting.SORTED_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_27)))))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.misc.between_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27n_7c49_7c_27))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27n_7c49_7c_27)))))))).
fof('thm.bvl_to_bviProof.aux_code_installed_sublist', axiom, ![V_27A_27,V_27B_27]: ![V_27aux_27, V_27ls_27]: ((p(s('bool','const.rich_list.IS_SUBLIST_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27ls_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'happ'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'fun'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'_dst_x0x1_2'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))))),'_dst_x000x100x011_3'(s('fun'('type.num.num','fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.bvl_to_bvi.num_stubs_0'))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'(V_27A_27,V_27B_27))),'const.pair.,_0'))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27aux_27)))))) & p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27ls_27))))))) => p(s('bool','const.bvl_to_bviProof.aux_code_installed_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27aux_27),s('type.sptree.spt'('type.pair.prod'(V_27A_27,V_27B_27)),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27ls_27)))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_|49||48||49|_prove_ltb', axiom, ![V_27p2_27, V_27p_7c49_7c_27, V_27p_7c48_7c_27, V_27n_27]: ?[V_27code_7c49_7c_27, V_27n_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.bvl_to_bvi.compile_single_2'(s('type.num.num',V_27n_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.,_2'(s('type.num.num',V_27p_7c48_7c_27),s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num',V_27p_7c49_7c_27),s('type.bvl.exp',V_27p2_27))))))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_7c49_7c_27),s('type.num.num',V_27n_7c49_7c_27)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_|49||48|2_prove_ltb', axiom, ![V_27prog_27, V_27n_7c49_7c_27]: ?[V_27code2_27, V_27n2_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.bvl_to_bvi.compile_list_2'(s('type.num.num',V_27n_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code2_27),s('type.num.num',V_27n2_27)))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_|49||48|3_prove_ltb', axiom, ![V_27p2_27, V_27n_27]: ?[V_27c_27, V_27aux_27, V_27n_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27p2_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),V_27c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_27),s('type.num.num',V_27n_7c49_7c_27)))))).
fof('thm.bvl_to_bviProof.compile_list_distinct_locs', axiom, ![V_27n_27, V_27prog_27, V_27code_27, V_27n_7c39_7c_27]: ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27)))))) & s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.bvl_to_bvi.compile_list_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27),s('type.num.num',V_27n_7c39_7c_27)))) => (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27)))))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.misc.between_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27))))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_7c39_7c_27))))))),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.arithmetic.ODD_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.bvl_to_bvi.num_stubs_0'))))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27)))))))) & (s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.arithmetic.EVEN_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.bvl_to_bvi.num_stubs_0'))))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27))))) = s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.<=_1'(s('type.num.num','const.bvl_to_bvi.num_stubs_0'))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27)))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'const.arithmetic.<=_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27n_7c39_7c_27)))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_|49||48|8_prove_ltb', axiom, ![V_27n_27, V_27prog_27, V_27code_27, V_27n_7c39_7c_27, V_27name_27, V_27arity_27, V_27exp_27]: ((s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.bvl_to_bvi.compile_list_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'happ'(s('fun'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'))),'const.pair.,_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27))),s('type.num.num',V_27n_7c39_7c_27))) & s('type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27),s('type.num.num',V_27name_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('type.num.num',V_27arity_27))),s('type.bvl.exp',V_27exp_27)))))) => ?[V_27n_7c48_7c_27, V_27c_27, V_27aux_27, V_27n_7c49_7c_27]: (s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',V_27n_7c48_7c_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27exp_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'))),'happ'(s('fun'('type.list.list'('type.bvi.exp'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')))),'const.pair.,_0'),s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',V_27c_27),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'happ'(s('fun'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'))),'const.pair.,_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_27))),s('type.num.num',V_27n_7c49_7c_27))))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27name_27))))),s('type.num.num','const.bvl_to_bvi.num_stubs_0'))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.bvi.exp'),'happ'(s('fun'('type.bvi.exp','type.pair.prod'('type.num.num','type.bvi.exp')),'happ'(s('fun'('type.num.num','fun'('type.bvi.exp','type.pair.prod'('type.num.num','type.bvi.exp'))),'const.pair.,_0'),s('type.num.num',V_27arity_27))),s('type.bvi.exp',V_27c_27))))) & p(s('bool','const.rich_list.IS_SUBLIST_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'happ'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvi.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')))),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvi.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')))),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.bvi.exp','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')))),'fun'('type.pair.prod'('type.num.num','type.bvi.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvi.exp','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))))),'_dst_x000x100x011_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvi.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp')))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.bvl_to_bvi.num_stubs_0'))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','fun'('type.bvi.exp','type.pair.prod'('type.num.num','type.bvi.exp'))),'const.pair.,_0'))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27aux_27)))))))))).
fof('thm.bvl_to_bviProof.bvl_to_bviProof_|49||48|9_prove_ltb', axiom, ![V_27prog_27, V_27n_27]: ?[V_27code_27, V_27n_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.bvl_to_bvi.compile_list_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27code_27),s('type.num.num',V_27n_7c49_7c_27)))).
fof('thm.bvl_to_bviProof.compile_prog_evaluate', axiom, ![V_27A_27]: ![V_27start_7c39_7c_27, V_27start_27, V_27s_27, V_27r_27, V_27prog_7c39_7c_27, V_27prog_27, V_27n_7c39_7c_27, V_27n_27, V_27k_27, V_27ffi_7c48_7c_27]: ((s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_prog_3'(s('type.num.num',V_27start_27),s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.num.num',V_27start_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27prog_7c39_7c_27),s('type.num.num',V_27n_7c39_7c_27))))) & (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.bvlSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27start_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bvlSem.state'(V_27A_27),'const.bvlSem.initial_state_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))),s('type.num.num',V_27k_27))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bvlSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27r_27),s('type.bvlSem.state'(V_27A_27),V_27s_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27k_27)))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.num.num'),'const.pair.FST_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27)))))) & (p(s('bool','const.bvlProps.bEvery_2'(s('fun'('type.bvl.exp','bool'),'const.bvlProps.GoodHandleLet_0'),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.bvl.exp')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.bvl.exp'),'const.combin.o_2'(s('fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.bvl.exp'),'const.pair.SND_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.SND_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27)))))) & ~ (s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27r_27) = s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))))))) => ?[V_27ck_27, V_27b2_27, V_27s2_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'happ'(s('fun'('type.list.list'('type.bvi.exp'),'type.list.list'('type.bvi.exp')),'happ'(s('fun'('type.bvi.exp','fun'('type.list.list'('type.bvi.exp'),'type.list.list'('type.bvi.exp'))),'const.list.CONS_0'),s('type.bvi.exp','const.bvi.Call_4'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27start_7c39_7c_27))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'),s('type.option.option'('type.bvi.exp'),'const.option.NONE_0'))))),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(V_27A_27),'const.bviSem.initial_state_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27prog_7c39_7c_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27ck_27))))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.evalProps.map_result_3'(s('fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v')),'const.list.MAP_1'(s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))))),s('fun'('type.bvlSem.v','type.bvlSem.v'),'const.bvl_to_bviProof.adjust_bv_1'(s('fun'('type.num.num','type.num.num'),V_27b2_27))),s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27r_27),s('fun'('type.list.list'('type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'_dst_x0_1'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27r_27))),s('fun'('type.semanticPrimitives.error_result'('type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'_dst_x1x0x0_3'(s('fun'('type.semanticPrimitives.error_result'('type.bvlSem.v'),'fun'('fun'('type.bvlSem.v','type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'fun'('fun'('type.semanticPrimitives.abort','type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')))),'const.semanticPrimitives.error_result_CASE_0'),s('fun'('type.bvlSem.v','type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvlSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'const.semanticPrimitives.Rval_0'),s('fun'('type.bvlSem.v','type.list.list'('type.bvlSem.v')),'_dst_x1x0_2'(s('fun'('type.bvlSem.v','fun'('type.list.list'('type.bvlSem.v'),'type.list.list'('type.bvlSem.v'))),'const.list.CONS_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))))),s('fun'('type.semanticPrimitives.abort','type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v')),'_dst_x0_1'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),V_27r_27))))))))),s('type.bviSem.state'(V_27A_27),V_27s2_27))) & p(s('bool','const.bvl_to_bviProof.state_rel_3'(s('fun'('type.num.num','type.num.num'),V_27b2_27),s('type.bvlSem.state'(V_27A_27),V_27s_27),s('type.bviSem.state'(V_27A_27),V_27s2_27))))))).
fof('thm.bvl_to_bviProof.compile_prog_semantics', axiom, ![V_27A_27]: ![V_27start_7c39_7c_27, V_27start_27, V_27prog_7c39_7c_27, V_27prog_27, V_27n_7c39_7c_27, V_27n_27, V_27ffi_7c48_7c_27]: ((s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_prog_3'(s('type.num.num',V_27start_27),s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.num.num',V_27start_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27prog_7c39_7c_27),s('type.num.num',V_27n_7c39_7c_27))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27)))))) & (p(s('bool','const.bvlProps.bEvery_2'(s('fun'('type.bvl.exp','bool'),'const.bvlProps.GoodHandleLet_0'),s('type.list.list'('type.bvl.exp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.bvl.exp'),'const.combin.o_2'(s('fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.bvl.exp'),'const.pair.SND_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.SND_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27)))))) & ~ (s('type.ffi.behaviour','const.bvlSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))),s('type.num.num',V_27start_27))) = s('type.ffi.behaviour','const.ffi.Fail_0'))))) => s('type.ffi.behaviour','const.bviSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27prog_7c39_7c_27))),s('type.num.num',V_27start_7c39_7c_27))) = s('type.ffi.behaviour','const.bvlSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))),s('type.num.num',V_27start_27))))).
fof('thm.bvl_to_bviProof.compile_semantics', axiom, ![V_27A_27]: ![V_27start_7c39_7c_27, V_27start_27, V_27prog_7c39_7c_27, V_27prog_27, V_27n_7c39_7c_27, V_27n_27, V_27ffi_7c48_7c_27]: ((s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_3'(s('type.num.num',V_27start_27),s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.num.num',V_27start_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27prog_7c39_7c_27),s('type.num.num',V_27n_7c39_7c_27))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27)))))) & ~ (s('type.ffi.behaviour','const.bvlSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))),s('type.num.num',V_27start_27))) = s('type.ffi.behaviour','const.ffi.Fail_0')))) => s('type.ffi.behaviour','const.bviSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),V_27prog_7c39_7c_27))),s('type.num.num',V_27start_7c39_7c_27))) = s('type.ffi.behaviour','const.bvlSem.semantics_3'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c48_7c_27),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromAList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27prog_27))),s('type.num.num',V_27start_27))))).
