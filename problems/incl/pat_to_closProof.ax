fof('thm.pat_to_closProof.compile_v_primitive_def', axiom, s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0') = s('fun'('type.patSem.v','type.closSem.v'),'const.relation.WFREC_2'(s('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'const.min.@_1'(s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.patSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.patSem.v'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.patSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.patSem.v','fun'('fun'('type.patSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.patSem.v','fun'('type.patSem.v','bool'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.Conv_0'))))))))))),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.patSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.list.list'('type.patSem.v'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.patSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool'))),'_dst_x000x011x111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.patSem.v','fun'('fun'('type.patSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.patSem.v','fun'('type.patSem.v','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.patSem.Vectorv_0'))))))))),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.patLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.patLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.patSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.patLang.exp','fun'('type.list.list'('type.patSem.v'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.patSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.patLang.exp','fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.patSem.v','fun'('fun'('type.patSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.patLang.exp','fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.patSem.v','fun'('type.patSem.v','bool'))),'_i_0_0'),s('fun'('type.patLang.exp','fun'('type.list.list'('type.patSem.v'),'type.patSem.v')),'_dst_x01x10_2'(s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patLang.exp','type.patSem.v')),'const.patSem.Closure_0'),s('fun'('type.patLang.exp','type.patLang.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.patLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.patLang.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.patSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.patLang.exp'),'fun'('type.list.list'('type.patSem.v'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.patSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.patLang.exp'),'fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool'))))),'_dst_x00000x00011x11111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.patSem.v','fun'('fun'('type.patSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.patLang.exp'),'fun'('type.list.list'('type.patSem.v'),'fun'('type.patSem.v','bool'))))),'_dst_x10001x01110_2'(s('fun'('fun'('type.patSem.v','fun'('type.patSem.v','bool')),'fun'('type.patSem.v','fun'('type.patSem.v','bool'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'('type.patLang.exp'),'fun'('type.list.list'('type.patSem.v'),'type.patSem.v'))),'_dst_x001x010x100_3'(s('fun'('type.list.list'('type.patSem.v'),'fun'('type.list.list'('type.patLang.exp'),'fun'('type.num.num','type.patSem.v'))),'const.patSem.Recclosure_0'),s('fun'('type.list.list'('type.patLang.exp'),'type.list.list'('type.patLang.exp')),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))))))))))))))))))),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.patSem.v','type.closSem.v')),'_dst_x01x00x10x10x10x00x10_7'(s('fun'('type.patSem.v','fun'('fun'('type.ast.lit','type.closSem.v'),'fun'('fun'('type.num.num','fun'('type.list.list'('type.patSem.v'),'type.closSem.v')),'fun'('fun'('type.list.list'('type.patSem.v'),'fun'('type.patLang.exp','type.closSem.v')),'fun'('fun'('type.list.list'('type.patSem.v'),'fun'('type.list.list'('type.patLang.exp'),'fun'('type.num.num','type.closSem.v'))),'fun'('fun'('type.num.num','type.closSem.v'),'fun'('fun'('type.list.list'('type.patSem.v'),'type.closSem.v'),'type.closSem.v'))))))),'const.patSem.v_CASE_0'),s('fun'('type.ast.lit','type.closSem.v'),'_dst_x1x0x0x0x0x0_6'(s('fun'('type.ast.lit','fun'('fun'('type.integer.int','type.closSem.v'),'fun'('fun'('type.string.char','type.closSem.v'),'fun'('fun'('type.list.list'('type.string.char'),'type.closSem.v'),'fun'('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.closSem.v'),'fun'('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.closSem.v'),'type.closSem.v')))))),'const.ast.lit_CASE_0'),s('fun'('type.integer.int','type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('type.integer.int','type.closSem.v'),'const.closSem.Number_0'))),s('fun'('type.string.char','type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('type.string.char','type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.integer.int','type.closSem.v'),'const.closSem.Number_0'),s('fun'('type.string.char','type.integer.int'),'_dst_x0x1_2'(s('fun'('type.num.num','type.integer.int'),'const.integer.int_of_num_0'),s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closSem.v'),'type.closSem.v'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'type.closSem.v')),'const.closSem.Block_0'),s('type.num.num','const.pat_to_clos.string_tag_0'))),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.closSem.v')),'happ'(s('fun'('fun'('type.string.char','type.closSem.v'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.closSem.v'))),'const.list.MAP_0'),s('fun'('type.string.char','type.closSem.v'),'const.combin.o_2'(s('fun'('type.integer.int','type.closSem.v'),'const.closSem.Number_0'),s('fun'('type.string.char','type.integer.int'),'const.combin.o_2'(s('fun'('type.num.num','type.integer.int'),'const.integer.int_of_num_0'),s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'))))))))))),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.integer.int','type.closSem.v'),'const.closSem.Number_0'),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.integer.int'),'_dst_x0x1_2'(s('fun'('type.num.num','type.integer.int'),'const.integer.int_of_num_0'),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.num.num'),'const.words.w2n_0'))))))),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.closSem.v'),'const.closSem.Word64_0'))))),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.num.num','fun'('type.list.list'('type.patSem.v'),'type.closSem.v'))),'_dst_x000x111_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.num.num','fun'('type.list.list'('type.patSem.v'),'type.closSem.v'))),'_dst_x000x010x101_3'(s('fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'type.closSem.v')),'const.closSem.Block_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v'))),'_dst_x0x1_2'(s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v'))),'const.list.MAP_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.patSem.v','type.closSem.v')),'_i_0_0'))))))),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'fun'('type.patLang.exp','type.closSem.v'))),'_dst_x000x111_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'fun'('type.patLang.exp','type.closSem.v'))),'_dst_x000x110x000x001_4'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','fun'('type.closLang.exp','type.closSem.v'))),'const.closSem.Closure_2'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v'))),'_dst_x0x1_2'(s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v'))),'const.list.MAP_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.patSem.v','type.closSem.v')),'_i_0_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('fun'('type.patLang.exp','type.closLang.exp'),'const.pat_to_clos.compile_0'))))),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'fun'('type.list.list'('type.patLang.exp'),'fun'('type.num.num','type.closSem.v')))),'_dst_x0000x1111_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'fun'('type.list.list'('type.patLang.exp'),'fun'('type.num.num','type.closSem.v')))),'_dst_x000x110x001_3'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','type.closSem.v'))),'const.closSem.Recclosure_2'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v'))),'_dst_x0x1_2'(s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v'))),'const.list.MAP_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.patSem.v','type.closSem.v')),'_i_0_0'))),s('fun'('type.list.list'('type.patLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp'))),'happ'(s('fun'('fun'('type.patLang.exp','type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.patLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')))),'const.list.MAP_0'),s('fun'('type.patLang.exp','type.pair.prod'('type.num.num','type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.closLang.exp','type.pair.prod'('type.num.num','type.closLang.exp')),'const.pair.,_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.patLang.exp','type.closLang.exp'),'const.pat_to_clos.compile_0'))))))))),s('fun'('type.num.num','type.closSem.v'),'_dst_x0x1_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('type.num.num','type.closSem.v'),'const.closSem.RefPtr_0'))),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.closSem.v')),'_dst_x00x11_2'(s('fun'('type.closSem.v','type.closSem.v'),'const.combin.I_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.closSem.v')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.closSem.v'),'type.closSem.v'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'type.closSem.v')),'const.closSem.Block_0'),s('type.num.num','const.pat_to_clos.vector_tag_0'))),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v'))),'_dst_x0x1_2'(s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v'))),'const.list.MAP_0'),s('fun'('fun'('type.patSem.v','type.closSem.v'),'fun'('type.patSem.v','type.closSem.v')),'_i_0_0')))))))))))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|_prove_ltb', axiom, ![V_27a_27]: (((?[V_27i_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_27))))) | (?[V_27c_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27))))) | (?[V_27s_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27s_27))))) | (?[V_27w_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))) | ?[V_27w_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))))))) | (?[V_27cn_27, V_27vs_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',V_27cn_27),s('type.list.list'('type.patSem.v'),V_27vs_27))) | (?[V_27vs_27, V_27e_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),V_27vs_27),s('type.patLang.exp',V_27e_27))) | (?[V_27vs_27, V_27es_27, V_27k_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),V_27vs_27),s('type.list.list'('type.patLang.exp'),V_27es_27),s('type.num.num',V_27k_27))) | (?[V_27m_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',V_27m_27))) | ?[V_27vs_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),V_27vs_27)))))))) => (?[V_27i_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_27))))) | (?[V_27w_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))) | (?[V_27w_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))) | (?[V_27c_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27))))) | (?[V_27s_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27s_27))))) | (?[V_27m_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',V_27m_27))) | (?[V_27cn_27, V_27vs_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',V_27cn_27),s('type.list.list'('type.patSem.v'),V_27vs_27))) | (?[V_27vs_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),V_27vs_27))) | (?[V_27vs_27, V_27e_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),V_27vs_27),s('type.patLang.exp',V_27e_27))) | ?[V_27vs_27, V_27es_27, V_27k_27]: s('type.patSem.v',V_27a_27) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),V_27vs_27),s('type.list.list'('type.patLang.exp'),V_27es_27),s('type.num.num',V_27k_27)))))))))))))).
fof('thm.pat_to_closProof.compile_v_ind', axiom, ![V_27P_27]: ((![V_27i_27]: p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_27)))))))) & (![V_27w_27]: p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27)))))))) & (![V_27w_27]: p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))))) & (![V_27c_27]: p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27)))))))) & (![V_27s_27]: p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27s_27)))))))) & (![V_27m_27]: p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',V_27m_27)))))) & (![V_27cn_27, V_27vs_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.patSem.v',V_27a_27),s('fun'('type.patSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.patSem.v'),V_27vs_27)))))) => p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',V_27cn_27),s('type.list.list'('type.patSem.v'),V_27vs_27))))))) & (![V_27vs_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.patSem.v',V_27a_27),s('fun'('type.patSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.patSem.v'),V_27vs_27)))))) => p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),V_27vs_27))))))) & (![V_27vs_27, V_27e_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.patSem.v',V_27a_27),s('fun'('type.patSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.patSem.v'),V_27vs_27)))))) => p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),V_27vs_27),s('type.patLang.exp',V_27e_27))))))) & ![V_27vs_27, V_27es_27, V_27k_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.patSem.v',V_27a_27),s('fun'('type.patSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.patSem.v'),V_27vs_27)))))) => p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),V_27vs_27),s('type.list.list'('type.patLang.exp'),V_27es_27),s('type.num.num',V_27k_27)))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.patSem.v','bool'),V_27P_27),s('type.patSem.v',V_27v_27)))))).
fof('ARITY_0_1_const.pat_to_closProof.compile_v', axiom, ![VV0]: s('type.closSem.v','happ'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.patSem.v',VV0))) = s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v',VV0)))).
fof('thm.pat_to_closProof.compile_v_def|split|0', axiom, ![V_27i_27]: s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_27))))))) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27i_27)))).
fof('thm.pat_to_closProof.compile_v_def|split|1', axiom, ![V_27w_27]: s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))))) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27)))))))).
fof('thm.pat_to_closProof.compile_v_def|split|2', axiom, ![V_27w_27]: s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))))) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))).
fof('thm.pat_to_closProof.compile_v_def|split|3', axiom, ![V_27c_27]: s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27))))))) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))))).
fof('thm.pat_to_closProof.compile_v_def|split|4', axiom, ![V_27s_27]: s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27s_27))))))) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num','const.pat_to_clos.string_tag_0'),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.string.char','type.closSem.v'),'const.combin.o_2'(s('fun'('type.integer.int','type.closSem.v'),'const.closSem.Number_0'),s('fun'('type.string.char','type.integer.int'),'const.combin.o_2'(s('fun'('type.num.num','type.integer.int'),'const.integer.int_of_num_0'),s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'))))),s('type.list.list'('type.string.char'),V_27s_27)))))).
fof('thm.pat_to_closProof.compile_v_def|split|5', axiom, ![V_27m_27]: s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',V_27m_27))))) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27m_27)))).
fof('thm.pat_to_closProof.compile_v_def|split|6', axiom, ![V_27vs_27, V_27cn_27]: s('type.closSem.v','happ'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',V_27cn_27),s('type.list.list'('type.patSem.v'),V_27vs_27))))) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27cn_27),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27vs_27)))))).
fof('thm.pat_to_closProof.compile_v_def|split|7', axiom, ![V_27vs_27]: s('type.closSem.v','happ'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),V_27vs_27))))) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num','const.pat_to_clos.vector_tag_0'),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27vs_27)))))).
fof('thm.pat_to_closProof.compile_v_def|split|8', axiom, ![V_27vs_27, V_27e_27]: s('type.closSem.v','happ'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),V_27vs_27),s('type.patLang.exp',V_27e_27))))) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27vs_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.closLang.exp','const.pat_to_clos.compile_1'(s('type.patLang.exp',V_27e_27)))))).
fof('thm.pat_to_closProof.compile_v_def|split|9', axiom, ![V_27vs_27, V_27k_27, V_27es_27]: s('type.closSem.v','happ'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),V_27vs_27),s('type.list.list'('type.patLang.exp'),V_27es_27),s('type.num.num',V_27k_27))))) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27vs_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.MAP_2'(s('fun'('type.patLang.exp','type.pair.prod'('type.num.num','type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.closLang.exp','type.pair.prod'('type.num.num','type.closLang.exp')),'const.pair.,_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.patLang.exp','type.closLang.exp'),'const.pat_to_clos.compile_0'))),s('type.list.list'('type.patLang.exp'),V_27es_27))),s('type.num.num',V_27k_27)))).
fof('thm.pat_to_closProof.compile_sv_def|split|0', axiom, ![V_27v_27]: s('type.closSem.ref'('type.closSem.v'),'const.pat_to_closProof.compile_sv_1'(s('type.semanticPrimitives.store_v'('type.patSem.v'),'const.semanticPrimitives.Refv_1'(s('type.patSem.v',V_27v_27))))) = s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v',V_27v_27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0')))))).
fof('thm.pat_to_closProof.compile_sv_def|split|1', axiom, ![V_27vs_27]: s('type.closSem.ref'('type.closSem.v'),'const.pat_to_closProof.compile_sv_1'(s('type.semanticPrimitives.store_v'('type.patSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.patSem.v'),V_27vs_27))))) = s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27vs_27)))))).
fof('thm.pat_to_closProof.compile_sv_def|split|2', axiom, ![V_27bs_27]: s('type.closSem.ref'('type.closSem.v'),'const.pat_to_closProof.compile_sv_1'(s('type.semanticPrimitives.store_v'('type.patSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27))))) = s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27)))).
fof('ARITY_0_1_const.pat_to_closProof.compile_sv', axiom, ![VV0]: s('type.closSem.ref'('type.closSem.v'),'happ'(s('fun'('type.semanticPrimitives.store_v'('type.patSem.v'),'type.closSem.ref'('type.closSem.v')),'const.pat_to_closProof.compile_sv_0'),s('type.semanticPrimitives.store_v'('type.patSem.v'),VV0))) = s('type.closSem.ref'('type.closSem.v'),'const.pat_to_closProof.compile_sv_1'(s('type.semanticPrimitives.store_v'('type.patSem.v'),VV0)))).
fof('thm.pat_to_closProof.compile_state_def', axiom, ![V_27FFI_27]: ![V_27s_27]: s('type.closSem.state'(V_27FFI_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))) = s('type.closSem.state'(V_27FFI_27),'const.closSem.state_globals_fupd_2'(s('fun'('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),'const.list.MAP_2'(s('fun'('type.option.option'('type.patSem.v'),'type.option.option'('type.closSem.v')),'const.option.OPTION_MAP_1'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))))))),s('type.closSem.state'(V_27FFI_27),'const.closSem.state_refs_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.list.GENLIST_2'(s('fun'('type.num.num','type.pair.prod'('type.num.num','type.closSem.ref'('type.closSem.v'))),'_dst_x1x1_2'(s('fun'('type.num.num','fun'('type.closSem.ref'('type.closSem.v'),'type.pair.prod'('type.num.num','type.closSem.ref'('type.closSem.v')))),'const.pair.,_0'),s('fun'('type.num.num','type.closSem.ref'('type.closSem.v')),'_dst_x0x1_2'(s('fun'('type.semanticPrimitives.store_v'('type.patSem.v'),'type.closSem.ref'('type.closSem.v')),'const.pat_to_closProof.compile_sv_0'),s('fun'('type.num.num','type.semanticPrimitives.store_v'('type.patSem.v')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'type.semanticPrimitives.store_v'('type.patSem.v'))),'const.list.EL_0'),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))))))))))),s('type.closSem.state'(V_27FFI_27),'const.closSem.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'(V_27FFI_27),'type.ffi.ffi_state'(V_27FFI_27)),'const.combin.K_1'(s('type.ffi.ffi_state'(V_27FFI_27),'const.patSem.state_ffi_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))))),s('type.closSem.state'(V_27FFI_27),'const.closSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))))),s('type.closSem.state'(V_27FFI_27),'const.closSem.state_code_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.finite_map.FEMPTY_0'))),s('type.closSem.state'(V_27FFI_27),'const.bool.ARB_0')))))))))))).
fof('thm.pat_to_closProof.compile_state_const', axiom, ![V_27A_27]: ![V_27s_27]: s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(V_27A_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27A_27),V_27s_27))))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(V_27A_27),V_27s_27)))).
fof('thm.pat_to_closProof.compile_state_dec_clock', axiom, ![V_27A_27]: ![V_27y_27]: s('type.closSem.state'(V_27A_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27A_27),'const.patSem.dec_clock_1'(s('type.patSem.state'(V_27A_27),V_27y_27))))) = s('type.closSem.state'(V_27A_27),'const.closSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.closSem.state'(V_27A_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27A_27),V_27y_27)))))).
fof('thm.pat_to_closProof.compile_state_with_clock', axiom, ![V_27A_27]: ![V_27s_27, V_27k_27]: s('type.closSem.state'(V_27A_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27A_27),'const.patSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27k_27))),s('type.patSem.state'(V_27A_27),V_27s_27))))) = s('type.closSem.state'(V_27A_27),'const.closSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27k_27))),s('type.closSem.state'(V_27A_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27A_27),V_27s_27)))))).
fof('thm.pat_to_closProof.do_eq|split|0', axiom, ![V_27v_7c49_7c_27, V_27v2_27]: (~ (s('type.semanticPrimitives.eq_result','const.patSem.do_eq_2'(s('type.patSem.v',V_27v_7c49_7c_27),s('type.patSem.v',V_27v2_27))) = s('type.semanticPrimitives.eq_result','const.semanticPrimitives.Eq_type_error_0')) => s('type.semanticPrimitives.eq_result','const.patSem.do_eq_2'(s('type.patSem.v',V_27v_7c49_7c_27),s('type.patSem.v',V_27v2_27))) = s('type.semanticPrimitives.eq_result','const.closSem.do_eq_2'(s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v',V_27v_7c49_7c_27))),s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v',V_27v2_27))))))).
fof('thm.pat_to_closProof.do_eq|split|1', axiom, ![V_27vs_7c49_7c_27, V_27vs2_27]: (~ (s('type.semanticPrimitives.eq_result','const.patSem.do_eq_list_2'(s('type.list.list'('type.patSem.v'),V_27vs_7c49_7c_27),s('type.list.list'('type.patSem.v'),V_27vs2_27))) = s('type.semanticPrimitives.eq_result','const.semanticPrimitives.Eq_type_error_0')) => s('type.semanticPrimitives.eq_result','const.patSem.do_eq_list_2'(s('type.list.list'('type.patSem.v'),V_27vs_7c49_7c_27),s('type.list.list'('type.patSem.v'),V_27vs2_27))) = s('type.semanticPrimitives.eq_result','const.closSem.do_eq_list_2'(s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27vs_7c49_7c_27))),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27vs2_27))))))).
fof('thm.pat_to_closProof.list_to_v', axiom, ![V_27ls_27]: s('type.closSem.v','const.closSem.list_to_v_1'(s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.string.char','type.closSem.v'),'const.combin.o_2'(s('fun'('type.integer.int','type.closSem.v'),'const.closSem.Number_0'),s('fun'('type.string.char','type.integer.int'),'const.combin.o_2'(s('fun'('type.num.num','type.integer.int'),'const.integer.int_of_num_0'),s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'))))),s('type.list.list'('type.string.char'),V_27ls_27))))) = s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v','const.patSem.char_list_to_v_1'(s('type.list.list'('type.string.char'),V_27ls_27)))))).
fof('thm.pat_to_closProof.v_to_char_list', axiom, ![V_27v_27, V_27ls_27]: (s('type.option.option'('type.list.list'('type.string.char')),'const.patSem.v_to_char_list_1'(s('type.patSem.v',V_27v_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27ls_27))) => s('type.option.option'('type.list.list'('type.closSem.v')),'const.closSem.v_to_list_1'(s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v',V_27v_27))))) = s('type.option.option'('type.list.list'('type.closSem.v')),'const.option.SOME_1'(s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.string.char','type.closSem.v'),'const.combin.o_2'(s('fun'('type.integer.int','type.closSem.v'),'const.closSem.Number_0'),s('fun'('type.string.char','type.integer.int'),'const.combin.o_2'(s('fun'('type.num.num','type.integer.int'),'const.integer.int_of_num_0'),s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'))))),s('type.list.list'('type.string.char'),V_27ls_27))))))).
fof('thm.pat_to_closProof.v_to_list', axiom, ![V_27v_27, V_27ls_27]: (s('type.option.option'('type.list.list'('type.patSem.v')),'const.patSem.v_to_list_1'(s('type.patSem.v',V_27v_27))) = s('type.option.option'('type.list.list'('type.patSem.v')),'const.option.SOME_1'(s('type.list.list'('type.patSem.v'),V_27ls_27))) => s('type.option.option'('type.list.list'('type.closSem.v')),'const.closSem.v_to_list_1'(s('type.closSem.v','happ'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.patSem.v',V_27v_27))))) = s('type.option.option'('type.list.list'('type.closSem.v')),'const.option.SOME_1'(s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27ls_27))))))).
fof('thm.pat_to_closProof.Boolv', axiom, ![V_27b_27]: s('type.closSem.v','const.pat_to_closProof.compile_v_1'(s('type.patSem.v','const.patSem.Boolv_1'(s('bool',V_27b_27))))) = s('type.closSem.v','const.closSem.Boolv_1'(s('bool',V_27b_27)))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0', axiom, ![V_27A_27]: ![V_27ls_27]: (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ?[V_27y_27]: s('type.list.list'(V_27A_27),V_27ls_27) = s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27y_27),s('type.list.list'(V_27A_27),'const.list.NIL_0'))))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|1', axiom, ![V_27A_27]: ![V_27ls_27]: (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ?[V_27y_27, V_27z_27]: s('type.list.list'(V_27A_27),V_27ls_27) = s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27y_27),s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27z_27),s('type.list.list'(V_27A_27),'const.list.NIL_0'))))))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|2', axiom, ![V_27A_27]: ![V_27ls_27]: (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) = s('type.num.num','const.num.|48|_0') <=> s('type.list.list'(V_27A_27),V_27ls_27) = s('type.list.list'(V_27A_27),'const.list.NIL_0'))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|3', axiom, ![V_27A_27]: ![V_27ls_27]: (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) <=> s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) = s('type.num.num','const.num.|48|_0'))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|4', axiom, ![V_27A_27]: ![V_27ls_27]: (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) <=> s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|5', axiom, ![V_27A_27]: ![V_27ls_27]: (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) <=> s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|5_prove_ltb', axiom, ![V_27FFI_27]: ![V_27s_27, V_27env_27, V_27e_7c49_7c_27]: ?[V_27s_7c39_7c_27, V_27v4_27]: s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),V_27env_27),s('type.patSem.state'(V_27FFI_27),V_27s_27),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',V_27e_7c49_7c_27),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(V_27FFI_27),V_27s_7c39_7c_27),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),V_27v4_27)))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|6_prove_ltb', axiom, ![V_27FFI_27]: ![V_27s_27, V_27es_27, V_27env_27]: ?[V_27s_7c39_7c_27, V_27v3_27]: s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),V_27env_27),s('type.patSem.state'(V_27FFI_27),V_27s_27),s('type.list.list'('type.patLang.exp'),'const.list.REVERSE_1'(s('type.list.list'('type.patLang.exp'),V_27es_27))))) = s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(V_27FFI_27),V_27s_7c39_7c_27),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),V_27v3_27)))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|7_prove_ltb', axiom, ![V_27FFI_27]: ![V_27z_27, V_27s_27, V_27env_27]: ?[V_27v2_27, V_27s_7c49_7c_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'happ'(s('fun'('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'happ'(s('fun'('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'fun'('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.pair_CASE_0'),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.closSem.evaluate_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))))),'const.pair.,_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.pat_to_clos.compile_1'(s('type.patLang.exp',V_27z_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'happ'(s('fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.,_0'),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27env_27))))),s('type.closSem.state'(V_27FFI_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))))))))))),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'_dst_x00x10x01x01_4'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('fun'('type.list.list'('type.closSem.v'),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'fun'('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))))),'const.semanticPrimitives.result_CASE_0'),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s('fun'('type.closSem.state'(V_27FFI_27),'fun'('type.list.list'('type.closSem.v'),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'_dst_x00x10x01_3'(s('fun'('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'fun'('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.pair_CASE_0'),s('fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.closSem.evaluate_0'),s('fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))))),'const.pair.,_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.,_0'),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27env_27))))))))),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))))),'_dst_x000x010x101x001_4'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('fun'('type.list.list'('type.closSem.v'),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'fun'('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))))),'const.semanticPrimitives.result_CASE_0'),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'fun'('type.list.list'('type.closSem.v'),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))))),'_dst_x000x101x010_3'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.,_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'const.semanticPrimitives.Rval_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'type.list.list'('type.closSem.v'))),'_dst_x0x1_2'(s('fun'('type.closSem.v','fun'('type.list.list'('type.closSem.v'),'type.list.list'('type.closSem.v'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.list.HD_0'))))),s('fun'('type.closSem.state'(V_27FFI_27),'type.closSem.state'(V_27FFI_27)),'_i_0_0'))),s('fun'('type.closSem.state'(V_27FFI_27),'fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'_dst_x00x01x10_3'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.,_0'),s('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'const.semanticPrimitives.Rerr_0'),s('fun'('type.closSem.state'(V_27FFI_27),'type.closSem.state'(V_27FFI_27)),'_i_0_0'))))))),s('fun'('type.closSem.state'(V_27FFI_27),'fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'_dst_x00x01x10_3'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.,_0'),s('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'const.semanticPrimitives.Rerr_0'),s('fun'('type.closSem.state'(V_27FFI_27),'type.closSem.state'(V_27FFI_27)),'_i_0_0'))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'happ'(s('fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.,_0'),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27v2_27))),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27)))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|8_prove_ltb', axiom, ![V_27FFI_27]: ![V_27z_27, V_27s_27, V_27env_27]: ?[V_27v3_27, V_27s2_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.pat_to_clos.compile_1'(s('type.patLang.exp',V_27z_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27env_27))),s('type.closSem.state'(V_27FFI_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27v3_27),s('type.closSem.state'(V_27FFI_27),V_27s2_27)))).
fof('thm.pat_to_closProof.pat_to_closProof_|49|9_prove_ltb', axiom, ![V_27FFI_27]: ![V_27y_27, V_27s_7c49_7c_7c39_7c_27, V_27env_27]: ?[V_27v2_7c39_7c_27, V_27s2_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.pat_to_clos.compile_1'(s('type.patLang.exp',V_27y_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27env_27))),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_7c39_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27v2_7c39_7c_27),s('type.closSem.state'(V_27FFI_27),V_27s2_27)))).
fof('thm.pat_to_closProof.pat_to_closProof_2|48|_prove_ltb', axiom, ![V_27x_27]: ?[V_27env_7c39_7c_27, V_27e_27]: s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),V_27x_27) = s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),V_27env_7c39_7c_27),s('type.patLang.exp',V_27e_27)))).
fof('thm.pat_to_closProof.pat_to_closProof_2|49|_prove_ltb', axiom, ![V_27FFI_27]: ![V_27s_7c49_7c_27, V_27n_27, V_27l_7c48_7c_27, V_27l_27, V_27d_27]: ?[V_27v3_27, V_27s_7c49_7c_7c39_7c_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)))),'const.pair.,_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','happ'(s('fun'('type.patLang.exp','type.closLang.exp'),'const.pat_to_clos.compile_0'),s('type.patLang.exp','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.patLang.exp'),V_27l_7c48_7c_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'happ'(s('fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_1'(s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','happ'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.patSem.v',V_27d_27))),s('type.list.list'('type.closSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.closSem.v'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.closSem.v'),'const.closSem.Recclosure_4'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27l_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.MAP_2'(s('fun'('type.patLang.exp','type.pair.prod'('type.num.num','type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.closLang.exp','type.pair.prod'('type.num.num','type.closLang.exp')),'const.pair.,_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.patLang.exp','type.closLang.exp'),'const.pat_to_clos.compile_0'))),s('type.list.list'('type.patLang.exp'),V_27l_7c48_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),V_27l_7c48_7c_27))))),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27l_27))))))))),s('type.closSem.state'(V_27FFI_27),'const.closSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.closSem.state'(V_27FFI_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27FFI_27),V_27s_7c49_7c_27))))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'happ'(s('fun'('type.closSem.state'(V_27FFI_27),'type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_1'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27v3_27))),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_7c39_7c_27)))).
fof('thm.pat_to_closProof.pat_to_closProof_22_prove_ltb', axiom, ![V_27FFI_27]: ![V_27s_7c49_7c_27, V_27l_27, V_27e_27, V_27d_27]: ?[V_27v3_27, V_27s_7c49_7c_7c39_7c_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.pat_to_clos.compile_1'(s('type.patLang.exp',V_27e_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','happ'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.patSem.v',V_27d_27))),s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27l_27))))),s('type.closSem.state'(V_27FFI_27),'const.closSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.closSem.state'(V_27FFI_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27FFI_27),V_27s_7c49_7c_27))))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27v3_27),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_7c39_7c_27)))).
fof('thm.pat_to_closProof.compile_evaluate', axiom, ![V_27FFI_27]: ![V_27env_27, V_27s_27, V_27es_27, V_27res_27]: ((s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),V_27env_27),s('type.patSem.state'(V_27FFI_27),V_27s_27),s('type.list.list'('type.patLang.exp'),V_27es_27))) = s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),V_27res_27) & ~ (s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.pair.SND_1'(s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),V_27res_27))) = s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.patSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) => s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.patLang.exp'),'type.list.list'('type.closLang.exp')),'const.list.MAP_1'(s('fun'('type.patLang.exp','type.closLang.exp'),'const.pat_to_clos.compile_0'))),s('type.list.list'('type.patLang.exp'),V_27es_27))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),'happ'(s('fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v')),'const.list.MAP_1'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'))),s('type.list.list'('type.patSem.v'),V_27env_27))),s('type.closSem.state'(V_27FFI_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27FFI_27),V_27s_27))))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.evalProps.map_result_3'(s('fun'('type.list.list'('type.patSem.v'),'type.list.list'('type.closSem.v')),'const.list.MAP_1'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'))),s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.pair.SND_1'(s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),V_27res_27))))),s('type.closSem.state'(V_27FFI_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.patSem.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),V_27res_27))))))))).
fof('thm.pat_to_closProof.compile_semantics', axiom, ![V_27A_27]: ![V_27st_27, V_27es_27, V_27env_27]: (~ (s('type.ffi.behaviour','const.patSem.semantics_3'(s('type.list.list'('type.patSem.v'),V_27env_27),s('type.patSem.state'(V_27A_27),V_27st_27),s('type.list.list'('type.patLang.exp'),V_27es_27))) = s('type.ffi.behaviour','const.ffi.Fail_0')) => s('type.ffi.behaviour','const.closSem.semantics_3'(s('type.list.list'('type.closSem.v'),'const.list.MAP_2'(s('fun'('type.patSem.v','type.closSem.v'),'const.pat_to_closProof.compile_v_0'),s('type.list.list'('type.patSem.v'),V_27env_27))),s('type.closSem.state'(V_27A_27),'const.pat_to_closProof.compile_state_1'(s('type.patSem.state'(V_27A_27),V_27st_27))),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s('fun'('type.patLang.exp','type.closLang.exp'),'const.pat_to_clos.compile_0'),s('type.list.list'('type.patLang.exp'),V_27es_27))))) = s('type.ffi.behaviour','const.patSem.semantics_3'(s('type.list.list'('type.patSem.v'),V_27env_27),s('type.patSem.state'(V_27A_27),V_27st_27),s('type.list.list'('type.patLang.exp'),V_27es_27))))).
fof('thm.pat_to_closProof.compile_contains_App_SOME', axiom, ![V_27e_27]: ~ (p(s('bool','const.closProps.contains_App_SOME_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.pat_to_clos.compile_1'(s('type.patLang.exp',V_27e_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))).
fof('thm.pat_to_closProof.compile_every_Fn_vs_NONE', axiom, ![V_27e_27]: p(s('bool','const.closProps.every_Fn_vs_NONE_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.pat_to_clos.compile_1'(s('type.patLang.exp',V_27e_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))).
fof('_dst_x00x00x00x10x00x00x01_ax', axiom, ![VA,VA3,VA4,VA5,VA1,VA6,VA7,VA2,VA8]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x00x00x10x00x00x01_7'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))),V__x),s(VA3,V__0),s(VA4,V__1),s('fun'(VA1,VA5),V__2),s(VA6,V__3),s(VA7,V__4),s('fun'(VA2,VA8),V__5))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x0x0x0x0x1_7'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))),V__x),s(VA3,V__0),s(VA4,V__1),s(VA5,'happ'(s('fun'(VA1,VA5),V__2),s(VA1,V__z))),s(VA6,V__3),s(VA7,V__4),s('fun'(VA2,VA8),V__5)))).
fof('_dst_x000x100x000x010x000x000x001_ax', axiom, ![VA,VA4,VA1,VA5,VA2,VA6,VA7,VA8,VA3,VA9]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x100x000x010x000x000x001_7'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))),V__x),s('fun'(VA1,VA4),V__0),s(VA5,V__1),s('fun'(VA2,VA6),V__2),s(VA7,V__3),s(VA8,V__4),s('fun'(VA3,VA9),V__5))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x00x10x00x00x01_7'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))),V__x),s(VA4,'happ'(s('fun'(VA1,VA4),V__0),s(VA1,V__z))),s(VA5,V__1),s('fun'(VA2,VA6),V__2),s(VA7,V__3),s(VA8,V__4),s('fun'(VA3,VA9),V__5)))).
fof('_dst_x0000x0100x0000x0010x0000x0000x1001_ax', axiom, ![VA,VA2,VA5,VA6,VA3,VA7,VA8,VA9,VA4,VA10,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA)))))),V__x),s('fun'(VA2,VA5),V__0),s(VA6,V__1),s('fun'(VA3,VA7),V__2),s(VA8,V__3),s(VA9,V__4),s('fun'(VA1,'fun'(VA4,VA10)),V__5))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x100x000x010x000x000x001_7'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA)))))),V__x),s('fun'(VA2,VA5),V__0),s(VA6,V__1),s('fun'(VA3,VA7),V__2),s(VA8,V__3),s(VA9,V__4),s('fun'(VA4,VA10),'happ'(s('fun'(VA1,'fun'(VA4,VA10)),V__5),s(VA1,V__z)))))).
