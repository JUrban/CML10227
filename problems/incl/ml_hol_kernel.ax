fof('thm.ml_hol_kernel.ml_hol_kernel_|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27]: s(V_27A_27,'const.bool.COND_3'(s('bool','T_0'),s(V_27A_27,V_27x_27),s(V_27A_27,V_27y_27))) = s(V_27A_27,V_27x_27)).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27]: s(V_27A_27,'const.bool.COND_3'(s('bool','F_0'),s(V_27A_27,V_27x_27),s(V_27A_27,V_27y_27))) = s(V_27A_27,V_27y_27)).
fof('ARITY_2_3_const.ml_translator.PAIR_TYPE', axiom, ![V_27B_27,V_27C_27]: ![VV0, VV1, VV2]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.pair.prod'(V_27B_27,V_27C_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.PAIR_TYPE_2'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27C_27,'fun'('type.semanticPrimitives.v','bool')),VV1))),s('type.pair.prod'(V_27B_27,V_27C_27),VV2))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.PAIR_TYPE_3'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27C_27,'fun'('type.semanticPrimitives.v','bool')),VV1),s('type.pair.prod'(V_27B_27,V_27C_27),VV2)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_2_prove_ltb', axiom, ![V_27B_27,V_27C_27,V_27RETURN__TYPE_27]: ![V_27x_27, V_27return__type_27, V_27n_7c49_7c__2_27, V_27n_7c49_7c___7c49_7c_27, V_27f_7c49_7c_27, V_27exp_7c49_7c_27, V_27exp_27, V_27env_27, V_27c_27, V_27b_7c49_7c_27, V_27b_7c48_7c_27, V_27b_27]: (p(s('bool','T_0')) => (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))) => (((p(s('bool',V_27b_7c48_7c_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.PAIR_TYPE_3'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27C_27,'fun'('type.semanticPrimitives.v','bool')),V_27c_27),s('type.pair.prod'(V_27B_27,V_27C_27),V_27x_27))))))) & ![V_27x_7c49_7c___7c49_7c_27, V_27x_7c49_7c__2_27, V_27v_7c49_7c___7c49_7c_27, V_27v_7c49_7c__2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,V_27x_7c49_7c___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27C_27,'fun'('type.semanticPrimitives.v','bool')),V_27c_27),s(V_27C_27,V_27x_7c49_7c__2_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27)))) & p(s('bool','happ'(s('fun'(V_27C_27,'bool'),'happ'(s('fun'(V_27B_27,'fun'(V_27C_27,'bool')),V_27b_7c49_7c_27),s(V_27B_27,V_27x_7c49_7c___7c49_7c_27))),s(V_27C_27,V_27x_7c49_7c__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp_7c49_7c_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'(V_27C_27,'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'(V_27B_27,'fun'(V_27C_27,'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f_7c49_7c_27),s(V_27B_27,V_27x_7c49_7c___7c49_7c_27))),s(V_27C_27,V_27x_7c49_7c__2_27)))))))))) => (![V_27x_7c49_7c___7c49_7c_27, V_27x_7c49_7c__2_27]: (p(s('bool',V_27b_7c48_7c_27)) & (?[Vv]: ((p(s('bool',Vv)) <=> s('type.pair.prod'(V_27B_27,V_27C_27),V_27x_27) = s('type.pair.prod'(V_27B_27,V_27C_27),'const.pair.,_2'(s(V_27B_27,V_27x_7c49_7c___7c49_7c_27),s(V_27C_27,V_27x_7c49_7c__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'(V_27C_27,'bool'),'happ'(s('fun'(V_27B_27,'fun'(V_27C_27,'bool')),V_27b_7c49_7c_27),s(V_27B_27,V_27x_7c49_7c___7c49_7c_27))),s(V_27C_27,V_27x_7c49_7c__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27exp_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.NONE_0'),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp_7c49_7c_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'const.pair.pair_CASE_2'(s('type.pair.prod'(V_27B_27,V_27C_27),V_27x_27),s('fun'(V_27B_27,'fun'(V_27C_27,'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f_7c49_7c_27))))))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_5_prove_ltb', axiom, ![V_27A_27,V_27RETURN__TYPE_27]: ![V_27x_27, V_27return__type_27, V_27n2__2_27, V_27n2___7c49_7c_27, V_27f2_27, V_27f_7c49_7c_27, V_27exp2_27, V_27exp_7c49_7c_27, V_27exp_27, V_27env_27, V_27b2_27, V_27b_7c49_7c_27, V_27b_7c48_7c_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))) & s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) => ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))) & p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))))) => (((p(s('bool',V_27b_7c48_7c_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.LIST_TYPE_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('type.list.list'(V_27A_27),V_27x_27))))))) & ((p(s('bool',V_27b_7c49_7c_27)) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_7c49_7c_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),V_27f_7c49_7c_27))))))) & ![V_27x2___7c49_7c_27, V_27x2__2_27, V_27v2___7c49_7c_27, V_27v2__2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x2___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.LIST_TYPE_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('type.list.list'(V_27A_27),V_27x2__2_27))),s('type.semanticPrimitives.v',V_27v2__2_27)))) & p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),'happ'(s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'bool')),V_27b2_27),s(V_27A_27,V_27x2___7c49_7c_27))),s('type.list.list'(V_27A_27),V_27x2__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2__2_27),s('type.semanticPrimitives.v',V_27v2__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp2_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f2_27),s(V_27A_27,V_27x2___7c49_7c_27))),s('type.list.list'(V_27A_27),V_27x2__2_27))))))))))) => (![V_27x2___7c49_7c_27, V_27x2__2_27]: (p(s('bool',V_27b_7c48_7c_27)) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.list.list'(V_27A_27),V_27x_27) = s('type.list.list'(V_27A_27),'const.list.NIL_0')) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool',V_27b_7c49_7c_27))) & (?[Vv]: ((p(s('bool',Vv)) <=> s('type.list.list'(V_27A_27),V_27x_27) = s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27x2___7c49_7c_27),s('type.list.list'(V_27A_27),V_27x2__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),'happ'(s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'bool')),V_27b2_27),s(V_27A_27,V_27x2___7c49_7c_27))),s('type.list.list'(V_27A_27),V_27x2__2_27))))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27exp_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))),s('type.ast.exp',V_27exp_7c49_7c_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp2_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))))),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'const.list.list_CASE_3'(s('type.list.list'(V_27A_27),V_27x_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),V_27f_7c49_7c_27),s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f2_27))))))))))))).
fof('ARITY_1_2_const.ml_translator.OPTION_TYPE', axiom, ![V_27A_27]: ![VV0, VV1]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.option.option'(V_27A_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.OPTION_TYPE_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0))),s('type.option.option'(V_27A_27),VV1))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.OPTION_TYPE_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('type.option.option'(V_27A_27),VV1)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_8_prove_ltb', axiom, ![V_27A_27,V_27RETURN__TYPE_27]: ![V_27x_27, V_27return__type_27, V_27n2___7c49_7c_27, V_27f2_27, V_27f_7c49_7c_27, V_27exp2_27, V_27exp_7c49_7c_27, V_27exp_27, V_27env_27, V_27b2_27, V_27b_7c49_7c_27, V_27b_7c48_7c_27, V_27a_27]: ((s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))) & s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))) => ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))) & p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))) => (((p(s('bool',V_27b_7c48_7c_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.OPTION_TYPE_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('type.option.option'(V_27A_27),V_27x_27))))))) & ((p(s('bool',V_27b_7c49_7c_27)) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_7c49_7c_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),V_27f_7c49_7c_27))))))) & ![V_27x2___7c49_7c_27, V_27v2___7c49_7c_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x2___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27)))) & p(s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27b2_27),s(V_27A_27,V_27x2___7c49_7c_27))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.ast.exp',V_27exp2_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'(V_27A_27,'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),V_27f2_27),s(V_27A_27,V_27x2___7c49_7c_27))))))))))) => (![V_27x2___7c49_7c_27]: (p(s('bool',V_27b_7c48_7c_27)) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.option.option'(V_27A_27),V_27x_27) = s('type.option.option'(V_27A_27),'const.option.NONE_0')) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool',V_27b_7c49_7c_27))) & (?[Vv]: ((p(s('bool',Vv)) <=> s('type.option.option'(V_27A_27),V_27x_27) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27x2___7c49_7c_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27b2_27),s(V_27A_27,V_27x2___7c49_7c_27))))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27exp_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))),s('type.ast.exp',V_27exp_7c49_7c_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))),s('type.ast.exp',V_27exp2_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))))),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'const.option.option_CASE_3'(s('type.option.option'(V_27A_27),V_27x_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),V_27f_7c49_7c_27),s('fun'(V_27A_27,'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),V_27f2_27))))))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49||49|_prove_ltb', axiom, ![V_27RETURN__TYPE_27]: ![V_27x_27, V_27return__type_27, V_27n2__2_27, V_27n2___7c49_7c_27, V_27n_7c49_7c___7c49_7c_27, V_27f2_27, V_27f_7c49_7c_27, V_27exp2_27, V_27exp_7c49_7c_27, V_27exp_27, V_27env_27, V_27b2_27, V_27b_7c49_7c_27, V_27b_7c48_7c_27]: ((s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))) & s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) => ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))) & p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))))) => (((p(s('bool',V_27b_7c48_7c_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.holSyntax.type','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.TYPE_TYPE_0'),s('type.holSyntax.type',V_27x_27))))))) & (![V_27x_7c49_7c___7c49_7c_27, V_27v_7c49_7c___7c49_7c_27]: ((p(s('bool','const.ml_translator.STRING_TYPE_2'(s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),V_27b_7c49_7c_27),s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.ast.exp',V_27exp_7c49_7c_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),V_27f_7c49_7c_27),s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27))))))))) & ![V_27x2___7c49_7c_27, V_27x2__2_27, V_27v2___7c49_7c_27, V_27v2__2_27]: ((p(s('bool','const.ml_translator.STRING_TYPE_2'(s('type.mlstring.mlstring',V_27x2___7c49_7c_27),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27)))) & (p(s('bool','const.ml_translator.LIST_TYPE_3'(s('fun'('type.holSyntax.type','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.TYPE_TYPE_0'),s('type.list.list'('type.holSyntax.type'),V_27x2__2_27),s('type.semanticPrimitives.v',V_27v2__2_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27b2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27x2__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2__2_27),s('type.semanticPrimitives.v',V_27v2__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp2_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27x2__2_27))))))))))) => (![V_27x_7c49_7c___7c49_7c_27, V_27x2___7c49_7c_27, V_27x2__2_27]: (p(s('bool',V_27b_7c48_7c_27)) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.type',V_27x_27) = s('type.holSyntax.type','const.holSyntax.Tyvar_1'(s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),V_27b_7c49_7c_27),s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.type',V_27x_27) = s('type.holSyntax.type','const.holSyntax.Tyapp_2'(s('type.mlstring.mlstring',V_27x2___7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27x2__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27b2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27x2__2_27))))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27exp_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))),s('type.ast.exp',V_27exp_7c49_7c_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp2_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))))),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'const.holSyntax.type_CASE_3'(s('type.holSyntax.type',V_27x_27),s('fun'('type.mlstring.mlstring','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),V_27f_7c49_7c_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f2_27))))))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|4_prove_ltb', axiom, ![V_27RETURN__TYPE_27]: ![V_27x_27, V_27return__type_27, V_27n4__2_27, V_27n4___7c49_7c_27, V_27n3__2_27, V_27n3___7c49_7c_27, V_27n2__2_27, V_27n2___7c49_7c_27, V_27n_7c49_7c__2_27, V_27n_7c49_7c___7c49_7c_27, V_27f4_27, V_27f3_27, V_27f2_27, V_27f_7c49_7c_27, V_27exp4_27, V_27exp3_27, V_27exp2_27, V_27exp_7c49_7c_27, V_27exp_27, V_27env_27, V_27b4_27, V_27b3_27, V_27b2_27, V_27b_7c49_7c_27, V_27b_7c48_7c_27]: ((s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))) & s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))) => ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n3___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n3__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))) & p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n4___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n4__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))))))) => (((p(s('bool',V_27b_7c48_7c_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.TERM_TYPE_1'(s('type.holSyntax.term',V_27x_27))))))) & (![V_27x_7c49_7c___7c49_7c_27, V_27x_7c49_7c__2_27, V_27v_7c49_7c___7c49_7c_27, V_27v_7c49_7c__2_27]: ((p(s('bool','const.ml_translator.STRING_TYPE_2'(s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27)))) & (p(s('bool','const.ml_monad.TYPE_TYPE_2'(s('type.holSyntax.type',V_27x_7c49_7c__2_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27)))) & p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','bool')),V_27b_7c49_7c_27),s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.type',V_27x_7c49_7c__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp_7c49_7c_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f_7c49_7c_27),s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.type',V_27x_7c49_7c__2_27))))))))) & (![V_27x2___7c49_7c_27, V_27x2__2_27, V_27v2___7c49_7c_27, V_27v2__2_27]: ((p(s('bool','const.ml_translator.STRING_TYPE_2'(s('type.mlstring.mlstring',V_27x2___7c49_7c_27),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27)))) & (p(s('bool','const.ml_monad.TYPE_TYPE_2'(s('type.holSyntax.type',V_27x2__2_27),s('type.semanticPrimitives.v',V_27v2__2_27)))) & p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','bool')),V_27b2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.holSyntax.type',V_27x2__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2__2_27),s('type.semanticPrimitives.v',V_27v2__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp2_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.holSyntax.type',V_27x2__2_27))))))))) & (![V_27x3___7c49_7c_27, V_27x3__2_27, V_27v3___7c49_7c_27, V_27v3__2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.TERM_TYPE_1'(s('type.holSyntax.term',V_27x3___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v3___7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.TERM_TYPE_1'(s('type.holSyntax.term',V_27x3__2_27))),s('type.semanticPrimitives.v',V_27v3__2_27)))) & p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27b3_27),s('type.holSyntax.term',V_27x3___7c49_7c_27))),s('type.holSyntax.term',V_27x3__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n3__2_27),s('type.semanticPrimitives.v',V_27v3__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n3___7c49_7c_27),s('type.semanticPrimitives.v',V_27v3___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp3_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f3_27),s('type.holSyntax.term',V_27x3___7c49_7c_27))),s('type.holSyntax.term',V_27x3__2_27))))))))) & ![V_27x4___7c49_7c_27, V_27x4__2_27, V_27v4___7c49_7c_27, V_27v4__2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.TERM_TYPE_1'(s('type.holSyntax.term',V_27x4___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v4___7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.TERM_TYPE_1'(s('type.holSyntax.term',V_27x4__2_27))),s('type.semanticPrimitives.v',V_27v4__2_27)))) & p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27b4_27),s('type.holSyntax.term',V_27x4___7c49_7c_27))),s('type.holSyntax.term',V_27x4__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n4__2_27),s('type.semanticPrimitives.v',V_27v4__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n4___7c49_7c_27),s('type.semanticPrimitives.v',V_27v4___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp4_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f4_27),s('type.holSyntax.term',V_27x4___7c49_7c_27))),s('type.holSyntax.term',V_27x4__2_27))))))))))))) => (![V_27x_7c49_7c___7c49_7c_27, V_27x_7c49_7c__2_27, V_27x2___7c49_7c_27, V_27x2__2_27, V_27x3___7c49_7c_27, V_27x3__2_27, V_27x4___7c49_7c_27, V_27x4__2_27]: (p(s('bool',V_27b_7c48_7c_27)) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.term',V_27x_27) = s('type.holSyntax.term','const.holSyntax.Var_2'(s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27),s('type.holSyntax.type',V_27x_7c49_7c__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','bool')),V_27b_7c49_7c_27),s('type.mlstring.mlstring',V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.type',V_27x_7c49_7c__2_27))))) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.term',V_27x_27) = s('type.holSyntax.term','const.holSyntax.Const_2'(s('type.mlstring.mlstring',V_27x2___7c49_7c_27),s('type.holSyntax.type',V_27x2__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','bool')),V_27b2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.holSyntax.type',V_27x2__2_27))))) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.term',V_27x_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27x3___7c49_7c_27),s('type.holSyntax.term',V_27x3__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27b3_27),s('type.holSyntax.term',V_27x3___7c49_7c_27))),s('type.holSyntax.term',V_27x3__2_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.term',V_27x_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27x4___7c49_7c_27),s('type.holSyntax.term',V_27x4__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27b4_27),s('type.holSyntax.term',V_27x4___7c49_7c_27))),s('type.holSyntax.term',V_27x4__2_27))))))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27exp_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp_7c49_7c_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp2_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n3___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n3__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp3_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n4___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n4__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp4_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))))))))),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'const.holSyntax.term_CASE_5'(s('type.holSyntax.term',V_27x_27),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f_7c49_7c_27),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f2_27),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f3_27),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f4_27))))))))))))).
fof('ARITY_0_1_const.ml_monad.THM_TYPE', axiom, ![VV0]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.holKernel.thm','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.THM_TYPE_0'),s('type.holKernel.thm',VV0))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.THM_TYPE_1'(s('type.holKernel.thm',VV0)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|7_prove_ltb', axiom, ![V_27RETURN__TYPE_27]: ![V_27x_27, V_27return__type_27, V_27n_7c49_7c__2_27, V_27n_7c49_7c___7c49_7c_27, V_27f_7c49_7c_27, V_27exp_7c49_7c_27, V_27exp_27, V_27env_27, V_27b_7c49_7c_27, V_27b_7c48_7c_27]: (s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))) => (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))) => (((p(s('bool',V_27b_7c48_7c_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.THM_TYPE_1'(s('type.holKernel.thm',V_27x_27))))))) & ![V_27x_7c49_7c___7c49_7c_27, V_27x_7c49_7c__2_27, V_27v_7c49_7c___7c49_7c_27, V_27v_7c49_7c__2_27]: ((p(s('bool','const.ml_translator.LIST_TYPE_3'(s('fun'('type.holSyntax.term','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.TERM_TYPE_0'),s('type.list.list'('type.holSyntax.term'),V_27x_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.TERM_TYPE_0'),s('type.holSyntax.term',V_27x_7c49_7c__2_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27)))) & p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.term','bool')),V_27b_7c49_7c_27),s('type.list.list'('type.holSyntax.term'),V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.term',V_27x_7c49_7c__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp_7c49_7c_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f_7c49_7c_27),s('type.list.list'('type.holSyntax.term'),V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.term',V_27x_7c49_7c__2_27)))))))))) => (![V_27x_7c49_7c___7c49_7c_27, V_27x_7c49_7c__2_27]: (p(s('bool',V_27b_7c48_7c_27)) & (?[Vv]: ((p(s('bool',Vv)) <=> s('type.holKernel.thm',V_27x_27) = s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27x_7c49_7c___7c49_7c_27),s('type.holSyntax.term',V_27x_7c49_7c__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.term','bool')),V_27b_7c49_7c_27),s('type.list.list'('type.holSyntax.term'),V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.term',V_27x_7c49_7c__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27exp_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp_7c49_7c_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'const.holKernel.thm_CASE_2'(s('type.holKernel.thm',V_27x_27),s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f_7c49_7c_27))))))))))))).
fof('ARITY_1_2_const.ml_monad.UPDATE_TYPE', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.UPDATE_TYPE_1'(s('type.holSyntax.update',VV0))),s('type.semanticPrimitives.v',VV1))) = s('bool','const.ml_monad.UPDATE_TYPE_2'(s('type.holSyntax.update',VV0),s('type.semanticPrimitives.v',VV1)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_2|48|_prove_ltb', axiom, ![V_27RETURN__TYPE_27]: ![V_27x_27, V_27return__type_27, V_27n5___7c49_7c_27, V_27n4__2_27, V_27n4___7c49_7c_27, V_27n3__2_27, V_27n3___7c49_7c_27, V_27n2__4_27, V_27n2__3_27, V_27n2__2_27, V_27n2___7c49_7c_27, V_27n_7c49_7c__2_27, V_27n_7c49_7c___7c49_7c_27, V_27f5_27, V_27f4_27, V_27f3_27, V_27f2_27, V_27f_7c49_7c_27, V_27exp5_27, V_27exp4_27, V_27exp3_27, V_27exp2_27, V_27exp_7c49_7c_27, V_27exp_27, V_27env_27, V_27b5_27, V_27b4_27, V_27b3_27, V_27b2_27, V_27b_7c49_7c_27, V_27b_7c48_7c_27]: ((s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))) & s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) => ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2__3_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n2__4_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n3___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n3__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n4___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n4__2_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))) & p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27n5___7c49_7c_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))))) => (((p(s('bool',V_27b_7c48_7c_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_monad.UPDATE_TYPE_1'(s('type.holSyntax.update',V_27x_27))))))) & (![V_27x_7c49_7c___7c49_7c_27, V_27x_7c49_7c__2_27, V_27v_7c49_7c___7c49_7c_27, V_27v_7c49_7c__2_27]: ((p(s('bool','const.ml_translator.LIST_TYPE_3'(s('fun'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term'),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.PAIR_TYPE_2'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'),s('fun'('type.holSyntax.term','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.TERM_TYPE_0'))),s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),V_27x_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.TERM_TYPE_0'),s('type.holSyntax.term',V_27x_7c49_7c__2_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27)))) & p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),'fun'('type.holSyntax.term','bool')),V_27b_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.term',V_27x_7c49_7c__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp_7c49_7c_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),'fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.term',V_27x_7c49_7c__2_27))))))))) & (![V_27x2___7c49_7c_27, V_27x2__2_27, V_27x2__3_27, V_27x2__4_27, V_27v2___7c49_7c_27, V_27v2__2_27, V_27v2__3_27, V_27v2__4_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.TERM_TYPE_0'),s('type.holSyntax.term',V_27x2__2_27))),s('type.semanticPrimitives.v',V_27v2__2_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'),s('type.mlstring.mlstring',V_27x2__3_27))),s('type.semanticPrimitives.v',V_27v2__3_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'),s('type.mlstring.mlstring',V_27x2__4_27))),s('type.semanticPrimitives.v',V_27v2__4_27)))) & p(s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'happ'(s('fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool'))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')))),V_27b2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.holSyntax.term',V_27x2__2_27))),s('type.mlstring.mlstring',V_27x2__3_27))),s('type.mlstring.mlstring',V_27x2__4_27)))))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2__4_27),s('type.semanticPrimitives.v',V_27v2__4_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2__3_27),s('type.semanticPrimitives.v',V_27v2__3_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2__2_27),s('type.semanticPrimitives.v',V_27v2__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27),s('type.semanticPrimitives.v',V_27v2___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))))))),s('type.ast.exp',V_27exp2_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),'happ'(s('fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))))),V_27f2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.holSyntax.term',V_27x2__2_27))),s('type.mlstring.mlstring',V_27x2__3_27))),s('type.mlstring.mlstring',V_27x2__4_27))))))))) & (![V_27x3___7c49_7c_27, V_27x3__2_27, V_27v3___7c49_7c_27, V_27v3__2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'),s('type.mlstring.mlstring',V_27x3___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v3___7c49_7c_27)))) & (p(s('bool','const.ml_translator.NUM_2'(s('type.num.num',V_27x3__2_27),s('type.semanticPrimitives.v',V_27v3__2_27)))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.num.num','bool')),V_27b3_27),s('type.mlstring.mlstring',V_27x3___7c49_7c_27))),s('type.num.num',V_27x3__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n3__2_27),s('type.semanticPrimitives.v',V_27v3__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n3___7c49_7c_27),s('type.semanticPrimitives.v',V_27v3___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp3_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.num.num','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.num.num','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f3_27),s('type.mlstring.mlstring',V_27x3___7c49_7c_27))),s('type.num.num',V_27x3__2_27))))))))) & (![V_27x4___7c49_7c_27, V_27x4__2_27, V_27v4___7c49_7c_27, V_27v4__2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'),s('type.mlstring.mlstring',V_27x4___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v4___7c49_7c_27)))) & (p(s('bool','const.ml_monad.TYPE_TYPE_2'(s('type.holSyntax.type',V_27x4__2_27),s('type.semanticPrimitives.v',V_27v4__2_27)))) & p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','bool')),V_27b4_27),s('type.mlstring.mlstring',V_27x4___7c49_7c_27))),s('type.holSyntax.type',V_27x4__2_27)))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n4__2_27),s('type.semanticPrimitives.v',V_27v4__2_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n4___7c49_7c_27),s('type.semanticPrimitives.v',V_27v4___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))))),s('type.ast.exp',V_27exp4_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f4_27),s('type.mlstring.mlstring',V_27x4___7c49_7c_27))),s('type.holSyntax.type',V_27x4__2_27))))))))) & ![V_27x5___7c49_7c_27, V_27v5___7c49_7c_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.semanticPrimitives.v','bool')),'const.ml_monad.TERM_TYPE_0'),s('type.holSyntax.term',V_27x5___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v5___7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),V_27b5_27),s('type.holSyntax.term',V_27x5___7c49_7c_27))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27n5___7c49_7c_27),s('type.semanticPrimitives.v',V_27v5___7c49_7c_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.ast.exp',V_27exp5_27),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'happ'(s('fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),V_27f5_27),s('type.holSyntax.term',V_27x5___7c49_7c_27)))))))))))))) => (![V_27x_7c49_7c___7c49_7c_27, V_27x_7c49_7c__2_27, V_27x2___7c49_7c_27, V_27x2__2_27, V_27x2__3_27, V_27x2__4_27, V_27x3___7c49_7c_27, V_27x3__2_27, V_27x4___7c49_7c_27, V_27x4__2_27, V_27x5___7c49_7c_27]: (p(s('bool',V_27b_7c48_7c_27)) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.update',V_27x_27) = s('type.holSyntax.update','const.holSyntax.ConstSpec_2'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),V_27x_7c49_7c___7c49_7c_27),s('type.holSyntax.term',V_27x_7c49_7c__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),'fun'('type.holSyntax.term','bool')),V_27b_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),V_27x_7c49_7c___7c49_7c_27))),s('type.holSyntax.term',V_27x_7c49_7c__2_27))))) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.update',V_27x_27) = s('type.holSyntax.update','const.holSyntax.TypeDefn_4'(s('type.mlstring.mlstring',V_27x2___7c49_7c_27),s('type.holSyntax.term',V_27x2__2_27),s('type.mlstring.mlstring',V_27x2__3_27),s('type.mlstring.mlstring',V_27x2__4_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'happ'(s('fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool'))),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')))),V_27b2_27),s('type.mlstring.mlstring',V_27x2___7c49_7c_27))),s('type.holSyntax.term',V_27x2__2_27))),s('type.mlstring.mlstring',V_27x2__3_27))),s('type.mlstring.mlstring',V_27x2__4_27))))) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.update',V_27x_27) = s('type.holSyntax.update','const.holSyntax.NewType_2'(s('type.mlstring.mlstring',V_27x3___7c49_7c_27),s('type.num.num',V_27x3__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.num.num','bool')),V_27b3_27),s('type.mlstring.mlstring',V_27x3___7c49_7c_27))),s('type.num.num',V_27x3__2_27))))) & ((?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.update',V_27x_27) = s('type.holSyntax.update','const.holSyntax.NewConst_2'(s('type.mlstring.mlstring',V_27x4___7c49_7c_27),s('type.holSyntax.type',V_27x4__2_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','bool')),V_27b4_27),s('type.mlstring.mlstring',V_27x4___7c49_7c_27))),s('type.holSyntax.type',V_27x4__2_27))))) & (?[Vv]: ((p(s('bool',Vv)) <=> s('type.holSyntax.update',V_27x_27) = s('type.holSyntax.update','const.holSyntax.NewAxiom_1'(s('type.holSyntax.term',V_27x5___7c49_7c_27)))) & p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',Vv))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),V_27b5_27),s('type.holSyntax.term',V_27x5___7c49_7c_27)))))))))) => p(s('bool','const.ml_monad.EvalM_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27exp_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n_7c49_7c__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp_7c49_7c_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2__2_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2__3_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n2__4_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))))))),s('type.ast.exp',V_27exp2_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n3___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n3__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp3_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n4___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n4__2_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))),s('type.ast.exp',V_27exp4_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27n5___7c49_7c_27))),s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))),s('type.ast.exp',V_27exp5_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))))))))))),s('fun'('type.pair.prod'('type.holKernel.hol_refs','type.semanticPrimitives.state'('type.one.one')),'fun'('type.pair.prod'('type.holKernel.hol_refs','type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'bool')),'const.ml_monad.HOL_MONAD_2'(s('fun'(V_27RETURN__TYPE_27,'fun'('type.semanticPrimitives.v','bool')),V_27return__type_27),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')),'const.holSyntax.update_CASE_6'(s('type.holSyntax.update',V_27x_27),s('fun'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.term')),'fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f_7c49_7c_27),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))))),V_27f2_27),s('fun'('type.mlstring.mlstring','fun'('type.num.num','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f3_27),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs')))),V_27f4_27),s('fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'(V_27RETURN__TYPE_27),'type.holKernel.hol_refs'))),V_27f5_27))))))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_2|49|_prove_ltb', axiom, ![V_27a_27]: (p(s('bool',V_27a_27)) => s('bool',V_27a_27) = s('bool','T_0'))).
fof('thm.ml_hol_kernel.ml_hol_kernel_56_prove_ltb', axiom, ![V_27x2_27, V_27x_7c49_7c_27]: s('bool','const.mlstring.mlstring_lt_2'(s('type.mlstring.mlstring',V_27x_7c49_7c_27),s('type.mlstring.mlstring',V_27x2_27))) = s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27x_7c49_7c_27))),s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27x2_27)))))).
fof('thm.ml_hol_kernel.CPN_TYPE_def|split|0', axiom, ![V_27v_27]: (p(s('bool','const.ml_hol_kernel.CPN_TYPE_2'(s('type.toto.cpn','const.toto.GREATER_0'),s('type.semanticPrimitives.v',V_27v_27)))) <=> s('type.semanticPrimitives.v',V_27v_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))).
fof('thm.ml_hol_kernel.CPN_TYPE_def|split|1', axiom, ![V_27v_27]: (p(s('bool','const.ml_hol_kernel.CPN_TYPE_2'(s('type.toto.cpn','const.toto.EQUAL_0'),s('type.semanticPrimitives.v',V_27v_27)))) <=> s('type.semanticPrimitives.v',V_27v_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))).
fof('thm.ml_hol_kernel.CPN_TYPE_def|split|2', axiom, ![V_27v_27]: (p(s('bool','const.ml_hol_kernel.CPN_TYPE_2'(s('type.toto.cpn','const.toto.LESS_0'),s('type.semanticPrimitives.v',V_27v_27)))) <=> s('type.semanticPrimitives.v',V_27v_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49||48|5_prove_ltb', axiom, ![V_27a_27]: (?[V_27v_27, V_27ty_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'),'const.pair.,_2'(s('type.mlstring.mlstring',V_27v_27),s('type.holSyntax.type',V_27ty_27))))) => ?[V_27v_27, V_27ty_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'),'const.pair.,_2'(s('type.mlstring.mlstring',V_27v_27),s('type.holSyntax.type',V_27ty_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|32_prove_ltb', axiom, ![V_27a_27]: (?[V_27asl_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.holKernel.thm'),V_27a_27) = s('type.pair.prod'('type.one.one','type.holKernel.thm'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27c_27))))) => ?[V_27asl_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.holKernel.thm'),V_27a_27) = s('type.pair.prod'('type.one.one','type.holKernel.thm'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27c_27))))))).
fof('_dst_x00000x11010x00000x10101x00000_ax', axiom, ![VA,VA2,VA4,VA6,VA7,VA3,VA5,VA8,VA1,VA9]: ![V__x, V__0, V__1, V__2, V__3, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11010x00000x10101x00000_5'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA6))),V__0),s(VA7,V__1),s('fun'(VA1,'fun'(VA3,'fun'(VA5,VA8))),V__2),s(VA9,V__3))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))),V__x),s('fun'(VA2,'fun'(VA4,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA6))),V__0),s(VA1,V__z))),s(VA7,V__1),s('fun'(VA3,'fun'(VA5,VA8)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA5,VA8))),V__2),s(VA1,V__z))),s(VA9,V__3)))).
fof('_dst_x00000x01010x00000x10101x00000_ax', axiom, ![VA,VA2,VA4,VA6,VA7,VA3,VA5,VA8,VA1,VA9]: ![V__x, V__0, V__1, V__2, V__3, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x01010x00000x10101x00000_5'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))),V__x),s('fun'(VA2,'fun'(VA4,VA6)),V__0),s(VA7,V__1),s('fun'(VA1,'fun'(VA3,'fun'(VA5,VA8))),V__2),s(VA9,V__3))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))),V__x),s('fun'(VA2,'fun'(VA4,VA6)),V__0),s(VA7,V__1),s('fun'(VA3,'fun'(VA5,VA8)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA5,VA8))),V__2),s(VA1,V__z))),s(VA9,V__3)))).
fof('thm.ml_hol_kernel.type_compare_UNION_AUX_def', axiom, ![V_27R_27]: s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'const.ml_hol_kernel.type_compare_UNION_aux_1'(s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),V_27R_27))) = s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'const.relation.WFREC_2'(s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),V_27R_27),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn')),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.toto.cpn'),'fun'('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'type.toto.cpn'),'type.toto.cpn'))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.toto.cpn')),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'fun'('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'type.toto.cpn')),'const.pair.pair_CASE_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn'))),'_dst_x000x111_2'(s('fun'('type.toto.cpn','type.toto.cpn'),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn'))),'_dst_x000x011x100_3'(s('fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'fun'('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'type.toto.cpn')),'const.pair.pair_CASE_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn'))),'_dst_x000x010x001x101_4'(s('fun'('type.holSyntax.type','fun'('fun'('type.mlstring.mlstring','type.toto.cpn'),'fun'('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.holSyntax.type_CASE_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'),s('fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','type.toto.cpn')),'_dst_x00x10x01x00_4'(s('fun'('type.holSyntax.type','fun'('fun'('type.mlstring.mlstring','type.toto.cpn'),'fun'('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.holSyntax.type_CASE_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'_dst_x0_1'(s('fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')))),'_dst_x0000x0100x0000x1011_4'(s('fun'('type.holSyntax.type','fun'('fun'('type.mlstring.mlstring','type.toto.cpn'),'fun'('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.holSyntax.type_CASE_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'),s('fun'('type.mlstring.mlstring','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))))),'_dst_x00000x01010x00000x10101x00000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'))))),s('type.toto.cpn','const.toto.GREATER_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'type.toto.cpn')),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'fun'('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn')),'const.pair.pair_CASE_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))),'_dst_x000x111_2'(s('fun'('type.toto.cpn','type.toto.cpn'),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))),'_dst_x000x011x100_3'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'fun'('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn')),'const.pair.pair_CASE_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))),'_dst_x000x010x001x101_4'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.toto.cpn','fun'('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.toto.cpn','fun'('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.list.list_CASE_0'),s('type.toto.cpn','const.toto.EQUAL_0'),s('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'_dst_x0_1'(s('fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')))),'_dst_x0000x0100x0000x1011_4'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.toto.cpn','fun'('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'),s('type.toto.cpn','const.toto.GREATER_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))))),'_dst_x00000x11010x00000x10101x00000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn'))),'_dstsel_0_x011_1'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INL_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_0'))))),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'))))),s('type.toto.cpn','const.toto.GREATER_0')))))))))))))))))).
fof('ARITY_0_1_const.ml_hol_kernel.type_compare_UNION', axiom, ![VV0]: s('type.toto.cpn','happ'(s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'const.ml_hol_kernel.type_compare_UNION_0'),s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),VV0))) = s('type.toto.cpn','const.ml_hol_kernel.type_compare_UNION_1'(s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),VV0)))).
fof('ARITY_0_1_const.ml_hol_kernel.type_compare_UNION_aux', axiom, ![VV0]: s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'happ'(s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn')),'const.ml_hol_kernel.type_compare_UNION_aux_0'),s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),VV0))) = s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'const.ml_hol_kernel.type_compare_UNION_aux_1'(s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),VV0)))).
fof('_dst_x000000x101100x011011_ax', axiom, ![VA,VA4,VA7,VA1,VA2,VA3,VA5,VA6,VA8]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x101100x011011_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,VA7))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,VA8)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x01100x11011_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA3,'fun'(VA4,VA7)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,VA7))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,VA8)))),V__1)))).
fof('_dst_x000000x101100x010011_ax', axiom, ![VA,VA3,VA4,VA7,VA1,VA2,VA5,VA6,VA8]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x101100x010011_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,VA7))),V__0),s('fun'(VA2,'fun'(VA5,'fun'(VA6,VA8))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x01100x10011_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA3,'fun'(VA4,VA7)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,VA7))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA5,'fun'(VA6,VA8))),V__1)))).
fof('_dst_x0000000x1111111x1001010_ax', axiom, ![VA,VA2,VA3,VA5,VA7,VA8,VA4,VA6,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1111111x1001010_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8))))))),V__0),s('fun'(VA1,'fun'(VA4,'fun'(VA6,VA9))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111111x001010_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8))))))),V__0),s(VA1,V__z))),s('fun'(VA4,'fun'(VA6,VA9)),'happ'(s('fun'(VA1,'fun'(VA4,'fun'(VA6,VA9))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000x1111111x1000101_ax', axiom, ![VA,VA2,VA3,VA4,VA6,VA8,VA5,VA7,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1111111x1000101_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8))))))),V__0),s('fun'(VA1,'fun'(VA5,'fun'(VA7,VA9))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111111x000101_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8))))))),V__0),s(VA1,V__z))),s('fun'(VA5,'fun'(VA7,VA9)),'happ'(s('fun'(VA1,'fun'(VA5,'fun'(VA7,VA9))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000x0101100x1011011_ax', axiom, ![VA,VA2,VA5,VA8,VA3,VA4,VA6,VA7,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x0101100x1011011_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,VA8))),V__0),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA6,'fun'(VA7,VA9))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x101100x011011_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,VA8))),V__0),s('fun'(VA3,'fun'(VA4,'fun'(VA6,'fun'(VA7,VA9)))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA6,'fun'(VA7,VA9))))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x11111111x11001010_ax', axiom, ![VA,VA3,VA4,VA6,VA8,VA9,VA2,VA5,VA7,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x11111111x11001010_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9)))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA5,'fun'(VA7,VA10)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x1111111x1001010_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9)))))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA5,'fun'(VA7,VA10))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA5,'fun'(VA7,VA10)))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x11111111x11000101_ax', axiom, ![VA,VA3,VA4,VA5,VA7,VA9,VA2,VA6,VA8,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x11111111x11000101_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9)))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA6,'fun'(VA8,VA10)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x1111111x1000101_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9)))))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA6,'fun'(VA8,VA10))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA6,'fun'(VA8,VA10)))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000000x111111111x111000101_ax', axiom, ![VA,VA4,VA5,VA6,VA8,VA10,VA2,VA3,VA7,VA9,VA11,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))))),'_dst_x000000000x111111111x111000101_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA10))))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA7,'fun'(VA9,VA11))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'_dst_x00000000x11111111x11000101_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA10)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA10))))))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA7,'fun'(VA9,VA11)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA7,'fun'(VA9,VA11))))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000000x011111111x111001010_ax', axiom, ![VA,VA4,VA5,VA7,VA9,VA10,VA2,VA3,VA6,VA8,VA11,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))))),'_dst_x000000000x011111111x111001010_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA10)))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,'fun'(VA8,VA11))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'_dst_x00000000x11111111x11001010_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA10)))))))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA6,'fun'(VA8,VA11)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,'fun'(VA8,VA11))))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000000x011111111x111000101_ax', axiom, ![VA,VA4,VA5,VA6,VA8,VA10,VA2,VA3,VA7,VA9,VA11,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))))),'_dst_x000000000x011111111x111000101_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA10)))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA7,'fun'(VA9,VA11))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'_dst_x00000000x11111111x11000101_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA10)))))))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA7,'fun'(VA9,VA11)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA7,'fun'(VA9,VA11))))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000000x011110000x100111111_ax', axiom, ![VA,VA2,VA3,VA10,VA4,VA5,VA6,VA7,VA8,VA9,VA11,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))))),'_dst_x000000000x011110000x100111111_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA10)))),V__0),s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA11))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'_dst_x00000000x11110000x00111111_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA10)))),V__0),s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA11)))))),'happ'(s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA11))))))),V__1),s(VA1,V__z)))))).
fof('thm.ml_hol_kernel.type_compare_UNION_primitive_def', axiom, s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'const.ml_hol_kernel.type_compare_UNION_0') = s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn'),'happ'(s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn')),'const.ml_hol_kernel.type_compare_UNION_aux_0'),s('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'const.min.@_1'(s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.holSyntax.type','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.holSyntax.type','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.holSyntax.type','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.holSyntax.type','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.mlstring.mlstring','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.mlstring.mlstring','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.mlstring.mlstring','bool')))))))),'_dst_x00000000x11111111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool'))))))))),'_dst_x000000000x011111111x111000101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool')))))))),'_dst_x00000000x11110000x00111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')))),'_dst_x0000x1100x0011_3'(s('fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'bool')),'=_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'_dst_x01x10_2'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'))),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_0'))),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool')))))),'_dst_x000000x101100x011011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),'=_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.holSyntax.type')),'const.holSyntax.Tyapp_0'))),s('fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool')))),'_dst_x0000x1011x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),'=_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.holSyntax.type')),'const.holSyntax.Tyapp_0'))),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'_dst_x00x11x00_3'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','bool')),'=_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('type.toto.cpn','const.toto.EQUAL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool'))))),'_dstsel_0_x00011x01100_2'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'))),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INL_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'_dst_x01x10_2'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.holSyntax.type','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.holSyntax.type','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','bool')))))))),'_dst_x00000000x11111111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))))))))),'_dst_x000000000x111111111x111000101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))))))))),'_dst_x000000000x011110000x100111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')))),'_dst_x0000x1100x0011_3'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'bool')),'=_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'))),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))))))),'_dst_x0000000x0101100x1011011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),'=_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'),s('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))))),'_dst_x00000x01011x10110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),'=_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'),s('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool'))),'_dst_x000x111x000_3'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','bool')),'=_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn'))),'_dst_x000x100x011_3'(s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'type.toto.cpn')),'const.ml_hol_kernel.type_compare_UNION_aux_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool'))),'_i_0_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INL_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_0'))))),s('type.toto.cpn','const.toto.EQUAL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool'))))),'_dstsel_0_x00011x01100_2'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'))),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.holSyntax.type','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.holSyntax.type','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','bool')))))))),'_dst_x00000000x11111111_2'(s('fun'('fun'('type.list.list'('type.holSyntax.type'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))))))))),'_dst_x000000000x011111111x111001010_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool')))))))),'_dst_x00000000x11110000x00111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')))),'_dst_x0000x1100x0011_3'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'bool')),'=_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'))),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'))),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool')))))),'_dst_x000000x101100x010011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),'=_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'),s('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),'=_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'),s('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.list.CONS_0'))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'fun'('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'bool')),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool'))))),'_dstsel_0_x00011x01100_2'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INL_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_0'))),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')))),'const.pair.,_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0')))))))))))))))))))))))))))))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|6|48|_prove_ltb', axiom, ![V_27a_27]: ((?[V_27t_7c49_7c_27, V_27t2_27]: s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.sum.INL_1'(s('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'const.pair.,_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.holSyntax.type',V_27t2_27))))) | ?[V_27ts_7c49_7c_27, V_27ts2_27]: s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_27)))))) => (?[V_27t_7c49_7c_27, V_27t2_27]: s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.sum.INL_1'(s('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'const.pair.,_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.holSyntax.type',V_27t2_27))))) | ?[V_27ts_7c49_7c_27, V_27ts2_27]: s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_27)))))))).
fof('ARITY_0_2_const.ml_hol_kernel.type_list_compare', axiom, ![VV0, VV1]: s('type.toto.cpn','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'const.ml_hol_kernel.type_list_compare_0'),s('type.list.list'('type.holSyntax.type'),VV0))),s('type.list.list'('type.holSyntax.type'),VV1))) = s('type.toto.cpn','const.ml_hol_kernel.type_list_compare_2'(s('type.list.list'('type.holSyntax.type'),VV0),s('type.list.list'('type.holSyntax.type'),VV1)))).
fof('thm.ml_hol_kernel.type_compare_UNION_extract|49|_def', axiom, ![V_27x_27, V_27x_7c49_7c_27]: s('type.toto.cpn','const.ml_hol_kernel.type_list_compare_2'(s('type.list.list'('type.holSyntax.type'),V_27x_27),s('type.list.list'('type.holSyntax.type'),V_27x_7c49_7c_27))) = s('type.toto.cpn','const.ml_hol_kernel.type_compare_UNION_1'(s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27x_27),s('type.list.list'('type.holSyntax.type'),V_27x_7c49_7c_27)))))))).
fof('thm.ml_hol_kernel.type_compare_UNION_extract|48|_def', axiom, ![V_27x_27, V_27x_7c49_7c_27]: s('type.toto.cpn','const.ml_hol_kernel.type_compare_2'(s('type.holSyntax.type',V_27x_27),s('type.holSyntax.type',V_27x_7c49_7c_27))) = s('type.toto.cpn','const.ml_hol_kernel.type_compare_UNION_1'(s('type.sum.sum'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type'))),'const.sum.INL_1'(s('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'const.pair.,_2'(s('type.holSyntax.type',V_27x_27),s('type.holSyntax.type',V_27x_7c49_7c_27)))))))).
fof('ARITY_0_2_const.mlstring.mlstring_cmp', axiom, ![VV0, VV1]: s('type.toto.cpn','happ'(s('fun'('type.mlstring.mlstring','type.toto.cpn'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('type.mlstring.mlstring',VV0))),s('type.mlstring.mlstring',VV1))) = s('type.toto.cpn','const.mlstring.mlstring_cmp_2'(s('type.mlstring.mlstring',VV0),s('type.mlstring.mlstring',VV1)))).
fof('thm.ml_hol_kernel.type_compare_ind', axiom, ![V_27P_7c48_7c_27, V_27P_7c49_7c_27]: ((![V_27t_7c49_7c_27, V_27t2_27]: (![V_27v_27, V_27v_7c49_7c_27, V_27x_7c49_7c_7c39_7c_27, V_27a_7c49_7c_27, V_27x2_7c39_7c_27, V_27a2_27]: ((s('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'const.pair.,_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.holSyntax.type',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'const.pair.,_2'(s('type.holSyntax.type',V_27v_27),s('type.holSyntax.type',V_27v_7c49_7c_27))) & (s('type.holSyntax.type',V_27v_27) = s('type.holSyntax.type','const.holSyntax.Tyapp_2'(s('type.mlstring.mlstring',V_27x_7c49_7c_7c39_7c_27),s('type.list.list'('type.holSyntax.type'),V_27a_7c49_7c_27))) & (s('type.holSyntax.type',V_27v_7c49_7c_27) = s('type.holSyntax.type','const.holSyntax.Tyapp_2'(s('type.mlstring.mlstring',V_27x2_7c39_7c_27),s('type.list.list'('type.holSyntax.type'),V_27a2_27))) & s('type.toto.cpn','const.mlstring.mlstring_cmp_2'(s('type.mlstring.mlstring',V_27x_7c49_7c_7c39_7c_27),s('type.mlstring.mlstring',V_27x2_7c39_7c_27))) = s('type.toto.cpn','const.toto.EQUAL_0')))) => p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27a_7c49_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27a2_27))))) => p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),V_27P_7c48_7c_27),s('type.holSyntax.type',V_27t_7c49_7c_27))),s('type.holSyntax.type',V_27t2_27))))) & ![V_27ts_7c49_7c_27, V_27ts2_27]: ((![V_27v_27, V_27v_7c49_7c_27, V_27t_7c49_7c_27, V_27ts_7c49_7c_7c39_7c_27, V_27t2_7c39_7c_27, V_27ts2_7c39_7c_27]: ((s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_27))) = s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27v_27),s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27))) & (s('type.list.list'('type.holSyntax.type'),V_27v_27) = s('type.list.list'('type.holSyntax.type'),'const.list.CONS_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_7c39_7c_27))) & (s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27) = s('type.list.list'('type.holSyntax.type'),'const.list.CONS_2'(s('type.holSyntax.type',V_27t2_7c39_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_7c39_7c_27))) & s('type.toto.cpn','const.ml_hol_kernel.type_compare_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.holSyntax.type',V_27t2_7c39_7c_27))) = s('type.toto.cpn','const.toto.EQUAL_0')))) => p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_7c39_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27ts2_7c39_7c_27))))) & ![V_27v_27, V_27v_7c49_7c_27, V_27t_7c49_7c_27, V_27ts_7c49_7c_7c39_7c_27, V_27t2_7c39_7c_27, V_27ts2_7c39_7c_27]: ((s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_27))) = s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27v_27),s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27))) & (s('type.list.list'('type.holSyntax.type'),V_27v_27) = s('type.list.list'('type.holSyntax.type'),'const.list.CONS_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_7c39_7c_27))) & s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27) = s('type.list.list'('type.holSyntax.type'),'const.list.CONS_2'(s('type.holSyntax.type',V_27t2_7c39_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_7c39_7c_27))))) => p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),V_27P_7c48_7c_27),s('type.holSyntax.type',V_27t_7c49_7c_27))),s('type.holSyntax.type',V_27t2_7c39_7c_27)))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27ts2_27)))))) => (![V_27v_7c48_7c_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),V_27P_7c48_7c_27),s('type.holSyntax.type',V_27v_7c48_7c_27))),s('type.holSyntax.type',V_27v_7c49_7c_27)))) & ![V_27v_7c48_7c_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27v_7c48_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27))))))).
fof('thm.ml_hol_kernel.type_compare_def|split|0', axiom, ![V_27t2_27, V_27t_7c49_7c_27]: s('type.toto.cpn','const.ml_hol_kernel.type_compare_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.holSyntax.type',V_27t2_27))) = s('type.toto.cpn','const.pair.pair_CASE_2'(s('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'const.pair.,_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.holSyntax.type',V_27t2_27))),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x00x10x01x01_4'(s('fun'('type.holSyntax.type','fun'('fun'('type.mlstring.mlstring','type.toto.cpn'),'fun'('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.holSyntax.type_CASE_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'),s('fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','type.toto.cpn')),'_dst_x00x10x01x00_4'(s('fun'('type.holSyntax.type','fun'('fun'('type.mlstring.mlstring','type.toto.cpn'),'fun'('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.holSyntax.type_CASE_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'_dst_x0_1'(s('fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))),'_dst_x000x100x000x011_4'(s('fun'('type.holSyntax.type','fun'('fun'('type.mlstring.mlstring','type.toto.cpn'),'fun'('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.holSyntax.type_CASE_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'),s('fun'('type.mlstring.mlstring','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))),s('fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.mlstring.mlstring','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'const.ml_hol_kernel.type_list_compare_0'),s('type.toto.cpn','const.toto.GREATER_0')))))))))).
fof('ARITY_0_2_const.ml_hol_kernel.type_compare', axiom, ![VV0, VV1]: s('type.toto.cpn','happ'(s('fun'('type.holSyntax.type','type.toto.cpn'),'happ'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.ml_hol_kernel.type_compare_0'),s('type.holSyntax.type',VV0))),s('type.holSyntax.type',VV1))) = s('type.toto.cpn','const.ml_hol_kernel.type_compare_2'(s('type.holSyntax.type',VV0),s('type.holSyntax.type',VV1)))).
fof('thm.ml_hol_kernel.type_compare_def|split|1', axiom, ![V_27ts2_27, V_27ts_7c49_7c_27]: s('type.toto.cpn','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'const.ml_hol_kernel.type_list_compare_0'),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27ts2_27))) = s('type.toto.cpn','const.pair.pair_CASE_2'(s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_27))),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'_dst_x00x10x01x01_4'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.toto.cpn','fun'('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.toto.cpn','fun'('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.list.list_CASE_0'),s('type.toto.cpn','const.toto.EQUAL_0'),s('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'_dst_x0_1'(s('fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn'))),'_dst_x000x100x000x011_4'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.toto.cpn','fun'('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'type.toto.cpn'))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'_i_0_0'),s('type.toto.cpn','const.toto.GREATER_0'),s('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.ml_hol_kernel.type_compare_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'const.ml_hol_kernel.type_list_compare_0'),s('type.toto.cpn','const.toto.GREATER_0')))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|65_prove_ltb|split|0', axiom, s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.holSyntax.type_cmp_0') = s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.ml_hol_kernel.type_compare_0')).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|65_prove_ltb|split|1', axiom, s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'const.comparison.list_cmp_1'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.holSyntax.type_cmp_0'))) = s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'type.toto.cpn')),'const.ml_hol_kernel.type_list_compare_0')).
fof('thm.ml_hol_kernel.type_cmp_ind', axiom, ![V_27P_7c48_7c_27, V_27P_7c49_7c_27]: ((![V_27t_7c49_7c_27, V_27t2_27]: (![V_27v_27, V_27v_7c49_7c_27, V_27x_7c49_7c_7c39_7c_27, V_27a_7c49_7c_27, V_27x2_7c39_7c_27, V_27a2_27]: ((s('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'const.pair.,_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.holSyntax.type',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'),'const.pair.,_2'(s('type.holSyntax.type',V_27v_27),s('type.holSyntax.type',V_27v_7c49_7c_27))) & (s('type.holSyntax.type',V_27v_27) = s('type.holSyntax.type','const.holSyntax.Tyapp_2'(s('type.mlstring.mlstring',V_27x_7c49_7c_7c39_7c_27),s('type.list.list'('type.holSyntax.type'),V_27a_7c49_7c_27))) & (s('type.holSyntax.type',V_27v_7c49_7c_27) = s('type.holSyntax.type','const.holSyntax.Tyapp_2'(s('type.mlstring.mlstring',V_27x2_7c39_7c_27),s('type.list.list'('type.holSyntax.type'),V_27a2_27))) & s('type.toto.cpn','const.mlstring.mlstring_cmp_2'(s('type.mlstring.mlstring',V_27x_7c49_7c_7c39_7c_27),s('type.mlstring.mlstring',V_27x2_7c39_7c_27))) = s('type.toto.cpn','const.toto.EQUAL_0')))) => p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27a_7c49_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27a2_27))))) => p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),V_27P_7c48_7c_27),s('type.holSyntax.type',V_27t_7c49_7c_27))),s('type.holSyntax.type',V_27t2_27))))) & ![V_27ts_7c49_7c_27, V_27ts2_27]: ((![V_27v_27, V_27v_7c49_7c_27, V_27t_7c49_7c_27, V_27ts_7c49_7c_7c39_7c_27, V_27t2_7c39_7c_27, V_27ts2_7c39_7c_27]: ((s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_27))) = s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27v_27),s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27))) & (s('type.list.list'('type.holSyntax.type'),V_27v_27) = s('type.list.list'('type.holSyntax.type'),'const.list.CONS_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_7c39_7c_27))) & (s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27) = s('type.list.list'('type.holSyntax.type'),'const.list.CONS_2'(s('type.holSyntax.type',V_27t2_7c39_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_7c39_7c_27))) & s('type.toto.cpn','const.holSyntax.type_cmp_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.holSyntax.type',V_27t2_7c39_7c_27))) = s('type.toto.cpn','const.toto.EQUAL_0')))) => p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_7c39_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27ts2_7c39_7c_27))))) & ![V_27v_27, V_27v_7c49_7c_27, V_27t_7c49_7c_27, V_27ts_7c49_7c_7c39_7c_27, V_27t2_7c39_7c_27, V_27ts2_7c39_7c_27]: ((s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_27))) = s('type.pair.prod'('type.list.list'('type.holSyntax.type'),'type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.list.list'('type.holSyntax.type'),V_27v_27),s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27))) & (s('type.list.list'('type.holSyntax.type'),V_27v_27) = s('type.list.list'('type.holSyntax.type'),'const.list.CONS_2'(s('type.holSyntax.type',V_27t_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_7c39_7c_27))) & s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27) = s('type.list.list'('type.holSyntax.type'),'const.list.CONS_2'(s('type.holSyntax.type',V_27t2_7c39_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts2_7c39_7c_27))))) => p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),V_27P_7c48_7c_27),s('type.holSyntax.type',V_27t_7c49_7c_27))),s('type.holSyntax.type',V_27t2_7c39_7c_27)))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27ts_7c49_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27ts2_27)))))) => (![V_27v_7c48_7c_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.holSyntax.type','bool'),'happ'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),V_27P_7c48_7c_27),s('type.holSyntax.type',V_27v_7c48_7c_27))),s('type.holSyntax.type',V_27v_7c49_7c_27)))) & ![V_27v_7c48_7c_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.holSyntax.type'),'bool'),'happ'(s('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.holSyntax.type'),V_27v_7c48_7c_27))),s('type.list.list'('type.holSyntax.type'),V_27v_7c49_7c_27))))))).
fof('_dst_x000x010x001x001x101x101_ax', axiom, ![VA,VA2,VA4,VA5,VA6,VA7,VA3,VA8,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x010x001x001x101x101_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s('fun'(VA2,VA4),V__0),s('fun'(VA3,VA5),V__1),s('fun'(VA3,VA6),V__2),s('fun'(VA1,'fun'(VA3,VA7)),V__3),s('fun'(VA1,'fun'(VA3,VA8)),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x10x01x01x01x01_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s('fun'(VA2,VA4),V__0),s('fun'(VA3,VA5),V__1),s('fun'(VA3,VA6),V__2),s('fun'(VA3,VA7),'happ'(s('fun'(VA1,'fun'(VA3,VA7)),V__3),s(VA1,V__z))),s('fun'(VA3,VA8),'happ'(s('fun'(VA1,'fun'(VA3,VA8)),V__4),s(VA1,V__z)))))).
fof('thm.ml_hol_kernel.term_compare_tupled_AUX_def', axiom, ![V_27R_27]: s('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'const.ml_hol_kernel.term_compare_tupled_aux_1'(s('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'bool')),V_27R_27))) = s('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'const.relation.WFREC_2'(s('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'bool')),V_27R_27),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn')),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn')),'const.pair.pair_CASE_0'),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dst_x000x111_2'(s('fun'('type.toto.cpn','type.toto.cpn'),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dst_x000x011x100_3'(s('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn')),'const.pair.pair_CASE_0'),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.pair.prod'('type.holSyntax.term','type.holSyntax.term'))),'const.pair.,_0'),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dst_x000x010x001x001x101x101_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn'))),'_dst_x000x100x011x000x000x000_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.holSyntax.type_cmp_0'),s('type.toto.cpn','const.toto.GREATER_0'))),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn'))),'_dst_x000x100x000x011x000x000_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.holSyntax.type_cmp_0'),s('type.toto.cpn','const.toto.GREATER_0'))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')))),'_dst_x0000x0100x0000x0000x1011x0000_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))))),'_dst_x00000x11010x00000x10101x00000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dstsel_0_x011_1'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.pair.prod'('type.holSyntax.term','type.holSyntax.term'))),'const.pair.,_0'))),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dstsel_0_x011_1'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.pair.prod'('type.holSyntax.term','type.holSyntax.term'))),'const.pair.,_0'))),s('type.toto.cpn','const.toto.GREATER_0'))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')))),'_dst_x0000x0100x0000x0000x0000x1011_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))))),'_dst_x00000x11010x00000x10101x00000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dstsel_0_x011_1'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.pair.prod'('type.holSyntax.term','type.holSyntax.term'))),'const.pair.,_0'))),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('fun'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'type.toto.cpn'),'fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dstsel_0_x011_1'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.pair.prod'('type.holSyntax.term','type.holSyntax.term'))),'const.pair.,_0'))),s('type.toto.cpn','const.toto.GREATER_0')))))))))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|72_prove_ltb', axiom, ![V_27a_27]: (?[V_27t_7c49_7c_27, V_27t2_27]: s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),V_27a_27) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) => ?[V_27t_7c49_7c_27, V_27t2_27]: s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),V_27a_27) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))))).
fof('ARITY_0_2_const.ml_hol_kernel.term_compare', axiom, ![VV0, VV1]: s('type.toto.cpn','happ'(s('fun'('type.holSyntax.term','type.toto.cpn'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'const.ml_hol_kernel.term_compare_0'),s('type.holSyntax.term',VV0))),s('type.holSyntax.term',VV1))) = s('type.toto.cpn','const.ml_hol_kernel.term_compare_2'(s('type.holSyntax.term',VV0),s('type.holSyntax.term',VV1)))).
fof('thm.ml_hol_kernel.term_compare_ind', axiom, ![V_27P_27]: (![V_27t_7c49_7c_27, V_27t2_27]: ((![V_27v_27, V_27v_7c49_7c_27, V_27s_7c49_7c_7c39_7c_27, V_27t_7c49_7c_7c39_7c_27, V_27s2_7c39_7c_27, V_27t2_7c39_7c_27]: ((s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holSyntax.term',V_27v_7c49_7c_27))) & (s('type.holSyntax.term',V_27v_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27s_7c49_7c_7c39_7c_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))) & (s('type.holSyntax.term',V_27v_7c49_7c_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27s2_7c39_7c_27),s('type.holSyntax.term',V_27t2_7c39_7c_27))) & s('type.toto.cpn','const.ml_hol_kernel.term_compare_2'(s('type.holSyntax.term',V_27s_7c49_7c_7c39_7c_27),s('type.holSyntax.term',V_27s2_7c39_7c_27))) = s('type.toto.cpn','const.toto.EQUAL_0')))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))),s('type.holSyntax.term',V_27t2_7c39_7c_27))))) & (![V_27v_27, V_27v_7c49_7c_27, V_27s_7c49_7c_7c39_7c_27, V_27t_7c49_7c_7c39_7c_27, V_27s2_7c39_7c_27, V_27t2_7c39_7c_27]: ((s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holSyntax.term',V_27v_7c49_7c_27))) & (s('type.holSyntax.term',V_27v_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27s_7c49_7c_7c39_7c_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))) & s('type.holSyntax.term',V_27v_7c49_7c_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27s2_7c39_7c_27),s('type.holSyntax.term',V_27t2_7c39_7c_27))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27s_7c49_7c_7c39_7c_27))),s('type.holSyntax.term',V_27s2_7c39_7c_27))))) & (![V_27v_27, V_27v_7c49_7c_27, V_27s_7c49_7c_27, V_27t_7c49_7c_7c39_7c_27, V_27s2_27, V_27t2_7c39_7c_27]: ((s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holSyntax.term',V_27v_7c49_7c_27))) & (s('type.holSyntax.term',V_27v_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27s_7c49_7c_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))) & (s('type.holSyntax.term',V_27v_7c49_7c_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27s2_27),s('type.holSyntax.term',V_27t2_7c39_7c_27))) & s('type.toto.cpn','const.ml_hol_kernel.term_compare_2'(s('type.holSyntax.term',V_27s_7c49_7c_27),s('type.holSyntax.term',V_27s2_27))) = s('type.toto.cpn','const.toto.EQUAL_0')))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))),s('type.holSyntax.term',V_27t2_7c39_7c_27))))) & ![V_27v_27, V_27v_7c49_7c_27, V_27s_7c49_7c_27, V_27t_7c49_7c_7c39_7c_27, V_27s2_27, V_27t2_7c39_7c_27]: ((s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holSyntax.term',V_27v_7c49_7c_27))) & (s('type.holSyntax.term',V_27v_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27s_7c49_7c_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))) & s('type.holSyntax.term',V_27v_7c49_7c_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27s2_27),s('type.holSyntax.term',V_27t2_7c39_7c_27))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27s_7c49_7c_27))),s('type.holSyntax.term',V_27s2_27)))))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27t_7c49_7c_27))),s('type.holSyntax.term',V_27t2_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27v_27))),s('type.holSyntax.term',V_27v_7c49_7c_27)))))).
fof('thm.ml_hol_kernel.term_compare_def', axiom, ![V_27t2_27, V_27t_7c49_7c_27]: s('type.toto.cpn','happ'(s('fun'('type.holSyntax.term','type.toto.cpn'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'const.ml_hol_kernel.term_compare_0'),s('type.holSyntax.term',V_27t_7c49_7c_27))),s('type.holSyntax.term',V_27t2_27))) = s('type.toto.cpn','const.pair.pair_CASE_2'(s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x00x10x01x01x01x01_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn'))),'_dst_x000x100x011x000x000x000_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.holSyntax.type_cmp_0'),s('type.toto.cpn','const.toto.GREATER_0'))),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('type.holSyntax.term','fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn'))),'_dst_x000x100x000x011x000x000_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','type.toto.cpn')),'const.holSyntax.type_cmp_0'),s('type.toto.cpn','const.toto.GREATER_0'))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dst_x000x100x000x000x011x000_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'const.ml_hol_kernel.term_compare_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'const.ml_hol_kernel.term_compare_0'),s('type.toto.cpn','const.toto.GREATER_0'))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.LESS_0'))))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn'))),'_dst_x000x100x000x000x000x011_6'(s('fun'('type.holSyntax.term','fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'fun'('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'type.toto.cpn'))))),'const.holSyntax.term_CASE_0'),s('fun'('type.holSyntax.term','type.holSyntax.term'),'_i_0_0'),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.mlstring.mlstring','fun'('type.holSyntax.type','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.type','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'_dst_x0_1'(s('fun'('type.holSyntax.term','type.toto.cpn'),'_dst_x0_1'(s('type.toto.cpn','const.toto.GREATER_0'))))),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')))),'_dst_x0000x1010x0000x0101x0000_5'(s('fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','fun'('type.toto.cpn','type.toto.cpn')))),'const.toto.cpn_CASE_0'),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'const.ml_hol_kernel.term_compare_0'),s('type.toto.cpn','const.toto.LESS_0'),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'const.ml_hol_kernel.term_compare_0'),s('type.toto.cpn','const.toto.GREATER_0')))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_|49|76_prove_ltb', axiom, s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'const.holSyntax.term_cmp_0') = s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','type.toto.cpn')),'const.ml_hol_kernel.term_compare_0')).
fof('thm.ml_hol_kernel.term_cmp_ind', axiom, ![V_27P_27]: (![V_27t_7c49_7c_27, V_27t2_27]: ((![V_27v_27, V_27v_7c49_7c_27, V_27s_7c49_7c_7c39_7c_27, V_27t_7c49_7c_7c39_7c_27, V_27s2_7c39_7c_27, V_27t2_7c39_7c_27]: ((s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holSyntax.term',V_27v_7c49_7c_27))) & (s('type.holSyntax.term',V_27v_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27s_7c49_7c_7c39_7c_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))) & (s('type.holSyntax.term',V_27v_7c49_7c_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27s2_7c39_7c_27),s('type.holSyntax.term',V_27t2_7c39_7c_27))) & s('type.toto.cpn','const.holSyntax.term_cmp_2'(s('type.holSyntax.term',V_27s_7c49_7c_7c39_7c_27),s('type.holSyntax.term',V_27s2_7c39_7c_27))) = s('type.toto.cpn','const.toto.EQUAL_0')))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))),s('type.holSyntax.term',V_27t2_7c39_7c_27))))) & (![V_27v_27, V_27v_7c49_7c_27, V_27s_7c49_7c_7c39_7c_27, V_27t_7c49_7c_7c39_7c_27, V_27s2_7c39_7c_27, V_27t2_7c39_7c_27]: ((s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holSyntax.term',V_27v_7c49_7c_27))) & (s('type.holSyntax.term',V_27v_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27s_7c49_7c_7c39_7c_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))) & s('type.holSyntax.term',V_27v_7c49_7c_27) = s('type.holSyntax.term','const.holSyntax.Abs_2'(s('type.holSyntax.term',V_27s2_7c39_7c_27),s('type.holSyntax.term',V_27t2_7c39_7c_27))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27s_7c49_7c_7c39_7c_27))),s('type.holSyntax.term',V_27s2_7c39_7c_27))))) & (![V_27v_27, V_27v_7c49_7c_27, V_27s_7c49_7c_27, V_27t_7c49_7c_7c39_7c_27, V_27s2_27, V_27t2_7c39_7c_27]: ((s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holSyntax.term',V_27v_7c49_7c_27))) & (s('type.holSyntax.term',V_27v_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27s_7c49_7c_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))) & (s('type.holSyntax.term',V_27v_7c49_7c_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27s2_27),s('type.holSyntax.term',V_27t2_7c39_7c_27))) & s('type.toto.cpn','const.holSyntax.term_cmp_2'(s('type.holSyntax.term',V_27s_7c49_7c_27),s('type.holSyntax.term',V_27s2_27))) = s('type.toto.cpn','const.toto.EQUAL_0')))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))),s('type.holSyntax.term',V_27t2_7c39_7c_27))))) & ![V_27v_27, V_27v_7c49_7c_27, V_27s_7c49_7c_27, V_27t_7c49_7c_7c39_7c_27, V_27s2_27, V_27t2_7c39_7c_27]: ((s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27t_7c49_7c_27),s('type.holSyntax.term',V_27t2_27))) = s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holSyntax.term',V_27v_7c49_7c_27))) & (s('type.holSyntax.term',V_27v_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27s_7c49_7c_27),s('type.holSyntax.term',V_27t_7c49_7c_7c39_7c_27))) & s('type.holSyntax.term',V_27v_7c49_7c_27) = s('type.holSyntax.term','const.holSyntax.Comb_2'(s('type.holSyntax.term',V_27s2_27),s('type.holSyntax.term',V_27t2_7c39_7c_27))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27s_7c49_7c_27))),s('type.holSyntax.term',V_27s2_27)))))))) => p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27t_7c49_7c_27))),s('type.holSyntax.term',V_27t2_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),V_27P_27),s('type.holSyntax.term',V_27v_27))),s('type.holSyntax.term',V_27v_7c49_7c_27)))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_2|48|8_prove_ltb', axiom, ![V_27a_27]: (?[V_27bvar_27, V_27bod_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27bvar_27),s('type.holSyntax.term',V_27bod_27))))) => ?[V_27bvar_27, V_27bod_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27bvar_27),s('type.holSyntax.term',V_27bod_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_2|49|5_prove_ltb', axiom, ![V_27a_27]: (?[V_27tyop_27, V_27args_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.holSyntax.type'))),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.holSyntax.type'))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.mlstring.mlstring',V_27tyop_27),s('type.list.list'('type.holSyntax.type'),V_27args_27))))) => ?[V_27tyop_27, V_27args_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.holSyntax.type'))),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.holSyntax.type'))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.mlstring.mlstring',V_27tyop_27),s('type.list.list'('type.holSyntax.type'),V_27args_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_2|49|9_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c9478_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c9478_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_22|48|_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c948_7c49_7c_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c948_7c49_7c_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_22|49|_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c9484_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c9484_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_222_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c9488_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c9488_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_223_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c949_7c49_7c_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c949_7c49_7c_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_224_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c9494_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c9494_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_23|49|_prove_ltb', axiom, ![V_27a_7c39_7c_27]: (?[V_27f_27, V_27a_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),V_27a_7c39_7c_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27f_27),s('type.holSyntax.term',V_27a_27))))) => ?[V_27f_27, V_27a_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),V_27a_7c39_7c_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27f_27),s('type.holSyntax.term',V_27a_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_238_prove_ltb', axiom, ![V_27a_27]: (?[V_27name_27, V_27theta_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')))),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_2'(s('type.mlstring.mlstring',V_27name_27),s('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),V_27theta_27))))) => ?[V_27name_27, V_27theta_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')))),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type'))),'const.pair.,_2'(s('type.mlstring.mlstring',V_27name_27),s('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),V_27theta_27))))))).
fof('thm.ml_hol_kernel.fdM_def', axiom, ![V_27A_27]: s('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'type.option.option'(V_27A_27))),'const.ml_hol_kernel.fdM_0') = s('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'type.option.option'(V_27A_27))),'const.holKernel.first_dup_0')).
fof('thm.ml_hol_kernel.fdM_ind', axiom, ![V_27A_27]: ![V_27P_27]: (![V_27ls_27, V_27acc_27]: (![V_27h_27, V_27t_27]: ((s('type.list.list'(V_27A_27),V_27ls_27) = s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27h_27),s('type.list.list'(V_27A_27),V_27t_27))) & ~ (p(s('bool','const.ml_translator.MEMBER_2'(s(V_27A_27,V_27h_27),s('type.list.list'(V_27A_27),V_27acc_27)))))) => p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'bool')),V_27P_27),s('type.list.list'(V_27A_27),V_27t_27))),s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27h_27),s('type.list.list'(V_27A_27),V_27acc_27))))))) => p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'bool')),V_27P_27),s('type.list.list'(V_27A_27),V_27ls_27))),s('type.list.list'(V_27A_27),V_27acc_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'bool')),V_27P_27),s('type.list.list'(V_27A_27),V_27v_27))),s('type.list.list'(V_27A_27),V_27v_7c49_7c_27)))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_249_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c_7c49_7c8_7c48_7c3_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c_7c49_7c8_7c48_7c3_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_25|48|_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c_7c49_7c8_7c48_7c6_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c_7c49_7c8_7c48_7c6_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_25|49|_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c_7c49_7c8_7c48_7c9_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c_7c49_7c8_7c48_7c9_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_255_prove_ltb', axiom, ![V_27a_27]: (?[V_27name_27, V_27ty_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'),'const.pair.,_2'(s('type.mlstring.mlstring',V_27name_27),s('type.holSyntax.type',V_27ty_27))))) => ?[V_27name_27, V_27ty_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'),'const.pair.,_2'(s('type.mlstring.mlstring',V_27name_27),s('type.holSyntax.type',V_27ty_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_26|49|_prove_ltb', axiom, ![V_27a_27]: (?[V_27name_27, V_27arity_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.num.num')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.num.num'),'const.pair.,_2'(s('type.mlstring.mlstring',V_27name_27),s('type.num.num',V_27arity_27))))) => ?[V_27name_27, V_27arity_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.num.num')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.mlstring.mlstring','type.num.num'),'const.pair.,_2'(s('type.mlstring.mlstring',V_27name_27),s('type.num.num',V_27arity_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_265_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c22_7c48_7c9_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c22_7c48_7c9_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_266_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c22_7c49_7c2_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c22_7c49_7c2_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_267_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c22_7c49_7c5_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c22_7c49_7c5_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_276_prove_ltb', axiom, ![V_27a_27]: (?[V_27asl_7c49_7c_27, V_27eq_27, V_27asl2_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holKernel.thm','type.holKernel.thm'),'const.pair.,_2'(s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_7c49_7c_27),s('type.holSyntax.term',V_27eq_27))),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl2_27),s('type.holSyntax.term',V_27c_27))))))) => ?[V_27asl_7c49_7c_27, V_27eq_27, V_27asl2_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holKernel.thm','type.holKernel.thm'),'const.pair.,_2'(s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_7c49_7c_27),s('type.holSyntax.term',V_27eq_27))),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl2_27),s('type.holSyntax.term',V_27c_27))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_288_prove_ltb', axiom, ![V_27a_27]: (?[V_27l_27, V_27r_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27l_27),s('type.holSyntax.term',V_27r_27))))) => ?[V_27l_27, V_27r_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holSyntax.term','type.holSyntax.term'),'const.pair.,_2'(s('type.holSyntax.term',V_27l_27),s('type.holSyntax.term',V_27r_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_295_prove_ltb', axiom, ![V_27a_27]: (?[V_27asl_7c49_7c_27, V_27c_7c49_7c_27, V_27asl2_27, V_27c2_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holKernel.thm','type.holKernel.thm'),'const.pair.,_2'(s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_7c49_7c_27),s('type.holSyntax.term',V_27c_7c49_7c_27))),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl2_27),s('type.holSyntax.term',V_27c2_27))))))) => ?[V_27asl_7c49_7c_27, V_27c_7c49_7c_27, V_27asl2_27, V_27c2_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holKernel.thm','type.holKernel.thm'),'const.pair.,_2'(s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_7c49_7c_27),s('type.holSyntax.term',V_27c_7c49_7c_27))),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl2_27),s('type.holSyntax.term',V_27c2_27))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_3|48|7_prove_ltb', axiom, ![V_27a_27]: (?[V_27v_27, V_27asl_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holSyntax.term','type.holKernel.thm'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27c_27))))))) => ?[V_27v_27, V_27asl_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holSyntax.term','type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holSyntax.term','type.holKernel.thm'),'const.pair.,_2'(s('type.holSyntax.term',V_27v_27),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27c_27))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_32|48|_prove_ltb', axiom, ![V_27a_27]: (?[V_27eqs_27, V_27p_27]: s('type.pair.prod'('type.one.one','type.holKernel.thm'),V_27a_27) = s('type.pair.prod'('type.one.one','type.holKernel.thm'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27eqs_27),s('type.holSyntax.term',V_27p_27))))) => ?[V_27eqs_27, V_27p_27]: s('type.pair.prod'('type.one.one','type.holKernel.thm'),V_27a_27) = s('type.pair.prod'('type.one.one','type.holKernel.thm'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27eqs_27),s('type.holSyntax.term',V_27p_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_324_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c222_7c49_7c4_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c222_7c49_7c4_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_325_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c222_7c49_7c7_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c222_7c49_7c7_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_326_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c2222_7c48_7c_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c2222_7c48_7c_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_327_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c22224_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c22224_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_328_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c22227_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c22227_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_329_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c2223_7c48_7c_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c2223_7c48_7c_27)))).
fof('thm.ml_hol_kernel.ml_hol_kernel_333_prove_ltb', axiom, ![V_27a_27]: (?[V_27theta_27, V_27asl_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),'type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),'type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),'type.holKernel.thm'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),V_27theta_27),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27c_27))))))) => ?[V_27theta_27, V_27asl_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),'type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),'type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),'type.holKernel.thm'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.holSyntax.type','type.holSyntax.type')),V_27theta_27),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27c_27))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_339_prove_ltb', axiom, ![V_27a_27]: (?[V_27theta_27, V_27asl_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'type.holKernel.thm'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),V_27theta_27),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27c_27))))))) => ?[V_27theta_27, V_27asl_27, V_27c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'type.holKernel.thm')),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'type.holKernel.thm')),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),'type.holKernel.thm'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.holSyntax.term','type.holSyntax.term')),V_27theta_27),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27c_27))))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_346_prove_ltb', axiom, ![V_27a_27]: (?[V_27asl_27, V_27eq_27]: s('type.pair.prod'('type.one.one','type.holKernel.thm'),V_27a_27) = s('type.pair.prod'('type.one.one','type.holKernel.thm'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27eq_27))))) => ?[V_27asl_27, V_27eq_27]: s('type.pair.prod'('type.one.one','type.holKernel.thm'),V_27a_27) = s('type.pair.prod'('type.one.one','type.holKernel.thm'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27asl_27),s('type.holSyntax.term',V_27eq_27))))))).
fof('thm.ml_hol_kernel.ml_hol_kernel_36|48|_prove_ltb', axiom, ![V_27a_27]: (?[V_27h_27, V_27c_27, V_27h_7c39_7c_27, V_27c_7c39_7c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'))),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holKernel.thm','type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term')),'const.pair.,_2'(s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27h_27),s('type.holSyntax.term',V_27c_27))),s('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'const.pair.,_2'(s('type.list.list'('type.holSyntax.term'),V_27h_7c39_7c_27),s('type.holSyntax.term',V_27c_7c39_7c_27))))))) => ?[V_27h_27, V_27c_27, V_27h_7c39_7c_27, V_27c_7c39_7c_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'))),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.holKernel.thm','type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.holKernel.thm','type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term')),'const.pair.,_2'(s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27h_27),s('type.holSyntax.term',V_27c_27))),s('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'const.pair.,_2'(s('type.list.list'('type.holSyntax.term'),V_27h_7c39_7c_27),s('type.holSyntax.term',V_27c_7c39_7c_27))))))))).
fof('thm.ml_hol_kernel.generated_definition_ind', axiom, ![V_27P_27]: (![V_27h_27, V_27c_27, V_27h_7c39_7c_27, V_27c_7c39_7c_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'bool'),'happ'(s('fun'('type.holKernel.thm','fun'('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'bool')),'happ'(s('fun'('type.one.one','fun'('type.holKernel.thm','fun'('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'bool'))),V_27P_27),s('type.one.one','const.one.one_0'))),s('type.holKernel.thm','const.holKernel.Sequent_2'(s('type.list.list'('type.holSyntax.term'),V_27h_27),s('type.holSyntax.term',V_27c_27))))),s('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'const.pair.,_2'(s('type.list.list'('type.holSyntax.term'),V_27h_7c39_7c_27),s('type.holSyntax.term',V_27c_7c39_7c_27)))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'bool'),'happ'(s('fun'('type.holKernel.thm','fun'('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'bool')),'happ'(s('fun'('type.one.one','fun'('type.holKernel.thm','fun'('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'bool'))),V_27P_27),s('type.one.one',V_27v_27))),s('type.holKernel.thm',V_27v_7c49_7c_27))),s('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'const.pair.,_2'(s('type.list.list'('type.holSyntax.term'),V_27v2_27),s('type.holSyntax.term',V_27v3_27)))))))).
fof('thm.ml_hol_kernel.generated_definition_def', axiom, ![V_27h_7c39_7c_27, V_27h_27, V_27c_7c39_7c_27, V_27c_27]: s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'const.ml_hol_kernel.generated_definition_3'(s('type.one.one','const.one.one_0'),s('type.holKernel.thm','happ'(s('fun'('type.holSyntax.term','type.holKernel.thm'),'happ'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.term','type.holKernel.thm')),'const.holKernel.Sequent_0'),s('type.list.list'('type.holSyntax.term'),V_27h_27))),s('type.holSyntax.term',V_27c_27))),s('type.pair.prod'('type.list.list'('type.holSyntax.term'),'type.holSyntax.term'),'const.pair.,_2'(s('type.list.list'('type.holSyntax.term'),V_27h_7c39_7c_27),s('type.holSyntax.term',V_27c_7c39_7c_27))))) = s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'happ'(s('fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'happ'(s('fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')))),'happ'(s('fun'('bool','fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))))),'const.bool.COND_0'),s('bool','happ'(s('fun'('type.holSyntax.term','bool'),'happ'(s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),'const.holKernel.aconv_0'),s('type.holSyntax.term',V_27c_27))),s('type.holSyntax.term',V_27c_7c39_7c_27))))),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'const.bool.LET_2'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'_dst_x0x1x1x0_4'(s('fun'('bool','fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.holSyntax.term'),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.holSyntax.term','bool'),'fun'('type.list.list'('type.holSyntax.term'),'bool')),'const.list.EVERY_0'),s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.term','bool')),'_dst_x00x01x10_3'(s('fun'('fun'('type.holSyntax.term','bool'),'fun'('type.list.list'('type.holSyntax.term'),'bool')),'const.list.EXISTS_0'),s('fun'('type.holSyntax.term','fun'('type.holSyntax.term','bool')),'const.holKernel.aconv_0'),s('fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term')),'_i_0_0'))),s('type.list.list'('type.holSyntax.term'),V_27h_27))),s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'_dst_x0x1_2'(s('fun'('fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'happ'(s('fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holSyntax.type'),'type.holKernel.hol_refs')),'fun'('fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')))),'const.holKernel.ex_bind_0'),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holSyntax.type'),'type.holKernel.hol_refs')),'const.holKernel.mk_type_1'(s('type.pair.prod'('type.mlstring.mlstring','type.list.list'('type.holSyntax.type')),'const.pair.,_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.holSyntax.type'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.type','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')))),'_dst_x00x10x11_3'(s('fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.list.list'('type.holSyntax.type')),'type.holKernel.hol_refs')),'fun'('fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')))),'const.holKernel.ex_bind_0'),s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.list.list'('type.holSyntax.type')),'type.holKernel.hol_refs'))),'const.holKernel.map_1'(s('fun'('type.holSyntax.term','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holSyntax.type'),'type.holKernel.hol_refs'))),'const.holKernel.type_of_0'))),s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))))),'_dst_x000x011x100x000_4'(s('fun'('bool','fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))))),'const.bool.COND_0'),s('fun'('type.holSyntax.type','fun'('type.list.list'('type.holSyntax.type'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.holSyntax.type','bool'),'fun'('type.list.list'('type.holSyntax.type'),'bool')),'const.list.EVERY_0'),s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),'_dst_x01x10_2'(s('fun'('type.holSyntax.type','fun'('type.holSyntax.type','bool')),'=_0'),s('fun'('type.holSyntax.type','type.holSyntax.type'),'_i_0_0'))))),s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'_dst_x0x1_2'(s('fun'('type.holKernel.thm','fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs'))),'const.holKernel.ex_return_0'),s('fun'('type.list.list'('type.holSyntax.term'),'type.holKernel.thm'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.holSyntax.term','type.holKernel.thm')),'const.holKernel.Sequent_0'),s('type.holSyntax.term',V_27c_7c39_7c_27))))),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'const.holKernel.failwith_1'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'const.holKernel.failwith_1'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))),s('type.list.list'('type.holSyntax.term'),'const.holKernel.list_to_hypset_2'(s('type.list.list'('type.holSyntax.term'),V_27h_7c39_7c_27),s('type.list.list'('type.holSyntax.term'),'const.list.NIL_0'))))))),s('fun'('type.holKernel.hol_refs','type.pair.prod'('type.holKernel.hol_result'('type.holKernel.thm'),'type.holKernel.hol_refs')),'const.holKernel.failwith_1'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))).
fof('thm.ml_hol_kernel.kernel_thm|split|0', axiom, p(s('bool','const.bigStep.evaluate_top_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.pair.SND_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v')),'const.option.THE_1'(s('type.option.option'('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v'))),'const.initialProgram.prim_sem_env_1'(s('type.ffi.ffi_state'('type.one.one'),'const.semanticPrimitives.state_ffi_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'))))))))),s('type.semanticPrimitives.state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v')),'const.option.THE_1'(s('type.option.option'('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v'))),'const.initialProgram.prim_sem_env_1'(s('type.ffi.ffi_state'('type.one.one'),'const.semanticPrimitives.state_ffi_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'))))))))),s('type.ast.top','const.ast.Tmod_3'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.option.option'('type.list.list'('type.ast.spec')),'const.option.NONE_0'),s('type.list.list'('type.ast.dec'),'const.ml_hol_kernel.ml_hol_kernel_decls_0'))),s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.Tmod_state_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.ast.dec'),'const.ml_hol_kernel.ml_hol_kernel_decls_0'))),s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.ml_translator.Tmod_tys_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.ast.dec'),'const.ml_hol_kernel.ml_hol_kernel_decls_0'))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.list.NIL_0'))),s('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.ml_translator.Tmod_env_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.ast.dec'),'const.ml_hol_kernel.ml_hol_kernel_decls_0'))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.NIL_0'))))))))))))).
