fof('thm.stack_names.find_name_def', axiom, ![V_27f_27, V_27n_27]: s('type.num.num','const.stack_names.find_name_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.num.num',V_27n_27))) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.num.num',V_27n_27),s('fun'('type.num.num','type.num.num'),'_i_0_0')))).
fof('thm.stack_names.ri_find_name_def|split|0', axiom, ![V_27A_27]: ![V_27f_27, V_27r_27]: s('type.asm.reg_imm'(V_27A_27),'const.stack_names.ri_find_name_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num',V_27r_27))))) = s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.stack_names.find_name_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.num.num',V_27r_27)))))).
fof('thm.stack_names.ri_find_name_def|split|1', axiom, ![V_27A_27]: ![V_27f_27, V_27w_27]: s('type.asm.reg_imm'(V_27A_27),'const.stack_names.ri_find_name_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.asm.reg_imm'(V_27A_27),'const.asm.Imm_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.asm.reg_imm'(V_27A_27),'const.asm.Imm_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('ARITY_1_2_const.stack_names.ri_find_name', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.asm.reg_imm'(V_27A_27),'happ'(s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.reg_imm'(V_27A_27)),'const.stack_names.ri_find_name_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.asm.reg_imm'(V_27A_27),VV1))) = s('type.asm.reg_imm'(V_27A_27),'const.stack_names.ri_find_name_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.asm.reg_imm'(V_27A_27),VV1)))).
fof('thm.stack_names.inst_find_name_def', axiom, ![V_27A_27]: ![V_27f_27, V_27i_27]: s('type.asm.inst'(V_27A_27),'const.stack_names.inst_find_name_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.asm.inst'(V_27A_27),V_27i_27))) = s('type.asm.inst'(V_27A_27),'const.asm.inst_CASE_5'(s('type.asm.inst'(V_27A_27),V_27i_27),s('type.asm.inst'(V_27A_27),'const.asm.Skip_0'),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.inst'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Const_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'_dst_x1x0x0x0_4'(s('fun'('type.asm.arith'(V_27A_27),'fun'('fun'('type.asm.binop','fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.inst'(V_27A_27))))),'fun'('fun'('type.asm.shift','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.inst'(V_27A_27))))),'fun'('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.inst'(V_27A_27))))),'type.asm.inst'(V_27A_27))))),'const.asm.arith_CASE_0'),s('fun'('type.asm.binop','fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.inst'(V_27A_27))))),'_dst_x0000x1111_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.asm.binop','fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27))))),'_dst_x0000x1000x0100x0010x0001_5'(s('fun'('type.asm.binop','fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27))))),'const.asm.Binop_0'),s('fun'('type.asm.binop','type.asm.binop'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.reg_imm'(V_27A_27)),'const.stack_names.ri_find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))))),s('fun'('type.asm.shift','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.inst'(V_27A_27))))),'_dst_x0000x1111_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.asm.shift','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27))))),'_dst_x000x100x010x001_4'(s('fun'('type.asm.shift','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27))))),'const.asm.Shift_0'),s('fun'('type.asm.shift','type.asm.shift'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.inst'(V_27A_27))))),'_dst_x0000x1111_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27))))),'_dst_x0000x1000x0100x0010x0001_5'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27))))),'const.asm.AddCarry_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))))))),s('fun'('type.asm.mem_op','fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27)))),'_dst_x001x110_2'(s('fun'('type.asm.addr'(V_27A_27),'fun'('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.inst'(V_27A_27))),'type.asm.inst'(V_27A_27))),'const.asm.addr_CASE_0'),s('fun'('type.asm.mem_op','fun'('type.num.num','fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.inst'(V_27A_27))))),'_dst_x0000x1000x0100x0011_4'(s('fun'('type.asm.mem_op','fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27)))),'const.asm.Mem_0'),s('fun'('type.asm.mem_op','type.asm.mem_op'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27)))))))))))).
fof('thm.stack_names.stack_names_4_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((?[V_27f_27, V_27v2_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INL_1'(s(V_27A_27,V_27v2_27))))) | ?[V_27f_27, V_27r_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INR_1'(s('type.num.num',V_27r_27)))))) => (?[V_27f_27, V_27r_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INR_1'(s('type.num.num',V_27r_27))))) | ?[V_27f_27, V_27v2_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INL_1'(s(V_27A_27,V_27v2_27)))))))).
fof('thm.stack_names.dest_find_name_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27f_27, V_27r_27]: p(s('bool','happ'(s('fun'('type.sum.sum'(V_27A_27,'type.num.num'),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sum.sum'(V_27A_27,'type.num.num'),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INR_1'(s('type.num.num',V_27r_27)))))) & ![V_27f_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.sum.sum'(V_27A_27,'type.num.num'),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sum.sum'(V_27A_27,'type.num.num'),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INL_1'(s(V_27A_27,V_27v2_27))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.sum.sum'(V_27A_27,'type.num.num'),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sum.sum'(V_27A_27,'type.num.num'),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27v_27))),s('type.sum.sum'(V_27A_27,'type.num.num'),V_27v_7c49_7c_27)))))).
fof('thm.stack_names.dest_find_name_def|split|0', axiom, ![V_27A_27]: ![V_27r_27, V_27f_27]: s('type.sum.sum'(V_27A_27,'type.num.num'),'const.stack_names.dest_find_name_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INR_1'(s('type.num.num',V_27r_27))))) = s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INR_1'(s('type.num.num','const.stack_names.find_name_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.num.num',V_27r_27)))))).
fof('thm.stack_names.dest_find_name_def|split|1', axiom, ![V_27A_27]: ![V_27v2_27, V_27f_27]: s('type.sum.sum'(V_27A_27,'type.num.num'),'const.stack_names.dest_find_name_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INL_1'(s(V_27A_27,V_27v2_27))))) = s('type.sum.sum'(V_27A_27,'type.num.num'),'const.sum.INL_1'(s(V_27A_27,V_27v2_27)))).
fof('thm.stack_names.stack_names_9_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: (?[V_27f_27, V_27p_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.stackLang.prog'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.stackLang.prog'(V_27A_27)),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.stackLang.prog'(V_27A_27),V_27p_27))) => ?[V_27f_27, V_27p_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.stackLang.prog'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.stackLang.prog'(V_27A_27)),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.stackLang.prog'(V_27A_27),V_27p_27))))).
fof('thm.stack_names.comp_ind', axiom, ![V_27A_27]: ![V_27P_27]: (![V_27f_27, V_27p_27]: ((![V_27c_27, V_27r_7c39_7c_7c39_7c_27, V_27ri_27, V_27p_7c49_7c_7c39_7c_27, V_27p2_7c39_7c_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp',V_27c_27),s('type.num.num',V_27r_7c39_7c_7c39_7c_27),s('type.asm.reg_imm'(V_27A_27),V_27ri_27),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p2_7c39_7c_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p2_7c39_7c_27))))) & (![V_27c_27, V_27r_7c39_7c_7c39_7c_27, V_27ri_27, V_27p_7c49_7c_7c39_7c_27, V_27p2_7c39_7c_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp',V_27c_27),s('type.num.num',V_27r_7c39_7c_7c39_7c_27),s('type.asm.reg_imm'(V_27A_27),V_27ri_27),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p2_7c39_7c_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_27))))) & (![V_27c_7c39_7c_27, V_27r_7c39_7c_7c39_7c_7c39_7c_27, V_27ri_7c39_7c_27, V_27p_7c49_7c_7c39_7c_7c39_7c_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.While_4'(s('type.asm.cmp',V_27c_7c39_7c_27),s('type.num.num',V_27r_7c39_7c_7c39_7c_7c39_7c_27),s('type.asm.reg_imm'(V_27A_27),V_27ri_7c39_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_7c39_7c_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_7c39_7c_27))))) & (![V_27ret_27, V_27dest_27, V_27exc_27, V_27v_27, V_27p2_27, V_27v2_27, V_27l_7c49_7c_27, V_27l2_27]: ((s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Call_3'(s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27ret_27),s('type.sum.sum'('type.num.num','type.num.num'),V_27dest_27),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),V_27exc_27))) & (s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),V_27exc_27) = s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),V_27v_27))) & (s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),V_27v_27) = s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.stackLang.prog'(V_27A_27),V_27p2_27),s('type.pair.prod'('type.num.num','type.num.num'),V_27v2_27))) & s('type.pair.prod'('type.num.num','type.num.num'),V_27v2_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27l_7c49_7c_27),s('type.num.num',V_27l2_27)))))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p2_27))))) & (![V_27ret_27, V_27dest_27, V_27exc_27, V_27v_27, V_27p_7c49_7c_27, V_27v2_27, V_27lr_27, V_27v4_27, V_27l_7c49_7c_27, V_27l2_27]: ((s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Call_3'(s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27ret_27),s('type.sum.sum'('type.num.num','type.num.num'),V_27dest_27),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),V_27exc_27))) & (s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27ret_27) = s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27v_27))) & (s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27v_27) = s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),V_27v2_27))) & (s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),V_27v2_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',V_27lr_27),s('type.pair.prod'('type.num.num','type.num.num'),V_27v4_27))) & s('type.pair.prod'('type.num.num','type.num.num'),V_27v4_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27l_7c49_7c_27),s('type.num.num',V_27l2_27))))))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27))))) & (![V_27p_7c49_7c_27, V_27p2_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p2_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p2_27))))) & ![V_27p_7c49_7c_27, V_27p2_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p2_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27))))))))))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27v_27))),s('type.stackLang.prog'(V_27A_27),V_27v_7c49_7c_27)))))).
fof('ARITY_1_2_const.stack_names.comp', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.stackLang.prog'(V_27A_27),VV1))) = s('type.stackLang.prog'(V_27A_27),'const.stack_names.comp_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.stackLang.prog'(V_27A_27),VV1)))).
fof('ARITY_1_2_const.stack_names.dest_find_name', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.sum.sum'(V_27A_27,'type.num.num'),'happ'(s('fun'('type.sum.sum'(V_27A_27,'type.num.num'),'type.sum.sum'(V_27A_27,'type.num.num')),'const.stack_names.dest_find_name_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.sum.sum'(V_27A_27,'type.num.num'),VV1))) = s('type.sum.sum'(V_27A_27,'type.num.num'),'const.stack_names.dest_find_name_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sum.sum'(V_27A_27,'type.num.num'),VV1)))).
fof('ARITY_1_2_const.stack_names.inst_find_name', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.asm.inst'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.stack_names.inst_find_name_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.asm.inst'(V_27A_27),VV1))) = s('type.asm.inst'(V_27A_27),'const.stack_names.inst_find_name_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.asm.inst'(V_27A_27),VV1)))).
fof('thm.stack_names.comp_def', axiom, ![V_27A_27]: ![V_27p_27, V_27f_27]: s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.stackLang.prog'(V_27A_27),V_27p_27))) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.prog_CASE_26'(s('type.stackLang.prog'(V_27A_27),V_27p_27),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'),s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.asm.inst'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.stack_names.inst_find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.num.num','fun'('type.wordLang.store_name','type.stackLang.prog'(V_27A_27))),'const.stackLang.Get_0'),s('fun'('type.wordLang.store_name','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stackLang.Set_0'),s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.sum.sum'('type.num.num','type.num.num'),'fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.stackLang.prog'(V_27A_27)))),'_dst_x000x100x010x001_4'(s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.sum.sum'('type.num.num','type.num.num'),'fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.stackLang.prog'(V_27A_27)))),'const.stackLang.Call_0'),s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))),'const.option.option_CASE_0'),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))),'_dst_x001x110_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.option.SOME_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))),'_dst_x0000x1000x0111_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.,_0'),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x000x100x011_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))))))))))))))),s('fun'('type.sum.sum'('type.num.num','type.num.num'),'type.sum.sum'('type.num.num','type.num.num')),'const.stack_names.dest_find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))))),'const.option.option_CASE_0'),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'),s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.num.num','type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x000x100x011_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))))))))))))),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.asm.cmp','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)))))),'_dst_x00000x10000x01000x00100x00010x00001_6'(s('fun'('type.asm.cmp','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)))))),'const.stackLang.If_0'),s('fun'('type.asm.cmp','type.asm.cmp'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.reg_imm'(V_27A_27)),'const.stack_names.ri_find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.asm.cmp','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))))),'_dst_x0000x1000x0100x0010x0001_5'(s('fun'('type.asm.cmp','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))))),'const.stackLang.While_0'),s('fun'('type.asm.cmp','type.asm.cmp'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.reg_imm'(V_27A_27)),'const.stack_names.ri_find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_names.comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27)))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27)))),'const.stackLang.JumpLower_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.Alloc_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.Raise_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stackLang.Return_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))))),'_dst_x0000x1000x0100x0010x0001_5'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))))),'const.stackLang.FFI_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Tick_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27)))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27)))),'const.stackLang.LocValue_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.StackAlloc_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.StackFree_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stackLang.StackStore_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stackLang.StackStoreAny_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stackLang.StackLoad_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stackLang.StackLoadAny_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.StackGetSize_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.StackSetSize_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stackLang.BitmapLoad_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.Halt_0'),s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),V_27f_27)))))))).
fof('ARITY_1_2_const.stack_names.prog_comp', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'happ'(s('fun'('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27))),'const.stack_names.prog_comp_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),VV1))) = s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'const.stack_names.prog_comp_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),VV1)))).
fof('thm.stack_names.prog_comp_def', axiom, ![V_27A_27,V_27B_27]: ![V_27f_27, V_27n_27, V_27p_27]: s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'const.stack_names.prog_comp_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'const.pair.,_2'(s(V_27A_27,V_27n_27),s('type.stackLang.prog'(V_27B_27),V_27p_27))))) = s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'const.pair.,_2'(s(V_27A_27,V_27n_27),s('type.stackLang.prog'(V_27B_27),'const.stack_names.comp_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.stackLang.prog'(V_27B_27),V_27p_27)))))).
fof('thm.stack_names.compile_def', axiom, ![V_27A_27,V_27B_27]: ![V_27f_27, V_27prog_27]: s('type.list.list'('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27))),'const.stack_names.compile_2'(s('type.sptree.spt'('type.num.num'),V_27f_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27))),V_27prog_27))) = s('type.list.list'('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27))),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27))),'const.stack_names.prog_comp_1'(s('type.sptree.spt'('type.num.num'),V_27f_27))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27))),V_27prog_27)))).
fof('thm.stack_names.x64_names_def', axiom, s('type.sptree.spt'('type.num.num'),'const.stack_names.x64_names_0') = s('type.sptree.spt'('type.num.num'),'const.sptree.BN_2'(s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.sptree.spt'('type.num.num'),'const.sptree.BN_2'(s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'),s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.stack_names.arm_names_def', axiom, s('type.sptree.spt'('type.num.num'),'const.stack_names.arm_names_0') = s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),'const.sptree.BS_3'(s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'('type.num.num'),'const.sptree.LS_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
