fof('thm.alignment.align_def', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_slice_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_def', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: (p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.alignment.byte_align_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.alignment.byte_align_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.byte_aligned_def', axiom, ![V_27A_27]: ![V_27w_27]: s('bool','const.alignment.byte_aligned_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.align_|48|', axiom, ![V_27A_27]: ![V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)).
fof('thm.alignment.align_align', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_align', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.alignment.align_aligned', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: (p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) => s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27))).
fof('thm.alignment.align_bitwise_and', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_T_0'),s('type.num.num',V_27p_27)))))).
fof('thm.alignment.align_shift', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.num.num',V_27p_27))),s('type.num.num',V_27p_27)))).
fof('thm.alignment.align_w2n', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27)))))))).
fof('thm.alignment.align_sub', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num',V_27p_27) = s('type.num.num','const.num.|48|_0')) & s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool',Vv),s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27p_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))))).
fof('thm.alignment.aligned_extract', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: (p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> (s('type.num.num',V_27p_27) = s('type.num.num','const.num.|48|_0') | s('type.fcp.cart'('bool',V_27A_27),'const.words.word_extract_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27p_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.alignment.aligned_|48||split|0', axiom, ![V_27A_27]: ![V_27p_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))).
fof('thm.alignment.aligned_|48||split|1', axiom, ![V_27B_27]: ![V_27w_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27B_27),V_27w_27))))).
fof('thm.alignment.aligned_|49|_lsb', axiom, ![V_27A_27]: ![V_27w_27]: (p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> ~ (p(s('bool','const.words.word_lsb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.alignment.aligned_ge_dim', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27p_27)))) => (p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27w_27) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))))).
fof('thm.alignment.aligned_bitwise_and', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: (p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> s('type.fcp.cart'('bool',V_27A_27),'const.words.word_and_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))).
fof('thm.alignment.aligned_bit_count_upto', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: (p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))) <=> s('type.num.num','const.words.bit_count_upto_2'(s('type.num.num','const.arithmetic.MIN_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27p_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.num.num','const.num.|48|_0'))).
fof('thm.alignment.aligned_add_sub', axiom, ![V_27A_27]: ![V_27p_27, V_27a_27, V_27b_27]: (p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))) => (s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) & s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))))).
fof('thm.alignment.aligned_add_sub_cor', axiom, ![V_27A_27]: ![V_27p_27, V_27a_27, V_27b_27]: ((p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) => (p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27)))))) & p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))))))).
fof('thm.alignment.aligned_mul_shift_|49|', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27p_27))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))))).
fof('thm.alignment.aligned_add_sub_prod|split|0', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27, V_27x_27]: s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27p_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_add_sub_prod|split|1', axiom, ![V_27A_27]: ![V_27p_27, V_27w_27, V_27x_27]: s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27p_27))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_imp', axiom, ![V_27A_27]: ![V_27p_27, V_27q_27, V_27w_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27p_27),s('type.num.num',V_27q_27)))) & p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27q_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))) => p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))).
fof('thm.alignment.align_add_aligned', axiom, ![V_27A_27]: ![V_27p_27, V_27a_27, V_27b_27]: ((p(s('bool','const.alignment.aligned_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool',V_27A_27),V_27b_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27))))))) => s('type.fcp.cart'('bool',V_27A_27),'const.alignment.align_2'(s('type.num.num',V_27p_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27),s('type.fcp.cart'('bool',V_27A_27),V_27b_27))))) = s('type.fcp.cart'('bool',V_27A_27),V_27a_27))).
fof('thm.alignment.aligned_add_sub_|49|23|split|0', axiom, ![V_27A_27]: ![V_27w_27, V_27x_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_add_sub_|49|23|split|1', axiom, ![V_27A_27]: ![V_27w_27, V_27x_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_add_sub_|49|23|split|2', axiom, ![V_27A_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))).
fof('thm.alignment.aligned_add_sub_|49|23|split|3', axiom, ![V_27A_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))).
fof('thm.alignment.aligned_add_sub_|49|23|split|4', axiom, ![V_27A_27]: ![V_27w_27, V_27x_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_add_sub_|49|23|split|5', axiom, ![V_27A_27]: ![V_27w_27, V_27x_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_add_sub_|49|23|split|6', axiom, ![V_27A_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))).
fof('thm.alignment.aligned_add_sub_|49|23|split|7', axiom, ![V_27A_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))).
fof('thm.alignment.aligned_add_sub_|49|23|split|8', axiom, ![V_27A_27]: ![V_27w_27, V_27x_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_add_sub_|49|23|split|9', axiom, ![V_27A_27]: ![V_27w_27, V_27x_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.alignment.aligned_add_sub_|49|23|split|10', axiom, ![V_27A_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))).
fof('thm.alignment.aligned_add_sub_|49|23|split|11', axiom, ![V_27A_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27x_27))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|0', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|1', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|2', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|3', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|4', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|5', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|6', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|7', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|8', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|9', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|10', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|11', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|12', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.alignment.alignment_25_prove_ltb|split|13', axiom, ![V_27x_27]: s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.alignment.aligned_numeric|split|0', axiom, ![V_27A_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))).
fof('thm.alignment.aligned_numeric|split|1', axiom, ![V_27B_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27B_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))).
fof('thm.alignment.aligned_numeric|split|2', axiom, ![V_27C_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27C_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))).
fof('thm.alignment.aligned_numeric|split|3', axiom, ![V_27D_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27D_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27D_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))))).
fof('thm.alignment.aligned_numeric|split|4', axiom, ![V_27E_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27E_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27E_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))).
fof('thm.alignment.aligned_numeric|split|5', axiom, ![V_27F_27]: ![V_27x_27]: p(s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27F_27),'const.words.word_2comp_1'(s('type.fcp.cart'('bool',V_27F_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))).
fof('thm.alignment.aligned_numeric|split|6', axiom, ![V_27G_27,V_27H_27]: ![V_27x_27, V_27y_27, V_27f_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27H_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27H_27),V_27y_27),s('type.fcp.cart'('bool',V_27H_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','happ'(s('fun'(V_27G_27,'type.num.num'),V_27f_27),s(V_27G_27,V_27x_27))))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27H_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27H_27),V_27y_27),s('type.fcp.cart'('bool',V_27H_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.alignment.aligned_numeric|split|7', axiom, ![V_27I_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27I_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27I_27),V_27y_27),s('type.fcp.cart'('bool',V_27I_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27I_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27I_27),V_27y_27),s('type.fcp.cart'('bool',V_27I_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|8', axiom, ![V_27K_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27K_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27K_27),V_27y_27),s('type.fcp.cart'('bool',V_27K_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27K_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27K_27),V_27y_27),s('type.fcp.cart'('bool',V_27K_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|9', axiom, ![V_27M_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27M_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27M_27),V_27y_27),s('type.fcp.cart'('bool',V_27M_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27M_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27M_27),V_27y_27),s('type.fcp.cart'('bool',V_27M_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|10', axiom, ![V_27O_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27O_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27O_27),V_27y_27),s('type.fcp.cart'('bool',V_27O_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27O_27),V_27y_27)))).
fof('thm.alignment.aligned_numeric|split|11', axiom, ![V_27Q_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27Q_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27Q_27),V_27y_27),s('type.fcp.cart'('bool',V_27Q_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27Q_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27Q_27),V_27y_27),s('type.fcp.cart'('bool',V_27Q_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|12', axiom, ![V_27S_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27S_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27S_27),V_27y_27),s('type.fcp.cart'('bool',V_27S_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27S_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27S_27),V_27y_27),s('type.fcp.cart'('bool',V_27S_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|13', axiom, ![V_27U_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27U_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27U_27),V_27y_27),s('type.fcp.cart'('bool',V_27U_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27U_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27U_27),V_27y_27),s('type.fcp.cart'('bool',V_27U_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|14', axiom, ![V_27W_27,V_27X_27]: ![V_27x_27, V_27y_27, V_27f_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27X_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27X_27),V_27y_27),s('type.fcp.cart'('bool',V_27X_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','happ'(s('fun'(V_27W_27,'type.num.num'),V_27f_27),s(V_27W_27,V_27x_27))))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27X_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27X_27),V_27y_27),s('type.fcp.cart'('bool',V_27X_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.alignment.aligned_numeric|split|15', axiom, ![V_27Y_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27Y_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27Y_27),V_27y_27),s('type.fcp.cart'('bool',V_27Y_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27Y_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27Y_27),V_27y_27),s('type.fcp.cart'('bool',V_27Y_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|16', axiom, ![V_27A_7c48_7c_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_7c48_7c_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_7c48_7c_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c48_7c_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_7c48_7c_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_7c48_7c_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c48_7c_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|17', axiom, ![V_27A2_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A2_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A2_27),V_27y_27),s('type.fcp.cart'('bool',V_27A2_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A2_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A2_27),V_27y_27),s('type.fcp.cart'('bool',V_27A2_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|18', axiom, ![V_27A4_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A4_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A4_27),V_27y_27),s('type.fcp.cart'('bool',V_27A4_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A4_27),V_27y_27)))).
fof('thm.alignment.aligned_numeric|split|19', axiom, ![V_27A6_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A6_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A6_27),V_27y_27),s('type.fcp.cart'('bool',V_27A6_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A6_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A6_27),V_27y_27),s('type.fcp.cart'('bool',V_27A6_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|20', axiom, ![V_27A8_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A8_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A8_27),V_27y_27),s('type.fcp.cart'('bool',V_27A8_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A8_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A8_27),V_27y_27),s('type.fcp.cart'('bool',V_27A8_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|21', axiom, ![V_27A_7c49_7c_7c48_7c_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_7c49_7c_7c48_7c_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c_7c48_7c_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c_7c48_7c_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_7c49_7c_7c48_7c_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c_7c48_7c_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c_7c48_7c_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|22', axiom, ![V_27A_7c49_7c2_27,V_27A_7c49_7c3_27]: ![V_27x_27, V_27y_27, V_27f_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c3_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c3_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c3_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','happ'(s('fun'(V_27A_7c49_7c2_27,'type.num.num'),V_27f_27),s(V_27A_7c49_7c2_27,V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c3_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c3_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c3_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|23', axiom, ![V_27A_7c49_7c4_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c4_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c4_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c4_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c4_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c4_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c4_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|24', axiom, ![V_27A_7c49_7c5_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c5_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c5_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c5_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c5_27),V_27y_27)))).
fof('thm.alignment.aligned_numeric|split|25', axiom, ![V_27A_7c49_7c6_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c6_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c6_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c6_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c6_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c6_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c6_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|26', axiom, ![V_27A_7c49_7c7_27,V_27A_7c49_7c8_27]: ![V_27x_27, V_27y_27, V_27f_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c8_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c8_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c8_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','happ'(s('fun'(V_27A_7c49_7c7_27,'type.num.num'),V_27f_27),s(V_27A_7c49_7c7_27,V_27x_27))))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c8_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c8_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c8_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.alignment.aligned_numeric|split|27', axiom, ![V_27A_7c49_7c9_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c9_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c9_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c9_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_7c49_7c9_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_7c49_7c9_27),V_27y_27),s('type.fcp.cart'('bool',V_27A_7c49_7c9_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|28', axiom, ![V_27A2_7c48_7c_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A2_7c48_7c_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A2_7c48_7c_27),V_27y_27),s('type.fcp.cart'('bool',V_27A2_7c48_7c_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27x_27))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A2_7c48_7c_27),V_27y_27)))).
fof('thm.alignment.aligned_numeric|split|29', axiom, ![V_27A2_7c49_7c_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A2_7c49_7c_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A2_7c49_7c_27),V_27y_27),s('type.fcp.cart'('bool',V_27A2_7c49_7c_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A2_7c49_7c_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A2_7c49_7c_27),V_27y_27),s('type.fcp.cart'('bool',V_27A2_7c49_7c_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|30', axiom, ![V_27A22_27,V_27A23_27]: ![V_27x_27, V_27y_27, V_27f_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A23_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A23_27),V_27y_27),s('type.fcp.cart'('bool',V_27A23_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','happ'(s('fun'(V_27A22_27,'type.num.num'),V_27f_27),s(V_27A22_27,V_27x_27))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A23_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A23_27),V_27y_27),s('type.fcp.cart'('bool',V_27A23_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|31', axiom, ![V_27A24_27,V_27A25_27]: ![V_27x_27, V_27y_27, V_27f_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A25_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A25_27),V_27y_27),s('type.fcp.cart'('bool',V_27A25_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','happ'(s('fun'(V_27A24_27,'type.num.num'),V_27f_27),s(V_27A24_27,V_27x_27))))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A25_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A25_27),V_27y_27),s('type.fcp.cart'('bool',V_27A25_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.alignment.aligned_numeric|split|32', axiom, ![V_27A26_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A26_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A26_27),V_27y_27),s('type.fcp.cart'('bool',V_27A26_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A26_27),V_27y_27)))).
fof('thm.alignment.aligned_numeric|split|33', axiom, ![V_27A27_27]: ![V_27x_27, V_27y_27]: s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A27_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A27_27),V_27y_27),s('type.fcp.cart'('bool',V_27A27_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27x_27))))))))))) = s('bool','const.alignment.aligned_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A27_27),V_27y_27)))).
