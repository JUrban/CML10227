fof('thm.numposrep.l2n_def|split|0', axiom, ![V_27b_27]: s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.numposrep.l2n_def|split|1', axiom, ![V_27b_27, V_27h_27, V_27t_27]: s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27h_27),s('type.list.list'('type.num.num'),V_27t_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27h_27),s('type.num.num',V_27b_27))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27b_27),s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27t_27)))))))).
fof('thm.numposrep.numposrep_2_prove_ltb', axiom, ![V_27a_27]: (?[V_27b_27, V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),V_27a_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))) => ?[V_27b_27, V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),V_27a_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))).
fof('thm.numposrep.n2l_ind', axiom, ![V_27P_27]: (![V_27b_27, V_27n_27]: ((~ ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27)))) | p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27b_27))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27b_27))),s('type.num.num',V_27n_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27v_27))),s('type.num.num',V_27v_7c49_7c_27)))))).
fof('thm.numposrep.n2l_def', axiom, ![V_27n_27, V_27b_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27)))) | p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))) = s('type.list.list'('type.num.num'),'const.bool.COND_3'(s('bool',Vv),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),'const.list.NIL_0'))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27))))))))))).
fof('ARITY_0_1_const.numposrep.num_from_bin_list', axiom, ![VV0]: s('type.num.num','happ'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_bin_list_0'),s('type.list.list'('type.num.num'),VV0))) = s('type.num.num','const.numposrep.num_from_bin_list_1'(s('type.list.list'('type.num.num'),VV0)))).
fof('ARITY_1_2_const.numposrep.l2n', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.l2n_1'(s('type.num.num',VV0))),s('type.list.list'('type.num.num'),VV1))) = s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',VV0),s('type.list.list'('type.num.num'),VV1)))).
fof('thm.numposrep.num_from_bin_list_def', axiom, s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_bin_list_0') = s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.l2n_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.numposrep.num_from_oct_list_def', axiom, s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_oct_list_0') = s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.l2n_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.numposrep.num_from_dec_list_def', axiom, s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_dec_list_0') = s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.l2n_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.numposrep.num_from_hex_list_def', axiom, s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_hex_list_0') = s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.l2n_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('ARITY_1_2_const.numposrep.n2l', axiom, ![VV0, VV1]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.n2l_1'(s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('thm.numposrep.num_to_bin_list_def', axiom, s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_bin_list_0') = s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.n2l_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.numposrep.num_to_oct_list_def', axiom, s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_oct_list_0') = s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.n2l_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.numposrep.num_to_dec_list_def', axiom, s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_dec_list_0') = s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.n2l_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.numposrep.num_to_hex_list_def', axiom, s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_hex_list_0') = s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.n2l_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.numposrep.BOOLIFY_def|split|0', axiom, ![V_27m_27, V_27a_27]: s('type.list.list'('bool'),'const.numposrep.BOOLIFY_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27m_27),s('type.list.list'('bool'),V_27a_27))) = s('type.list.list'('bool'),V_27a_27)).
fof('thm.numposrep.BOOLIFY_def|split|1', axiom, ![V_27n_27, V_27m_27, V_27a_27]: s('type.list.list'('bool'),'const.numposrep.BOOLIFY_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27m_27),s('type.list.list'('bool'),V_27a_27))) = s('type.list.list'('bool'),'const.numposrep.BOOLIFY_3'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',V_27m_27))),s('type.list.list'('bool'),'const.list.CONS_2'(s('bool','const.arithmetic.ODD_1'(s('type.num.num',V_27m_27))),s('type.list.list'('bool'),V_27a_27)))))).
fof('thm.numposrep.LENGTH_n2l', axiom, ![V_27b_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) => ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0')) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))) = s('type.num.num','const.bool.COND_3'(s('bool',Vv),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27)))))))))).
fof('thm.numposrep.numposrep_|49|6_prove_ltb', axiom, ![V_27b_27, V_27n_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27))))),s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27)))))))).
fof('thm.numposrep.l2n_n2l', axiom, ![V_27b_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) => s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))) = s('type.num.num',V_27n_27))).
fof('thm.numposrep.l2n_lt', axiom, ![V_27l_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27b_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27l_27)))))))))).
fof('ARITY_1_2_const.arithmetic.>', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num',VV0))),s('type.num.num',VV1))) = s('bool','const.arithmetic.>_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('thm.numposrep.LENGTH_l2n', axiom, ![V_27b_27, V_27l_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),V_27l_27)))) & ~ (s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))) = s('type.num.num','const.num.|48|_0')))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27l_27)))))))).
fof('thm.numposrep.l2n_DIGIT', axiom, ![V_27b_27, V_27l_27, V_27x_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),V_27l_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27l_27)))))))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27x_27))))),s('type.num.num',V_27b_27))) = s('type.num.num','const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27l_27))))).
fof('thm.numposrep.DIV_|48|_IMP_LT', axiom, ![V_27b_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27))) = s('type.num.num','const.num.|48|_0')) => p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27)))))).
fof('thm.numposrep.numposrep_22_prove_ltb', axiom, ![V_27b_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27)))))))))))).
fof('thm.numposrep.EL_n2l', axiom, ![V_27b_27, V_27x_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))))))) => s('type.num.num','const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27x_27))))),s('type.num.num',V_27b_27))))).
fof('thm.numposrep.numposrep_24_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27b_27]: ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27a_27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27b_27))) & ![V_27x_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27a_27)))))) => s(V_27A_27,'const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'(V_27A_27),V_27a_27))) = s(V_27A_27,'const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'(V_27A_27),V_27b_27))))) => s('type.list.list'(V_27A_27),V_27a_27) = s('type.list.list'(V_27A_27),V_27b_27))).
fof('thm.numposrep.numposrep_25_prove_ltb', axiom, ![V_27b_27, V_27n_27, V_27l_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),V_27l_27)))) & s('type.num.num',V_27n_27) = s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))))) => ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0')) & s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))) = s('type.list.list'('type.num.num'),'const.bool.COND_3'(s('bool',Vv),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'))),s('type.list.list'('type.num.num'),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))))),s('type.list.list'('type.num.num'),V_27l_27)))))))).
fof('thm.numposrep.n2l_l2n', axiom, ![V_27b_27, V_27l_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),V_27l_27))))) => ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))) = s('type.num.num','const.num.|48|_0')) & s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))))) = s('type.list.list'('type.num.num'),'const.bool.COND_3'(s('bool',Vv),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'))),s('type.list.list'('type.num.num'),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))))))),s('type.list.list'('type.num.num'),V_27l_27)))))))).
fof('ARITY_0_2_const.arithmetic.MOD', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('thm.numposrep.l2n_eq_|48|', axiom, ![V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))) => ![V_27l_27]: (s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))) = s('type.num.num','const.num.|48|_0') <=> p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.combin.o_2'(s('fun'('type.num.num','bool'),'|dollar|equals_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.num.num','type.num.num'),'const.combin.C_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('type.num.num',V_27b_27))))),s('type.list.list'('type.num.num'),V_27l_27))))))).
fof('thm.numposrep.l2n_SNOC_|48|', axiom, ![V_27b_27, V_27ls_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))) => s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),'const.list.SNOC_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.num.num'),V_27ls_27))))) = s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27ls_27))))).
fof('thm.numposrep.numposrep_29_prove_ltb', axiom, ![V_27n_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))) => (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27))) = s('type.num.num','const.num.|48|_0') => (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27b_27)))) => s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0'))))).
fof('thm.numposrep.LOG_l2n', axiom, ![V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) => ![V_27l_27]: ((~ (s('type.list.list'('type.num.num'),V_27l_27) = s('type.list.list'('type.num.num'),'const.list.NIL_0')) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LAST_1'(s('type.list.list'('type.num.num'),V_27l_27)))))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),V_27l_27)))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27l_27)))))))).
fof('thm.numposrep.l2n_dropWhile_|48|', axiom, ![V_27b_27, V_27ls_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))) => s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),'const.list.REVERSE_1'(s('type.list.list'('type.num.num'),'const.list.dropWhile_2'(s('fun'('type.num.num','bool'),'|dollar|equals_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.num.num'),'const.list.REVERSE_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))))) = s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27ls_27))))).
fof('thm.numposrep.LOG_l2n_dropWhile', axiom, ![V_27b_27, V_27l_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & (p(s('bool','const.list.EXISTS_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'=_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.num.num'),V_27l_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),V_27l_27)))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num','const.numposrep.l2n_2'(s('type.num.num',V_27b_27),s('type.list.list'('type.num.num'),V_27l_27))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.list.dropWhile_2'(s('fun'('type.num.num','bool'),'|dollar|equals_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.num.num'),'const.list.REVERSE_1'(s('type.list.list'('type.num.num'),V_27l_27))))))))))).
fof('thm.numposrep.n2l_BOUND', axiom, ![V_27b_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num',V_27b_27))),s('type.list.list'('type.num.num'),'const.numposrep.n2l_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27n_27)))))))).
fof('thm.numposrep.l2n_pow2_compute|split|0', axiom, ![V_27p_27]: s('type.num.num','const.numposrep.l2n_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27))),s('type.list.list'('type.num.num'),'const.list.NIL_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.numposrep.l2n_pow2_compute|split|1', axiom, ![V_27p_27, V_27h_27, V_27t_27]: s('type.num.num','const.numposrep.l2n_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27h_27),s('type.list.list'('type.num.num'),V_27t_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.MOD_2EXP_2'(s('type.num.num',V_27p_27),s('type.num.num',V_27h_27))),s('type.num.num','const.bit.TIMES_2EXP_2'(s('type.num.num',V_27p_27),s('type.num.num','const.numposrep.l2n_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27))),s('type.list.list'('type.num.num'),V_27t_27)))))))).
fof('thm.numposrep.n2l_pow2_compute', axiom, ![V_27p_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27p_27)))) => s('type.list.list'('type.num.num'),'happ'(s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.n2l_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27))))),s('type.num.num',V_27n_27))) = s('type.list.list'('type.num.num'),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.list.list'('type.num.num')),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.num.num','type.list.list'('type.num.num'))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.num.|48|_0'))),s('fun'('type.num.num','type.list.list'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.CONS_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'))),s('fun'('type.num.num','fun'('type.num.num','type.list.list'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.CONS_0'),s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.n2l_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27p_27))))))))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.bit.DIVMOD_2EXP_2'(s('type.num.num',V_27p_27),s('type.num.num',V_27n_27))))))).
fof('ARITY_0_1_const.numposrep.l2n2', axiom, ![VV0]: s('type.num.num','happ'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.l2n2_0'),s('type.list.list'('type.num.num'),VV0))) = s('type.num.num','const.numposrep.l2n2_1'(s('type.list.list'('type.num.num'),VV0)))).
fof('thm.numposrep.l2n2', axiom, s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.l2n2_0') = s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.l2n_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.numposrep.numposrep_37_prove_ltb', axiom, s('type.num.num','const.numposrep.l2n2_1'(s('type.list.list'('type.num.num'),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.ZERO_0')).
fof('thm.numposrep.numposrep_38_prove_ltb', axiom, ![V_27t_27]: s('type.num.num','const.numposrep.l2n2_1'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.num.num'),V_27t_27))))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numposrep.l2n2_1'(s('type.list.list'('type.num.num'),V_27t_27)))))).
fof('thm.numposrep.numposrep_39_prove_ltb', axiom, ![V_27t_27]: s('type.num.num','const.numposrep.l2n2_1'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.num.num'),V_27t_27))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numposrep.l2n2_1'(s('type.list.list'('type.num.num'),V_27t_27)))))).
fof('thm.numposrep.numposrep_4|48|_prove_ltb|split|0', axiom, ![V_27t_27]: s('type.num.num','const.numposrep.l2n_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.num.num'),V_27t_27))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numposrep.l2n2_1'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.num.num'),V_27t_27)))))))).
fof('thm.numposrep.numposrep_4|48|_prove_ltb|split|1', axiom, ![V_27t_27]: s('type.num.num','const.numposrep.l2n_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.num.num'),V_27t_27))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numposrep.l2n2_1'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'('type.num.num'),V_27t_27)))))))).
fof('thm.numposrep.BIT_num_from_bin_list', axiom, ![V_27x_27, V_27l_27]: ((p(s('bool','const.list.EVERY_2'(s('fun'('type.num.num','bool'),'const.arithmetic.>_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.num.num'),V_27l_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27l_27))))))) => (p(s('bool','const.bit.BIT_2'(s('type.num.num',V_27x_27),s('type.num.num','const.numposrep.num_from_bin_list_1'(s('type.list.list'('type.num.num'),V_27l_27)))))) <=> s('type.num.num','const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27l_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('ARITY_0_1_const.numposrep.num_to_bin_list', axiom, ![VV0]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_bin_list_0'),s('type.num.num',VV0))) = s('type.list.list'('type.num.num'),'const.numposrep.num_to_bin_list_1'(s('type.num.num',VV0)))).
fof('thm.numposrep.EL_num_to_bin_list', axiom, ![V_27x_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.numposrep.num_to_bin_list_1'(s('type.num.num',V_27n_27)))))))) => s('type.num.num','const.list.EL_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),'const.numposrep.num_to_bin_list_1'(s('type.num.num',V_27n_27))))) = s('type.num.num','const.bit.BITV_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27x_27))))).
fof('thm.numposrep.num_bin_list', axiom, s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_bin_list_0'),s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_bin_list_0'))) = s('fun'('type.num.num','type.num.num'),'const.combin.I_0')).
fof('thm.numposrep.num_oct_list', axiom, s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_oct_list_0'),s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_oct_list_0'))) = s('fun'('type.num.num','type.num.num'),'const.combin.I_0')).
fof('thm.numposrep.num_dec_list', axiom, s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_dec_list_0'),s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_dec_list_0'))) = s('fun'('type.num.num','type.num.num'),'const.combin.I_0')).
fof('thm.numposrep.num_hex_list', axiom, s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.numposrep.num_from_hex_list_0'),s('fun'('type.num.num','type.list.list'('type.num.num')),'const.numposrep.num_to_hex_list_0'))) = s('fun'('type.num.num','type.num.num'),'const.combin.I_0')).
