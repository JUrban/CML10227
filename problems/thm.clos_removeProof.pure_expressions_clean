include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
include('incl/reg_allocProof.ax').
include('incl/bviProps.ax').
include('incl/bvpProps.ax').
include('incl/bvp_simpProof.ax').
include('incl/bvp_spaceProof.ax').
include('incl/bvl_jumpProof.ax').
include('incl/wellorder.ax').
include('incl/cardinal.ax').
include('incl/hrat.ax').
include('incl/hreal.ax').
include('incl/realax.ax').
include('incl/real.ax').
include('incl/topology.ax').
include('incl/nets.ax').
include('incl/seq.ax').
include('incl/lim.ax').
include('incl/powser.ax').
include('incl/transc.ax').
include('incl/intreal.ax').
include('incl/binary_ieee.ax').
include('incl/tailrec.ax').
include('incl/prog.ax').
include('incl/temporal.ax').
include('incl/address.ax').
include('incl/state.ax').
include('incl/temporal_state.ax').
include('incl/machine_ieee.ax').
include('incl/bitstring.ax').
include('incl/arm.ax').
include('incl/blast.ax').
include('incl/update.ax').
include('incl/arm_step.ax').
include('incl/arm6_target.ax').
include('incl/arm6_eval_encode.ax').
include('incl/mlstring.ax').
include('incl/patternMatches.ax').
include('incl/ml_translator.ax').
include('incl/ml_optimise.ax').
include('incl/ml_pmatch.ax').
include('incl/mini_prelude.ax').
include('incl/bag.ax').
include('incl/benchmark.ax').
include('incl/arm8.ax').
include('incl/arm8_step.ax').
include('incl/clos_relation.ax').
include('incl/clos_relationProps.ax').
fof('thm.clos_removeProof.clos_removeProof_2_prove_ltb', axiom, ![V_27B_27,V_27A_27]: ![V_27l_27, V_27f_27, V_27m_27, V_27l_7c48_7c_27]: s('type.pair.prod'('type.num.num','type.list.list'(V_27B_27)),'const.list.FOLDL_3'(s('fun'('type.pair.prod'('type.num.num','type.list.list'(V_27B_27)),'fun'(V_27A_27,'type.pair.prod'('type.num.num','type.list.list'(V_27B_27)))),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'fun'(V_27A_27,'type.pair.prod'('type.num.num','type.list.list'(V_27B_27))))),'_dst_x000x100x111_3'(s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27)))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'fun'(V_27A_27,'type.list.list'(V_27B_27)))),'_dst_x000x101x010_3'(s('fun'(V_27B_27,'fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27))),'const.list.CONS_0'),s('fun'('type.num.num','fun'(V_27A_27,V_27B_27)),V_27f_27),s('fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.list.list'(V_27B_27)),'happ'(s('fun'('type.list.list'(V_27B_27),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27))),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27)))),'const.pair.,_0'),s('type.num.num',V_27m_27))),s('type.list.list'(V_27B_27),V_27l_7c48_7c_27))),s('type.list.list'(V_27A_27),V_27l_27))) = s('type.pair.prod'('type.num.num','type.list.list'(V_27B_27)),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.num.num','type.list.list'(V_27B_27)),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27))),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27)))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27)))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27m_27))),s('fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27)),'_dst_x1x0_2'(s('fun'('type.list.list'(V_27B_27),'fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27))),'const.list.APPEND_0'),s('type.list.list'(V_27B_27),V_27l_7c48_7c_27))))))),s('type.pair.prod'('type.num.num','type.list.list'(V_27B_27)),'const.list.FOLDL_3'(s('fun'('type.pair.prod'('type.num.num','type.list.list'(V_27B_27)),'fun'(V_27A_27,'type.pair.prod'('type.num.num','type.list.list'(V_27B_27)))),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'fun'(V_27A_27,'type.pair.prod'('type.num.num','type.list.list'(V_27B_27))))),'_dst_x000x100x111_3'(s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27)))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'fun'(V_27A_27,'type.list.list'(V_27B_27)))),'_dst_x000x101x010_3'(s('fun'(V_27B_27,'fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27))),'const.list.CONS_0'),s('fun'('type.num.num','fun'(V_27A_27,V_27B_27)),'_dst_x0x1_2'(s('fun'('type.num.num','fun'(V_27A_27,V_27B_27)),V_27f_27),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27m_27))))),s('fun'('type.list.list'(V_27B_27),'type.list.list'(V_27B_27)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.list.list'(V_27B_27)),'happ'(s('fun'('type.list.list'(V_27B_27),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27))),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27B_27),'type.pair.prod'('type.num.num','type.list.list'(V_27B_27)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(V_27B_27),'const.list.NIL_0'))),s('type.list.list'(V_27A_27),V_27l_27)))))).
fof('thm.clos_removeProof.FST_UNZIP_MAPi', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27l_27, V_27f_27]: s('type.list.list'(V_27B_27),'happ'(s('fun'('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27C_27)),'type.list.list'(V_27B_27)),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27C_27)),'const.list.UNZIP_1'(s('type.list.list'('type.pair.prod'(V_27B_27,V_27C_27)),'const.indexedLists.MAPi_2'(s('fun'('type.num.num','fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27f_27),s('type.list.list'(V_27A_27),V_27l_27))))))) = s('type.list.list'(V_27B_27),'const.indexedLists.MAPi_2'(s('fun'('type.num.num','fun'(V_27A_27,V_27B_27)),'happ'(s('fun'('fun'('type.num.num','fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),'fun'('type.num.num','fun'(V_27A_27,V_27B_27))),'const.combin.o_1'(s('fun'('fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),'fun'(V_27A_27,V_27B_27)),'const.combin.o_1'(s('fun'('type.pair.prod'(V_27B_27,V_27C_27),V_27B_27),'const.pair.FST_0'))))),s('fun'('type.num.num','fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27f_27))),s('type.list.list'(V_27A_27),V_27l_27)))).
fof('thm.clos_removeProof.SND_UNZIP_MAPi', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27l_27, V_27f_27]: s('type.list.list'(V_27C_27),'happ'(s('fun'('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27C_27)),'type.list.list'(V_27C_27)),'const.pair.SND_0'),s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27C_27)),'const.list.UNZIP_1'(s('type.list.list'('type.pair.prod'(V_27B_27,V_27C_27)),'const.indexedLists.MAPi_2'(s('fun'('type.num.num','fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27f_27),s('type.list.list'(V_27A_27),V_27l_27))))))) = s('type.list.list'(V_27C_27),'const.indexedLists.MAPi_2'(s('fun'('type.num.num','fun'(V_27A_27,V_27C_27)),'happ'(s('fun'('fun'('type.num.num','fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),'fun'('type.num.num','fun'(V_27A_27,V_27C_27))),'const.combin.o_1'(s('fun'('fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),'fun'(V_27A_27,V_27C_27)),'const.combin.o_1'(s('fun'('type.pair.prod'(V_27B_27,V_27C_27),V_27C_27),'const.pair.SND_0'))))),s('fun'('type.num.num','fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27f_27))),s('type.list.list'(V_27A_27),V_27l_27)))).
fof('thm.clos_removeProof.FOLDR_UNZIP', axiom, ![V_27A_27]: ![V_27l_27, V_27A_7c48_7c_27]: s('type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'),'const.list.FOLDR_3'(s('fun'('type.pair.prod'(V_27A_27,'type.db_vars.db_var_set'),'fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.db_vars.db_var_set','fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set')))),'fun'('type.pair.prod'(V_27A_27,'type.db_vars.db_var_set'),'fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set')))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.db_vars.db_var_set','fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set')))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'(V_27A_27),'fun'('type.db_vars.db_var_set','type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.db_vars.db_var_set','fun'('type.list.list'(V_27A_27),'fun'('type.db_vars.db_var_set','type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))))),'_dst_x0000x1010x0101_3'(s('fun'('type.list.list'(V_27A_27),'fun'('type.db_vars.db_var_set','type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'const.pair.,_0'),s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.list.CONS_0'),s('fun'('type.db_vars.db_var_set','fun'('type.db_vars.db_var_set','type.db_vars.db_var_set')),'const.db_vars.mk_Union_0'))))))),s('type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'),'happ'(s('fun'('type.db_vars.db_var_set','type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set')),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.db_vars.db_var_set','type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'const.pair.,_0'),s('type.list.list'(V_27A_27),'const.list.NIL_0'))),s('type.db_vars.db_var_set',V_27A_7c48_7c_27))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.db_vars.db_var_set')),V_27l_27))) = s('type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'('type.db_vars.db_var_set')),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set')),'happ'(s('fun'('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'('type.db_vars.db_var_set'),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'('type.db_vars.db_var_set')),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'('type.db_vars.db_var_set'),'type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'_dst_x00x10x01_3'(s('fun'('type.list.list'(V_27A_27),'fun'('type.db_vars.db_var_set','type.pair.prod'('type.list.list'(V_27A_27),'type.db_vars.db_var_set'))),'const.pair.,_0'),s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'_i_0_0'),s('fun'('type.list.list'('type.db_vars.db_var_set'),'type.db_vars.db_var_set'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.db_vars.db_var_set'),'type.db_vars.db_var_set'),'const.db_vars.list_mk_Union_0'),s('fun'('type.list.list'('type.db_vars.db_var_set'),'type.list.list'('type.db_vars.db_var_set')),'_dst_x1x0_2'(s('fun'('type.list.list'('type.db_vars.db_var_set'),'fun'('type.list.list'('type.db_vars.db_var_set'),'type.list.list'('type.db_vars.db_var_set'))),'const.list.APPEND_0'),s('type.list.list'('type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.db_vars.db_var_set'),'type.list.list'('type.db_vars.db_var_set')),'happ'(s('fun'('type.db_vars.db_var_set','fun'('type.list.list'('type.db_vars.db_var_set'),'type.list.list'('type.db_vars.db_var_set'))),'const.list.CONS_0'),s('type.db_vars.db_var_set',V_27A_7c48_7c_27))),s('type.list.list'('type.db_vars.db_var_set'),'const.list.NIL_0'))))))))))),s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'('type.db_vars.db_var_set')),'const.list.UNZIP_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.db_vars.db_var_set')),V_27l_27)))))).
fof('thm.clos_removeProof.ALL_DISTINCT_FLAT', axiom, ![V_27A_27]: ![V_27l_27]: (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'(V_27A_27),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(V_27A_27)),V_27l_27)))))) <=> (![V_27l_7c48_7c_27]: (p(s('bool','const.bool.IN_2'(s('type.list.list'(V_27A_27),V_27l_7c48_7c_27),s('fun'('type.list.list'(V_27A_27),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'(V_27A_27)),V_27l_27)))))) => p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'(V_27A_27),V_27l_7c48_7c_27))))) & ![V_27i_27, V_27j_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27j_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27j_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.list.list'(V_27A_27)),V_27l_27))))))) => ![V_27e_27]: (p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27e_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),'const.list.EL_2'(s('type.num.num',V_27i_27),s('type.list.list'('type.list.list'(V_27A_27)),V_27l_27)))))))) => ~ (p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27e_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),'const.list.EL_2'(s('type.num.num',V_27j_27),s('type.list.list'('type.list.list'(V_27A_27)),V_27l_27)))))))))))))).
fof('thm.clos_removeProof.clos_removeProof_7_prove_ltb', axiom, ![V_27A_27,V_27C_27,V_27B_27,V_27D_27]: ![V_27g_27, V_27f_27]: s('fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'(V_27C_27,V_27D_27)),'const.pair.UNCURRY_1'(s('fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'(V_27C_27,V_27D_27))),'_dst_x00x10x01_3'(s('fun'(V_27C_27,'fun'(V_27D_27,'type.pair.prod'(V_27C_27,V_27D_27))),'const.pair.,_0'),s('fun'(V_27A_27,V_27C_27),V_27f_27),s('fun'(V_27B_27,V_27D_27),V_27g_27))))) = s('fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'(V_27C_27,V_27D_27)),'const.pair.|35||35|_2'(s('fun'(V_27A_27,V_27C_27),V_27f_27),s('fun'(V_27B_27,V_27D_27),V_27g_27)))).
fof('thm.clos_removeProof.fv_CONS', axiom, ![V_27t_27, V_27n_27, V_27h_27]: (p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27h_27),s('type.list.list'('type.closLang.exp'),V_27t_27)))))) <=> (p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27h_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),V_27t_27))))))).
fof('thm.clos_removeProof.fv_APPEND', axiom, ![V_27n_27, V_27l2_27, V_27l_7c49_7c_27]: (p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),'const.list.APPEND_2'(s('type.list.list'('type.closLang.exp'),V_27l_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27l2_27)))))) <=> (p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),V_27l_7c49_7c_27)))) | p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),V_27l2_27))))))).
fof('thm.clos_removeProof.fv_MAPi', axiom, ![V_27A_27]: ![V_27l_27, V_27x_27, V_27f_27]: (p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.indexedLists.MAPi_2'(s('fun'('type.num.num','fun'(V_27A_27,'type.closLang.exp')),V_27f_27),s('type.list.list'(V_27A_27),V_27l_27)))))) <=> ?[V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27l_27)))))) & p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','happ'(s('fun'(V_27A_27,'type.closLang.exp'),'happ'(s('fun'('type.num.num','fun'(V_27A_27,'type.closLang.exp')),V_27f_27),s('type.num.num',V_27n_27))),s(V_27A_27,'const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'(V_27A_27),V_27l_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))).
fof('thm.clos_removeProof.code_locs_MAPi', axiom, ![V_27A_27]: ![V_27xs_27, V_27f_27]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.num.num')),'const.closProps.code_locs_0'),s('type.list.list'('type.closLang.exp'),'const.indexedLists.MAPi_2'(s('fun'('type.num.num','fun'(V_27A_27,'type.closLang.exp')),V_27f_27),s('type.list.list'(V_27A_27),V_27xs_27))))) = s('type.list.list'('type.num.num'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.num.num')),'const.indexedLists.MAPi_2'(s('fun'('type.num.num','fun'(V_27A_27,'type.list.list'('type.num.num'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.num.num')),'const.closProps.code_locs_0'),s('fun'('type.num.num','fun'(V_27A_27,'type.list.list'('type.closLang.exp'))),'_dst_x00x11x00_3'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','fun'(V_27A_27,'type.closLang.exp')),V_27f_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'(V_27A_27),V_27xs_27)))))).
fof('thm.clos_removeProof.code_loc|39|_def', axiom, ![V_27x_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_27))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|1', axiom, ![V_27y_27, V_27xs_27, V_27x_27]: s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))))) = s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_27))),s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27)))))))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|2', axiom, ![V_27v_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_27))))) = s('type.list.list'('type.num.num'),'const.list.NIL_0')).
fof('thm.clos_removeProof.code_loc|39|_THM|split|3', axiom, ![V_27x3_27, V_27x2_27, V_27x_7c49_7c_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27),s('type.closLang.exp',V_27x3_27))))) = s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x2_27))))),s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x3_27)))))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|4', axiom, ![V_27xs_27, V_27x2_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.closLang.exp',V_27x2_27))))) = s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x2_27)))))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|5', axiom, ![V_27x_7c49_7c_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27x_7c49_7c_27))))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_7c49_7c_27)))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|6', axiom, ![V_27x_7c49_7c_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27x_7c49_7c_27))))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_7c49_7c_27)))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|7', axiom, ![V_27xs_27, V_27op_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27)))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|8', axiom, ![V_27xs_27, V_27x_7c49_7c_27, V_27loc__opt_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))) = s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27)))))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|9', axiom, ![V_27x_7c49_7c_27, V_27vs_27, V_27num__args_27, V_27loc__opt_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vs_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27x_7c49_7c_27))))) = s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('type.list.list'('type.num.num'),'const.list.NIL_0')))))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|10', axiom, ![V_27x_7c49_7c_27, V_27vs_27, V_27loc__opt_27, V_27fns_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27),s('type.closLang.exp',V_27x_7c49_7c_27))))) = s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))),s('type.list.list'('type.num.num'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))))),s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_7c49_7c_27)))))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|11', axiom, ![V_27x2_27, V_27x_7c49_7c_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27))))) = s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x2_27)))))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|12', axiom, ![V_27xs_27, V_27dest_27]: s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27dest_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27)))).
fof('thm.clos_removeProof.code_loc|39|_THM|split|13', axiom, ![V_27x_27, V_27xs_27]: s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))) = s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_27))),s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27)))))).
fof('ARITY_0_1_const.clos_removeProof.code_loc|39|', axiom, ![VV0]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.closLang.exp','type.list.list'('type.num.num')),'const.clos_removeProof.code_loc|39|_0'),s('type.closLang.exp',VV0))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',VV0)))).
fof('thm.clos_removeProof.code_locs_FLAT_MAP', axiom, ![V_27xs_27]: s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))) = s('type.list.list'('type.num.num'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.num.num')),'const.list.MAP_2'(s('fun'('type.closLang.exp','type.list.list'('type.num.num')),'const.clos_removeProof.code_loc|39|_0'),s('type.list.list'('type.closLang.exp'),V_27xs_27)))))).
fof('thm.clos_removeProof.code_locs_MEM_SUBSET', axiom, ![V_27xs_27, V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27x_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27)))))) => p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',V_27x_27))))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27)))))))))).
fof('thm.clos_removeProof.fv_REPLICATE', axiom, ![V_27n_27, V_27m_27, V_27e_27]: (p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27m_27),s('type.closLang.exp',V_27e_27)))))) <=> (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27m_27)))) & p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))).
fof('thm.clos_removeProof.remove_fv', axiom, ![V_27xs_27, V_27cs_27, V_27l_27]: (s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_remove.remove_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27cs_27),s('type.db_vars.db_var_set',V_27l_27))) => ![V_27n_27]: s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),V_27cs_27))) = s('bool','const.db_vars.has_var_2'(s('type.num.num',V_27n_27),s('type.db_vars.db_var_set',V_27l_27))))).
fof('thm.clos_removeProof.mustkeep_def', axiom, ![V_27n_27, V_27e_27, V_27vset_27]: (p(s('bool','const.clos_removeProof.mustkeep_3'(s('type.num.num',V_27n_27),s('type.closLang.exp',V_27e_27),s('type.db_vars.db_var_set',V_27vset_27)))) <=> (p(s('bool','const.db_vars.has_var_2'(s('type.num.num',V_27n_27),s('type.db_vars.db_var_set',V_27vset_27)))) | ~ (p(s('bool','const.clos_remove.pure_1'(s('type.closLang.exp',V_27e_27)))))))).
fof('ARITY_2_4_const.clos_removeProof.rm|49|', axiom, ![VV0, VV1, VV2, VV3]: s('type.closLang.exp','happ'(s('fun'('type.closLang.exp','type.closLang.exp'),'happ'(s('fun'('type.num.num','fun'('type.closLang.exp','type.closLang.exp')),'const.clos_removeProof.rm|49|_2'(s('type.db_vars.db_var_set',VV0),s('type.num.num',VV1))),s('type.num.num',VV2))),s('type.closLang.exp',VV3))) = s('type.closLang.exp','const.clos_removeProof.rm|49|_4'(s('type.db_vars.db_var_set',VV0),s('type.num.num',VV1),s('type.num.num',VV2),s('type.closLang.exp',VV3)))).
fof('thm.clos_removeProof.rm|49|_def', axiom, ![V_27vset_27, V_27n_27, V_27i_27, V_27e_27]: s('type.closLang.exp','const.clos_removeProof.rm|49|_4'(s('type.db_vars.db_var_set',V_27vset_27),s('type.num.num',V_27n_27),s('type.num.num',V_27i_27),s('type.closLang.exp',V_27e_27))) = s('type.closLang.exp','const.bool.COND_3'(s('bool','const.clos_removeProof.mustkeep_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27i_27))),s('type.closLang.exp',V_27e_27),s('type.db_vars.db_var_set',V_27vset_27))),s('type.closLang.exp','const.list.HD_1'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_remove.remove_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.closLang.exp','const.clos_remove.const_|48|_0')))).
fof('thm.clos_removeProof.clos_removeProof_2|48|_prove_ltb', axiom, ![V_27n_27, V_27keeps_27]: s('fun'('type.num.num','fun'('type.closLang.exp','type.closLang.exp')),'const.combin.o_2'(s('fun'('type.num.num','fun'('type.closLang.exp','type.closLang.exp')),'const.clos_removeProof.rm|49|_2'(s('type.db_vars.db_var_set',V_27keeps_27),s('type.num.num',V_27n_27))),s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'))) = s('fun'('type.num.num','fun'('type.closLang.exp','type.closLang.exp')),'const.clos_removeProof.rm|49|_2'(s('type.db_vars.db_var_set',V_27keeps_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.clos_removeProof.clos_removeProof_2|49|_prove_ltb|split|0', axiom, ![V_27FFI_27]: ![V_27t_27, V_27es_27, V_27E_27, V_27s_27]: ((s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),V_27t_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27E_27),s('type.closSem.state'(V_27FFI_27),V_27s_27))))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.closLang.exp','bool'),'const.clos_remove.pure_0'),s('type.list.list'('type.closLang.exp'),V_27es_27))))) => p(s('bool','const.pair.pair_CASE_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27E_27),s('type.closSem.state'(V_27FFI_27),V_27s_27))))))),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'bool')),'_dst_x00x10x01x00_4'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'fun'('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'bool'),'bool'))),'const.semanticPrimitives.result_CASE_0'),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s('fun'('type.closSem.state'(V_27FFI_27),'fun'('type.list.list'('type.closSem.v'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closSem.state'(V_27FFI_27),'bool'),'_dst_x1x0_2'(s('fun'('type.closSem.state'(V_27FFI_27),'fun'('type.closSem.state'(V_27FFI_27),'bool')),'=_0'),s('type.closSem.state'(V_27FFI_27),V_27s_27))),s('fun'('type.list.list'('type.closSem.v'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.num.num'),'const.list.LENGTH_0'),s('type.list.list'('type.closLang.exp'),V_27es_27))))))),s('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'fun'('fun'('type.closSem.v','bool'),'fun'('fun'('type.semanticPrimitives.abort','bool'),'bool'))),'const.semanticPrimitives.error_result_CASE_0'),s('fun'('type.closSem.v','bool'),'_dst_x0_1'(s('bool','F_0'))),s('fun'('type.semanticPrimitives.abort','bool'),'_dst_x1x0_2'(s('fun'('type.semanticPrimitives.abort','fun'('type.semanticPrimitives.abort','bool')),'=_0'),s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))))))).
fof('thm.clos_removeProof.pure_expressions_clean', conjecture, ![V_27FFI_27]: ![V_27s_27, V_27env_27, V_27e_27]: (p(s('bool','const.clos_remove.pure_1'(s('type.closLang.exp',V_27e_27)))) => p(s('bool','const.pair.pair_CASE_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27FFI_27),V_27s_27))))))),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.closSem.state'(V_27FFI_27),'bool')),'_dst_x00x10x01x00_4'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'fun'('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'bool'),'bool'))),'const.semanticPrimitives.result_CASE_0'),s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s('fun'('type.closSem.state'(V_27FFI_27),'fun'('type.list.list'('type.closSem.v'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closSem.state'(V_27FFI_27),'bool'),'_dst_x1x0_2'(s('fun'('type.closSem.state'(V_27FFI_27),'fun'('type.closSem.state'(V_27FFI_27),'bool')),'=_0'),s('type.closSem.state'(V_27FFI_27),V_27s_27))),s('fun'('type.list.list'('type.closSem.v'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'fun'('fun'('type.closSem.v','bool'),'fun'('fun'('type.semanticPrimitives.abort','bool'),'bool'))),'const.semanticPrimitives.error_result_CASE_0'),s('fun'('type.closSem.v','bool'),'_dst_x0_1'(s('bool','F_0'))),s('fun'('type.semanticPrimitives.abort','bool'),'_dst_x1x0_2'(s('fun'('type.semanticPrimitives.abort','fun'('type.semanticPrimitives.abort','bool')),'=_0'),s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))))))).
