include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
fof('thm.reg_allocProof.in_clash_sets_def', axiom, ![V_27A_27]: ![V_27ls_27, V_27x_27]: (p(s('bool','const.reg_allocProof.in_clash_sets_2'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27),s('type.num.num',V_27x_27)))) <=> ?[V_27y_27]: (p(s('bool','const.bool.IN_2'(s('type.sptree.spt'(V_27A_27),V_27y_27),s('fun'('type.sptree.spt'(V_27A_27),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27)))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27y_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_2_prove_ltb', axiom, ![V_27x_27, V_27y_27, V_27g_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.num.num',V_27x_27))),s('type.num.num',V_27y_27))),s('bool','T_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x011x111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27x_27))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27y_27))))))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x011x100_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.dir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))).
fof('thm.reg_allocProof.reg_allocProof_3_prove_ltb', axiom, ![V_27y_27, V_27x_27, V_27G_27]: s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.undir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.pred_set.INSERT_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.pred_set.INSERT_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.reg_allocProof_4_prove_ltb', axiom, ![V_27q_27, V_27G_27, V_27ls_27]: s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27q_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','bool'),'const.pred_set.INSERT_2'(s('type.num.num',V_27q_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0')))))).
fof('thm.reg_allocProof.reg_allocProof_5_prove_ltb', axiom, ![V_27G_27, V_27ls_27]: s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))).
fof('thm.reg_allocProof.reg_allocProof_6_prove_ltb', axiom, ![V_27ls_27, V_27x_27, V_27g_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x011x100_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x10_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))).
fof('thm.reg_allocProof.reg_allocProof_7_prove_ltb', axiom, ![V_27A_27]: ![V_27ls_27, V_27x_27, V_27g_27]: (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27ls_27)))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x011x100_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'))))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))))).
fof('thm.reg_allocProof.sp_g_is_clique_def', axiom, ![V_27ls_27, V_27g_27]: (p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))) <=> (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))) & ![V_27x_27, V_27y_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & ~ (s('type.num.num',V_27x_27) = s('type.num.num',V_27y_27)))) => (p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))) & p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27y_27),s('type.num.num',V_27x_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))))).
fof('thm.reg_allocProof.colouring_satisfactory_def', axiom, ![V_27A_27]: ![V_27col_27, V_27G_27]: (p(s('bool','const.reg_allocProof.colouring_satisfactory_2'(s('fun'('type.num.num',V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) <=> ![V_27v_27]: (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27v_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('bool','fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'))),'const.option.option_CASE_0'),s('bool','F_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),'=_0'),s('fun'('type.num.num',V_27A_27),V_27col_27),s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27col_27),s('type.num.num',V_27v_27))))))))))))),s('type.option.option'('type.sptree.spt'('type.one.one')),'const.sptree.lookup_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_|49||48|_prove_ltb', axiom, ![V_27ls_27, V_27g_27]: p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))).
fof('thm.reg_allocProof.reg_allocProof_|49||49|_prove_ltb', axiom, ![V_27ls_27, V_27g_27, V_27ls_7c39_7c_27]: ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27)))) & p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))) => p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))))).
fof('thm.reg_allocProof.clash_sets_clique', axiom, ![V_27A_27]: ![V_27ls_27, V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.sptree.spt'(V_27A_27),V_27x_27),s('fun'('type.sptree.spt'(V_27A_27),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27)))))) => p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'const.sptree.toAList_1'(s('type.sptree.spt'(V_27A_27),V_27x_27))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clash_sets_to_sp_g_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27)))))))).
fof('thm.reg_allocProof.colouring_satisfactory_cliques', axiom, ![V_27ls_27, V_27g_27, V_27f_27]: ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27ls_27)))) & (p(s('bool','const.reg_allocProof.colouring_satisfactory_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))) & p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))) => p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),V_27ls_27)))))))).
fof('ARITY_0_1_const.reg_alloc.is_stack_var', axiom, ![VV0]: s('bool','happ'(s('fun'('type.num.num','bool'),'const.reg_alloc.is_stack_var_0'),s('type.num.num',VV0))) = s('bool','const.reg_alloc.is_stack_var_1'(s('type.num.num',VV0)))).
fof('thm.reg_allocProof.colouring_conventional_def', axiom, ![V_27G_27, V_27k_27, V_27col_27]: s('bool','const.reg_allocProof.colouring_conventional_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('fun'('type.num.num','type.num.num'),V_27col_27))) = s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('fun'('fun'('type.num.num','bool'),'bool'),'fun'('fun'('type.num.num','bool'),'bool')),'const.bool.LET_0'),s('fun'('fun'('type.num.num','bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'_i_0_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1x1x1_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),V_27col_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01x01_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_stack_var_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>=_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27))))))),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'))),s('fun'('type.num.num','type.num.num'),V_27col_27))))))))))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.undir_graph_def', axiom, ![V_27G_27]: (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) <=> ![V_27x_27]: p(s('bool','const.option.option_CASE_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.num.num',V_27x_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('bool','T_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27x_27))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))))),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'const.option.SOME_0'))),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27x_27))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0')))))))))))))))))).
fof('thm.reg_allocProof.satisfactory_pref_def', axiom, ![V_27A_27,V_27C_27,V_27B_27]: ![V_27prefs_27]: (p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'(V_27A_27,'fun'('type.list.list'(V_27B_27),'fun'(V_27C_27,'type.option.option'(V_27B_27)))),V_27prefs_27)))) <=> ![V_27h_27, V_27ls_27, V_27col_27, V_27v_27]: (s('type.option.option'(V_27B_27),'happ'(s('fun'(V_27C_27,'type.option.option'(V_27B_27)),'happ'(s('fun'('type.list.list'(V_27B_27),'fun'(V_27C_27,'type.option.option'(V_27B_27))),'happ'(s('fun'(V_27A_27,'fun'('type.list.list'(V_27B_27),'fun'(V_27C_27,'type.option.option'(V_27B_27)))),V_27prefs_27),s(V_27A_27,V_27h_27))),s('type.list.list'(V_27B_27),V_27ls_27))),s(V_27C_27,V_27col_27))) = s('type.option.option'(V_27B_27),'const.option.SOME_1'(s(V_27B_27,V_27v_27))) => p(s('bool','const.bool.IN_2'(s(V_27B_27,V_27v_27),s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27ls_27))))))))).
fof('ARITY_1_4_const.reg_alloc.aux_pref', axiom, ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.aux_pref_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.num.num',VV1))),s('type.list.list'('type.num.num'),VV2))),s('type.sptree.spt'('type.num.num'),VV3))) = s('type.option.option'('type.num.num'),'const.reg_alloc.aux_pref_4'(s('type.sptree.spt'('type.num.num'),VV0),s('type.num.num',VV1),s('type.list.list'('type.num.num'),VV2),s('type.sptree.spt'('type.num.num'),VV3)))).
fof('thm.reg_allocProof.reg_allocProof_|49|7_prove_ltb', axiom, ![V_27prefs_27]: p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.aux_pref_1'(s('type.sptree.spt'('type.num.num'),V_27prefs_27))))))).
fof('thm.reg_allocProof.reg_allocProof_|49|8_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27x_27, V_27col_27, V_27cand_27, V_27ls_27]: (s('type.option.option'(V_27B_27),'const.reg_alloc.first_match_col_3'(s('type.list.list'(V_27B_27),V_27cand_27),s('type.sptree.spt'(V_27B_27),V_27col_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')),V_27ls_27))) = s('type.option.option'(V_27B_27),'const.option.SOME_1'(s(V_27B_27,V_27x_27))) => p(s('bool','const.bool.IN_2'(s(V_27B_27,V_27x_27),s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27cand_27)))))))).
fof('ARITY_1_4_const.reg_alloc.move_pref', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.move_pref_1'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV0))),s('type.num.num',VV1))),s('type.list.list'('type.num.num'),VV2))),s('type.sptree.spt'('type.num.num'),VV3))) = s('type.option.option'('type.num.num'),'const.reg_alloc.move_pref_4'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV0),s('type.num.num',VV1),s('type.list.list'('type.num.num'),VV2),s('type.sptree.spt'('type.num.num'),VV3)))).
fof('thm.reg_allocProof.reg_allocProof_|49|9_prove_ltb', axiom, ![V_27A_27]: ![V_27moves_27]: p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.move_pref_1'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27moves_27))))))).
fof('ARITY_2_5_const.reg_alloc.aux_move_pref', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3, VV4]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.aux_move_pref_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1))),s('type.num.num',VV2))),s('type.list.list'('type.num.num'),VV3))),s('type.sptree.spt'('type.num.num'),VV4))) = s('type.option.option'('type.num.num'),'const.reg_alloc.aux_move_pref_5'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1),s('type.num.num',VV2),s('type.list.list'('type.num.num'),VV3),s('type.sptree.spt'('type.num.num'),VV4)))).
fof('thm.reg_allocProof.reg_allocProof_2|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27prefs_27, V_27moves_27]: p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.aux_move_pref_2'(s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27moves_27))))))).
fof('thm.reg_allocProof.reg_allocProof_2|49|_prove_ltb', axiom, ![V_27ls_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))))))))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.id_colour_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))).
fof('thm.reg_allocProof.reg_allocProof_22_prove_ltb', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27, V_27prefs_27, V_27k_27, V_27G_27, V_27xs_27, V_27spill_27, V_27col_27, V_27spill_7c39_7c_27, V_27col_7c39_7c_27]: ((s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))) & s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))) => s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))))).
fof('thm.reg_allocProof.reg_allocProof_23_prove_ltb', axiom, ![V_27A_27]: ![V_27x_27, V_27prefs_27, V_27k_27, V_27G_27, V_27xs_27, V_27spill_27, V_27col_27, V_27spill_7c39_7c_27, V_27col_7c39_7c_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27)))))) & s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))))).
fof('thm.reg_allocProof.partial_colouring_satisfactory_def', axiom, ![V_27A_27]: ![V_27col_27, V_27G_27]: (p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) <=> (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) & ![V_27v_27]: ((p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27v_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) & p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27v_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.option.option'(V_27A_27),'bool'),'=_1'(s('type.option.option'(V_27A_27),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27))),'const.sptree.lookup_0'),s('type.num.num',V_27v_27))),s('type.sptree.spt'(V_27A_27),V_27col_27))))),s('fun'('type.num.num','type.option.option'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27))),'const.sptree.lookup_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))))))))))),s('type.sptree.spt'('type.one.one'),'const.option.THE_1'(s('type.option.option'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.num.num',V_27v_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))))))).
fof('thm.reg_allocProof.reg_allocProof_25_prove_ltb', axiom, ![V_27ls_27, V_27col_27, V_27k_27, V_27ls_7c39_7c_27]: (s('type.list.list'('type.num.num'),'const.reg_alloc.remove_colours_3'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.list.list'('type.num.num'),V_27k_27))) = s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27) => ![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27)))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27k_27)))))) & ![V_27y_27, V_27c_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27y_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27c_27)))) => ~ (s('type.num.num',V_27c_27) = s('type.num.num',V_27x_27))))))).
fof('thm.reg_allocProof.reg_allocProof_26_prove_ltb', axiom, ![V_27x_27, V_27v_27, V_27h_27, V_27col_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27h_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (s('type.option.option'('type.sptree.spt'('type.one.one')),'const.sptree.lookup_2'(s('type.num.num',V_27h_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.option.option'('type.sptree.spt'('type.one.one')),'const.option.SOME_1'(s('type.sptree.spt'('type.one.one'),V_27x_27))) & ![V_27y_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27x_27)))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) => ~ (s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27y_27),s('type.sptree.spt'('type.num.num'),V_27col_27))))) = s('type.num.num',V_27v_27))))))) => p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'('type.num.num'),'const.sptree.insert_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('ARITY_0_2_const.reg_allocProof.partial_colouring_satisfactory', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('type.sptree.spt'(V_27A_27),VV0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1))) = s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),VV0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1)))).
fof('thm.reg_allocProof.reg_allocProof_27_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27)))) & p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x00_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_28_prove_ltb', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: ((s('fun'('type.num.num','bool'),'const.pred_set.INTER_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0') & s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))) => s('fun'('type.num.num','bool'),'const.pred_set.INTER_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))).
fof('thm.reg_allocProof.reg_allocProof_29_prove_ltb', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: (s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))) => ![V_27x_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27))))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27)))))) | p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))))))).
fof('thm.reg_allocProof.reg_allocProof_3|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27spill_7c39_7c_27, V_27prefs_27, V_27k_27, V_27h_27, V_27col_27, V_27G_27]: ((~ (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (~ (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))))))) & (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'(V_27A_27)),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27)))))) & (![V_27x_27]: (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'),s('type.list.list'('type.num.num'),V_27k_27)))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('type.num.num',V_27x_27))))) & (s('fun'('type.num.num','bool'),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool'))),'const.pred_set.INTER_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0') & p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27))))))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'happ'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27h_27))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x11x11_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x01x10_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'=_0'),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('fun'('type.num.num','type.sptree.spt'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.sptree.insert_1'(s('type.num.num',V_27h_27))),s('type.sptree.spt'('type.num.num'),V_27col_27))))),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'bool')),'=_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'bool')),'=_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11x00_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x00x10x01_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool'))),'const.pred_set.INTER_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.assign_colour_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.num.num',V_27h_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_3|49|_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: ((![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27k_27)))))) => p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27x_27))))) & (s('fun'('type.num.num','bool'),'const.pred_set.INTER_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0') & (p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27)))) & s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))) => ![V_27x_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))) => ?[Vv]: ((p(s('bool',Vv)) <=> ?[V_27y_27]: (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))) & p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27y_27)))))) & p(s('bool','const.bool.COND_3'(s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27x_27))),s('bool','const.bool.COND_3'(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))))),s('bool',Vv),s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))))))),s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))))))))).
fof('thm.reg_allocProof.reg_allocProof_32_prove_ltb', axiom, ![V_27A_27]: ![V_27x_27, V_27h_27, V_27ls_27, V_27ls_7c39_7c_27]: ((p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27x_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27ls_27)))))) & (s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27h_27),s('type.list.list'(V_27A_27),V_27ls_7c39_7c_27))) = s('type.list.list'(V_27A_27),V_27ls_27) & ~ (s(V_27A_27,V_27x_27) = s(V_27A_27,V_27h_27)))) => p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27x_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27ls_7c39_7c_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_33_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27h_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: (s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.assign_colour_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.num.num',V_27h_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))) => ![V_27x_27]: (~ (s('type.num.num',V_27x_27) = s('type.num.num',V_27h_27)) => ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))))))))).
fof('thm.reg_allocProof.reg_allocProof_34_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: (s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))) => ![V_27x_27]: (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))) => ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))))))))).
fof('thm.reg_allocProof.reg_allocProof_35_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: (s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))) => ![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) | p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27)))))))))).
fof('thm.reg_allocProof.reg_allocProof_36_prove_ltb', axiom, ![V_27ls_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & ![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))) => p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'('type.num.num'),'const.reg_alloc.id_colour_1'(s('type.list.list'('type.num.num'),V_27ls_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('_dst_x000x101x101x011_ax', axiom, ![VA,VA4,VA5,VA1,VA2,VA3,VA6]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x101x101x011_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA1,'fun'(VA3,VA4)),V__0),s('fun'(VA1,'fun'(VA3,VA5)),V__1),s('fun'(VA2,'fun'(VA3,VA6)),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x01x01x11_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA3,VA4),'happ'(s('fun'(VA1,'fun'(VA3,VA4)),V__0),s(VA1,V__z))),s('fun'(VA3,VA5),'happ'(s('fun'(VA1,'fun'(VA3,VA5)),V__1),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA6)),V__2)))).
fof('_dst_x000x001x101x111_ax', axiom, ![VA,VA4,VA5,VA2,VA3,VA6,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x001x101x111_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA3,VA4),V__0),s('fun'(VA1,'fun'(VA3,VA5)),V__1),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x01x01x11_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA3,VA4),V__0),s('fun'(VA3,VA5),'happ'(s('fun'(VA1,'fun'(VA3,VA5)),V__1),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__2),s(VA1,V__z)))))).
fof('_dst_x000x001x011x111_ax', axiom, ![VA,VA4,VA5,VA2,VA3,VA6,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x001x011x111_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA3,VA4),V__0),s('fun'(VA2,'fun'(VA3,VA5)),V__1),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x01x11x11_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA3,VA4),V__0),s('fun'(VA2,'fun'(VA3,VA5)),V__1),s('fun'(VA2,'fun'(VA3,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__2),s(VA1,V__z)))))).
fof('thm.reg_allocProof.reg_allocProof_37_prove_ltb', axiom, ![V_27prefs_27, V_27ls_27, V_27k_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11x00_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x00x10x01_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool'))),'const.pred_set.INTER_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x000x001x111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x000x001x101x111_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x000x001x011x111_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_stack_var_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x000x101x101x011_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111x001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))))))))))))))))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_38_prove_ltb', axiom, ![V_27prefs_27, V_27ls_27, V_27k_27, V_27G_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27))))))).
fof('thm.reg_allocProof.reg_allocProof_39_prove_ltb', axiom, ![V_27y_27, V_27x_27, V_27prefs_27, V_27k_27, V_27G_27, V_27ls_27, V_27col_27, V_27col_7c39_7c_27]: ((s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))) & s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27)) => s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))))).
fof('thm.reg_allocProof.reg_allocProof_4|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27prefs_27, V_27k_27, V_27G_27, V_27ls_27, V_27col_27, V_27col_7c39_7c_27]: p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_42_prove_ltb', axiom, ![V_27h_27, V_27col_27, V_27ls_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27col_27),s('type.num.num',V_27h_27)))) & p(s('bool','const.sorting.SORTED_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27h_27),s('type.list.list'('type.num.num'),V_27ls_27))))))) => ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27col_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_43_prove_ltb', axiom, ![V_27col_27, V_27ls_27, V_27col_7c39_7c_27]: ((p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27col_27)))) & (p(s('bool','const.sorting.SORTED_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.list.list'('type.num.num'),V_27ls_27)))) & s('type.num.num','const.reg_alloc.unbound_colours_2'(s('type.num.num',V_27col_27),s('type.list.list'('type.num.num'),V_27ls_27))) = s('type.num.num',V_27col_7c39_7c_27))) => (p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27col_7c39_7c_27)))) & (p(s('bool','const.arithmetic.>=_2'(s('type.num.num',V_27col_7c39_7c_27),s('type.num.num',V_27col_27)))) & ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27col_7c39_7c_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))))))).
fof('thm.reg_allocProof.reg_allocProof_44_prove_ltb', axiom, ![V_27A_27]: ![V_27ls_27]: s('type.list.list'(V_27A_27),'const.reg_alloc.option_filter_1'(s('type.list.list'('type.option.option'(V_27A_27)),V_27ls_27))) = s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'('type.option.option'(V_27A_27),V_27A_27),'const.option.THE_0'),s('type.list.list'('type.option.option'(V_27A_27)),'const.list.FILTER_2'(s('fun'('type.option.option'(V_27A_27),'bool'),'const.option.IS_SOME_0'),s('type.list.list'('type.option.option'(V_27A_27)),V_27ls_27)))))).
fof('thm.reg_allocProof.reg_allocProof_45_prove_ltb', axiom, ![V_27prefs_27, V_27k_27, V_27h_27, V_27col_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))) => p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'('type.num.num'),'const.reg_alloc.assign_colour2_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.num.num',V_27h_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.reg_allocProof_46_prove_ltb', axiom, ![V_27A_27]: ![V_27v_27, V_27prefs_27, V_27k_27, V_27col_7c39_7c_27, V_27col_27, V_27G_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27v_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27)))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27v_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & s('type.sptree.spt'('type.num.num'),'const.reg_alloc.assign_colour2_5'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))) => ?[V_27y_27]: (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))) & (p(s('bool','const.arithmetic.>=_2'(s('type.num.num',V_27y_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27)))))) & p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27y_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_47_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_48_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))))))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))))))).
fof('thm.reg_allocProof.reg_allocProof_49_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111x001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>=_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27))))),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'))))))))))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))))))).
fof('thm.reg_allocProof.reg_allocProof_5|48|_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27h_27, V_27col_27, V_27col_7c39_7c_27]: (s('type.sptree.spt'('type.num.num'),'const.reg_alloc.assign_colour2_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.num.num',V_27h_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27) => ![V_27x_27]: (~ (s('type.num.num',V_27x_27) = s('type.num.num',V_27h_27)) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27)))))))))).
fof('thm.reg_allocProof.reg_allocProof_5|49|_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))))))))))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))))))).
fof('thm.reg_allocProof.is_subgraph_edges_def', axiom, ![V_27G_27, V_27H_27]: (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27)))) <=> (s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27))) & ![V_27x_27, V_27y_27]: (p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) => p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_53_prove_ltb', axiom, ![V_27A_27]: ![V_27G_27, V_27H_27, V_27col_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27)))) & p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27)))))) => p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.reg_allocProof_54_prove_ltb', axiom, ![V_27y_27, V_27x_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & ~ (s('type.num.num',V_27x_27) = s('type.num.num',V_27y_27))) => p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.undir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_55_prove_ltb', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27, V_27col_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))))))) | (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))))) => p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.undir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('ARITY_0_1_const.reg_allocProof.undir_graph', axiom, ![VV0]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))) = s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0)))).
fof('thm.reg_allocProof.reg_allocProof_56_prove_ltb', axiom, ![V_27A_27]: ![V_27q_27, V_27ls_27, V_27G_27, V_27col_27]: ((p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27q_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27q_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('ARITY_1_2_const.reg_allocProof.is_subgraph_edges', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.is_subgraph_edges_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1))) = s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1)))).
fof('ARITY_1_2_const.reg_allocProof.partial_colouring_satisfactory', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.partial_colouring_satisfactory_1'(s('type.sptree.spt'(V_27A_27),VV0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1))) = s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),VV0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1)))).
fof('thm.reg_allocProof.reg_allocProof_57_prove_ltb', axiom, ![V_27A_27]: ![V_27q_27, V_27ls_27, V_27G_27, V_27col_27]: ((p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27q_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27q_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) & (![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))))))))) & p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.partial_colouring_satisfactory_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.is_subgraph_edges_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.partial_colouring_satisfactory_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27q_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_58_prove_ltb', axiom, ![V_27C_27, V_27B_27, V_27A_27]: ((p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27A_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27B_27)))) & p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27B_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27C_27))))) => p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27A_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27C_27)))))).
fof('thm.reg_allocProof.reg_allocProof_59_prove_ltb', axiom, ![V_27A_27]: ![V_27G_27, V_27ls_27, V_27spills_27, V_27col_27]: ((p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.partial_colouring_satisfactory_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spills_27)))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))))))))) & p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'bool')),'_dst_x00x10x10_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.is_subgraph_edges_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.partial_colouring_satisfactory_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))))))))),s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'const.reg_alloc.full_coalesce_aux_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27spills_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27ls_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_6|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27spills_27, V_27moves_27, V_27ls_27, V_27k_27, V_27col_27, V_27coalesce__map_27, V_27G_7c39_7c_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) => (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27col_27))))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))) & s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.reg_alloc.full_coalesce_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.list.list'('type.num.num'),V_27ls_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27spills_27),s('type.sptree.spt'('type.num.num'),V_27coalesce__map_27)))))))) => (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))) & (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))) & p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_6|49|_prove_ltb', axiom, ![V_27ls_27, V_27s_27]: ?[V_27s_7c39_7c_27]: (s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.state_transformer.FOREACH_2'(s('type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_one_0'))),s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) & (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))).
fof('thm.reg_allocProof.reg_allocProof_62_prove_ltb', axiom, ![V_27ls_27, V_27s_27]: ?[V_27s_7c39_7c_27]: (s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.state_transformer.FOREACH_2'(s('type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.revive_moves_0'))),s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) & (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))).
fof('ARITY_0_1_const.reg_alloc.simplify', axiom, ![VV0]: s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.simplify_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.simplify_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.reg_allocProof_63_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27G_27, V_27s_7c39_7c_27, V_27opt_27]: (s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.simplify_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.option.option'('type.num.num'),V_27opt_27),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) => (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))).
fof('ARITY_0_1_const.reg_alloc.freeze', axiom, ![VV0]: s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.freeze_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.freeze_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.reg_allocProof_64_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27G_27, V_27s_7c39_7c_27, V_27opt_27]: (s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.freeze_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.option.option'('type.num.num'),V_27opt_27),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) => (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))).
fof('ARITY_0_1_const.reg_alloc.spill', axiom, ![VV0]: s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.spill_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.spill_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.reg_allocProof_65_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27G_27, V_27s_7c39_7c_27, V_27opt_27]: (s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.spill_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.option.option'('type.num.num'),V_27opt_27),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) => (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))).
fof('thm.reg_allocProof.reg_allocProof_66_prove_ltb', axiom, ![V_27A_27]: ![V_27x__edges_27, V_27x_27, V_27ls_27, V_27s_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))))) & ![V_27y_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) => (~ (s('type.num.num',V_27x_27) = s('type.num.num',V_27y_27)) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))))))))) => ?[V_27s_7c39_7c_27]: (s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.state_transformer.FOREACH_2'(s('type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1x1x1_4'(s('fun'('bool','fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.option.option'(V_27A_27),'fun'('type.option.option'(V_27A_27),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27))),'const.sptree.lookup_0'),s('type.sptree.spt'(V_27A_27),V_27x__edges_27))),s('type.option.option'(V_27A_27),'const.option.NONE_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.IGNORE_BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.inc_one_1'(s('type.num.num',V_27x_27))))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.force_add_1'(s('type.num.num',V_27x_27))))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_one_0'))))),s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) & (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) & p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))))))).
fof('thm.reg_allocProof.reg_allocProof_67_prove_ltb', axiom, ![V_27A_27]: ![V_27x__edges_27, V_27x_27, V_27ls_27, V_27s_27, V_27s_7c39_7c_27]: (s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.state_transformer.FOREACH_2'(s('type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1x1x1_4'(s('fun'('bool','fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.option.option'(V_27A_27),'fun'('type.option.option'(V_27A_27),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27))),'const.sptree.lookup_0'),s('type.sptree.spt'(V_27A_27),V_27x__edges_27))),s('type.option.option'(V_27A_27),'const.option.NONE_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.IGNORE_BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.inc_one_1'(s('type.num.num',V_27x_27))))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.force_add_1'(s('type.num.num',V_27x_27))))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_one_0'))))),s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) => s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27))))).
fof('thm.reg_allocProof.reg_allocProof_68_prove_ltb', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27, V_27p_27, V_27Q_27, V_27G_27, V_27A_7c48_7c_27, V_27ls_27, V_27acc_27, V_27B_27, V_27C_27]: (s('type.pair.prod'('type.option.option'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.split_avail_4'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'),'const.reg_alloc.is_valid_move_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.one.one'),V_27A_7c48_7c_27))),s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'),V_27Q_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27ls_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27acc_27))) = s('type.pair.prod'('type.option.option'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.,_2'(s('type.option.option'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(V_27A_27,V_27p_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27))))))),s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27B_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27C_27))))) => ~ (p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))).
fof('ARITY_0_1_const.reg_alloc.unspill', axiom, ![VV0]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.unspill_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.unspill_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.reg_allocProof_69_prove_ltb', axiom, ![V_27s_27, V_27r_27, V_27q_27]: (s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.unspill_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one',V_27q_27),s('type.reg_alloc.ra_state',V_27r_27))) => (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))).
fof('thm.reg_allocProof.reg_allocProof_7|48|_prove_ltb', axiom, ![V_27s_7c39_7c_27, V_27s_27, V_27r_27, V_27q_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & (~ (p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27q_27),s('type.num.num',V_27r_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))))))) & s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_coalesce_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27q_27),s('type.num.num',V_27r_27))),s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) => (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) & p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_7|49|_prove_ltb', axiom, ![V_27s_7c39_7c_27, V_27s_27, V_27r_27, V_27q_27]: (s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_coalesce_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27q_27),s('type.num.num',V_27r_27))),s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) => s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27))))).
fof('thm.reg_allocProof.reg_allocProof_72_prove_ltb', axiom, ![V_27s_27, V_27v_27, V_27r_27]: (s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.respill_2'(s('type.num.num',V_27v_27),s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27r_27))) => (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))).
fof('ARITY_0_1_const.reg_alloc.coalesce', axiom, ![VV0]: s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.coalesce_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.coalesce_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.reg_allocProof_73_prove_ltb', axiom, ![V_27s_27, V_27G_27, V_27s_7c39_7c_27, V_27opt_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.coalesce_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.option.option'('type.num.num'),V_27opt_27),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))))) => (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) & p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_74_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27G_27, V_27s_7c39_7c_27, V_27opt_27]: (s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.coalesce_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.option.option'('type.num.num'),V_27opt_27),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) => s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27))))).
fof('ARITY_0_1_const.reg_alloc.do_step', axiom, ![VV0]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_step_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_step_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.do_step_graph_lemma', axiom, ![V_27s_27, V_27G_27, V_27s_7c39_7c_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & (~ (s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.num.num','const.num.|48|_0')) & s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_step_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) => (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) & p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))))))))).
fof('thm.reg_allocProof.do_step_clock_lemma', axiom, ![V_27A_27]: ![V_27s_27, V_27G_27, V_27s_7c39_7c_27]: ((~ (s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.num.num','const.num.|48|_0')) & s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_step_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))),s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))))).
fof('ARITY_0_1_const.reg_alloc.rpt_do_step', axiom, ![VV0]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.rpt_do_step_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.rpt_do_step_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.rpt_do_step_graph_lemma', axiom, ![V_27s_27]: (p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'),s('type.reg_alloc.ra_state',V_27s_27)))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.one.one','fun'('type.reg_alloc.ra_state','bool')),'_dst_x0_1'(s('fun'('type.reg_alloc.ra_state','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.reg_alloc.ra_state','bool'),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'))),s('fun'('type.reg_alloc.ra_state','bool'),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.is_subgraph_edges_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'),s('type.reg_alloc.ra_state',V_27s_27))))),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'))))))))),s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.rpt_do_step_1'(s('type.reg_alloc.ra_state',V_27s_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_78_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c7378_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c_7c49_7c7378_27)))).
fof('ARITY_0_1_const.reg_alloc.do_step2', axiom, ![VV0]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_step2_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_step2_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.do_step2_clock_lemma', axiom, ![V_27A_27]: ![V_27s_27, V_27G_27, V_27s_7c39_7c_27]: ((~ (s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.num.num','const.num.|48|_0')) & s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_step2_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))),s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))))).
fof('ARITY_0_1_const.reg_alloc.do_briggs_step', axiom, ![VV0]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_briggs_step_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_briggs_step_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.reg_allocProof_8|48|_prove_ltb', axiom, ![V_27s_27, V_27G_27, V_27s_7c39_7c_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_27)))))) & (~ (s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.num.num','const.num.|48|_0')) & s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_briggs_step_1'(s('type.reg_alloc.ra_state',V_27s_27))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) => (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) & (p(s('bool','const.reg_allocProof.is_subgraph_edges_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_7c39_7c_27))),s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27s_27)))))))))).
fof('ARITY_0_1_const.reg_alloc.briggs_coalesce', axiom, ![VV0]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.briggs_coalesce_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.briggs_coalesce_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_allocProof.reg_allocProof_8|49|_prove_ltb', axiom, ![V_27s_27]: (p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'),s('type.reg_alloc.ra_state',V_27s_27)))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.one.one','fun'('type.reg_alloc.ra_state','bool')),'_dst_x0_1'(s('fun'('type.reg_alloc.ra_state','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.reg_alloc.ra_state','bool'),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'))),s('fun'('type.reg_alloc.ra_state','bool'),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.is_subgraph_edges_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'),s('type.reg_alloc.ra_state',V_27s_27))))),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'))))))))),s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.briggs_coalesce_1'(s('type.reg_alloc.ra_state',V_27s_27)))))))).
fof('ARITY_1_2_const.pred_set.SUBSET', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('fun'(V_27A_27,'bool'),'bool'),'const.pred_set.SUBSET_1'(s('fun'(V_27A_27,'bool'),VV0))),s('fun'(V_27A_27,'bool'),VV1))) = s('bool','const.pred_set.SUBSET_2'(s('fun'(V_27A_27,'bool'),VV0),s('fun'(V_27A_27,'bool'),VV1)))).
fof('thm.reg_allocProof.reg_alloc_satisfactory', axiom, ![V_27G_27, V_27k_27, V_27moves_27, V_27alg_27]: (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.pred_set.SUBSET_1'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.reg_alloc_4'(s('type.num.num',V_27alg_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27)))))))).
fof('ARITY_0_2_const.reg_allocProof.colouring_satisfactory', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('fun'('type.num.num',V_27A_27),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.colouring_satisfactory_0'),s('fun'('type.num.num',V_27A_27),VV0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1))) = s('bool','const.reg_allocProof.colouring_satisfactory_2'(s('fun'('type.num.num',V_27A_27),VV0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1)))).
fof('thm.reg_allocProof.reg_alloc_total_satisfactory', axiom, ![V_27alg_27, V_27G_27, V_27k_27, V_27moves_27]: (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.colouring_satisfactory_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.num.num')),'const.reg_alloc.total_colour_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.reg_alloc_4'(s('type.num.num',V_27alg_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27)))))))).
fof('ARITY_2_3_const.reg_allocProof.colouring_conventional', axiom, ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('fun'('type.num.num','type.num.num'),'bool'),'const.reg_allocProof.colouring_conventional_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1))),s('fun'('type.num.num','type.num.num'),VV2))) = s('bool','const.reg_allocProof.colouring_conventional_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('fun'('type.num.num','type.num.num'),VV2)))).
fof('thm.reg_allocProof.reg_alloc_conventional', axiom, ![V_27alg_27, V_27G_27, V_27k_27, V_27moves_27]: (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','type.num.num'),'bool'),'const.reg_allocProof.colouring_conventional_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.num.num')),'const.reg_alloc.total_colour_0'))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.reg_alloc_4'(s('type.num.num',V_27alg_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27)))))))).
fof('thm.reg_allocProof.reg_alloc_conventional_phy_var', axiom, ![V_27alg_27, V_27G_27, V_27k_27, V_27moves_27]: (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.num.num')),'const.reg_alloc.total_colour_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.reg_alloc_4'(s('type.num.num',V_27alg_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_86_prove_ltb', axiom, ![V_27ls_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27ls_27))))) => p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('thm.reg_allocProof.clash_sets_to_sp_g_undir', axiom, ![V_27A_27]: ![V_27ls_27]: p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clash_sets_to_sp_g_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27))))))).
fof('thm.reg_allocProof.clash_sets_to_sp_g_domain', axiom, ![V_27A_27]: ![V_27ls_27, V_27x_27]: (p(s('bool','const.reg_allocProof.in_clash_sets_2'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27),s('type.num.num',V_27x_27)))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clash_sets_to_sp_g_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27)))))))))).
fof('thm.reg_allocProof.is_subgraph_def', axiom, ![V_27G_27, V_27H_27]: (p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27)))) <=> (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27)))))) & ![V_27x_27, V_27y_27]: (p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) => p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_9|48|_prove_ltb', axiom, ![V_27G_27]: p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))).
fof('thm.reg_allocProof.reg_allocProof_9|49|_prove_ltb', axiom, ![V_27C_27, V_27B_27, V_27A_27]: ((p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27A_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27B_27)))) & p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27B_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27C_27))))) => p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27A_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27C_27)))))).
fof('ARITY_1_2_const.reg_allocProof.sp_g_is_clique', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.sp_g_is_clique_1'(s('type.list.list'('type.num.num'),VV0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1))) = s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),VV0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1)))).
fof('ARITY_1_2_const.reg_allocProof.is_subgraph', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.is_subgraph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1))) = s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1)))).
fof('thm.reg_allocProof.reg_allocProof_92_prove_ltb', axiom, ![V_27live_27, V_27h_27, V_27G_27]: ((p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.sp_g_is_clique_1'(s('type.list.list'('type.num.num'),V_27live_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27h_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27live_27))))))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.is_subgraph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.undir_graph_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'const.reg_allocProof.sp_g_is_clique_1'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27h_27),s('type.list.list'('type.num.num'),V_27live_27))))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27h_27),s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_93_prove_ltb', axiom, ![V_27live_27, V_27G_27]: (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27live_27)))) => p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_94_prove_ltb', axiom, ![V_27l_27, V_27live_27, V_27G_27, V_27G_7c39_7c_27, V_27live_7c39_7c_27]: ((p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27live_27)))) & s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27),s('type.list.list'('type.num.num'),V_27live_7c39_7c_27)))))) => (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27live_7c39_7c_27)))) & (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))) & (p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27live_7c39_7c_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))) & (p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))) & s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27live_7c39_7c_27))) = s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),V_27live_27),s('type.list.list'('type.num.num'),V_27l_27))))))))))).
fof('thm.reg_allocProof.reg_allocProof_95_prove_ltb', axiom, ![V_27A_27]: ![V_27col_27, V_27H_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27)))) & p(s('bool','const.reg_allocProof.colouring_satisfactory_2'(s('fun'('type.num.num',V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27H_27))))) => p(s('bool','const.reg_allocProof.colouring_satisfactory_2'(s('fun'('type.num.num',V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.reg_allocProof_96_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c39_7c_27, V_27s_27, V_27f_27]: ((p(s('bool','const.pred_set.INJ_3'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s('fun'(V_27A_27,'bool'),V_27s_7c39_7c_27),s('fun'(V_27B_27,'bool'),'const.pred_set.UNIV_0')))) & p(s('bool','const.pred_set.SUBSET_2'(s('fun'(V_27A_27,'bool'),V_27s_27),s('fun'(V_27A_27,'bool'),V_27s_7c39_7c_27))))) => p(s('bool','const.pred_set.INJ_3'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s('fun'(V_27A_27,'bool'),V_27s_27),s('fun'(V_27B_27,'bool'),'const.pred_set.UNIV_0')))))).
fof('thm.reg_allocProof.reg_allocProof_97_prove_ltb', axiom, ![V_27ls_27, V_27live_27, V_27flive_27, V_27col_27]: ((s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27flive_27))) = s('fun'('type.num.num','bool'),'const.pred_set.IMAGE_2'(s('fun'('type.num.num','type.num.num'),V_27col_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27live_27))))) & p(s('bool','const.pred_set.INJ_3'(s('fun'('type.num.num','type.num.num'),V_27col_27),s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27live_27))))),s('fun'('type.num.num','bool'),'const.pred_set.UNIV_0'))))) => ?[V_27livein_27, V_27flivein_27]: (s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_partial_col_4'(s('fun'('type.num.num','type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.one.one'),V_27live_27),s('type.sptree.spt'('type.one.one'),V_27flive_27))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.SOME_1'(s('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.pair.,_2'(s('type.sptree.spt'('type.one.one'),V_27livein_27),s('type.sptree.spt'('type.one.one'),V_27flivein_27))))) & (s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27livein_27))) = s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27live_27))))) & s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27flivein_27))) = s('fun'('type.num.num','bool'),'const.pred_set.IMAGE_2'(s('fun'('type.num.num','type.num.num'),V_27col_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27livein_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_98_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27ls_27, V_27col_27]: (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'(V_27B_27),'const.list.MAP_2'(s('fun'(V_27A_27,V_27B_27),V_27col_27),s('type.list.list'(V_27A_27),V_27ls_27)))))) => p(s('bool','const.pred_set.INJ_3'(s('fun'(V_27A_27,V_27B_27),V_27col_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27ls_27))),s('fun'(V_27B_27,'bool'),'const.pred_set.UNIV_0')))))).
fof('thm.reg_allocProof.reg_allocProof_99_prove_ltb', axiom, ![V_27B_27,V_27A_27]: ![V_27livelist_27, V_27live_7c39_7c_27, V_27l_27, V_27col_27]: ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'(V_27B_27,V_27A_27),V_27col_27),s('type.list.list'(V_27B_27),V_27live_7c39_7c_27)))))) & s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27live_7c39_7c_27))) = s('fun'(V_27B_27,'bool'),'const.pred_set.UNION_2'(s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27livelist_27))),s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27l_27)))))) => p(s('bool','const.pred_set.INJ_3'(s('fun'(V_27B_27,V_27A_27),V_27col_27),s('fun'(V_27B_27,'bool'),'const.pred_set.UNION_2'(s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27l_27))),s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27livelist_27))))),s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0')))))).
fof('thm.reg_allocProof.reg_allocProof_|49||48||48|_prove_ltb', axiom, ![V_27G_7c39_7c_27, V_27G_27, V_27ls_27]: ((p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27))))) => p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))))).
fof('thm.reg_allocProof.reg_allocProof_|49||48||49|_prove_ltb', axiom, ![V_27P_27, V_27G_27, V_27ls_27]: (p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) => p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),V_27P_27),s('type.list.list'('type.num.num'),V_27ls_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.domain_numset_list_delete', axiom, ![V_27A_27]: ![V_27l_27, V_27live_27]: s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),'const.reg_alloc.numset_list_delete_2'(s('type.list.list'('type.num.num'),V_27l_27),s('type.sptree.spt'(V_27A_27),V_27live_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.DIFF_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27live_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27l_27)))))).
fof('thm.reg_allocProof.reg_allocProof_|49||48|3_prove_ltb', axiom, ![V_27live_27, V_27l_27, V_27G_27]: ?[V_27G_7c39_7c_27, V_27live_7c39_7c_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27),s('type.list.list'('type.num.num'),V_27live_7c39_7c_27)))).
fof('thm.reg_allocProof.reg_allocProof_|49||48|4_prove_ltb', axiom, ![V_27live_7c39_7c_7c39_7c_27, V_27l_7c48_7c_27, V_27l_27, V_27G_7c39_7c_7c39_7c_27]: ?[V_27G_27, V_27livein_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27l_27))))))),s('type.list.list'('type.num.num'),V_27live_7c39_7c_7c39_7c_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_7c39_7c_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27livein_27)))).
fof('thm.reg_allocProof.reg_allocProof_|49||48|5_prove_ltb', axiom, ![V_27live_27, V_27ct_27, V_27G_27]: ?[V_27G_7c39_7c_27, V_27t_7c49_7c__live_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',V_27ct_27),s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27),s('type.list.list'('type.num.num'),V_27t_7c49_7c__live_27)))).
fof('thm.reg_allocProof.reg_allocProof_|49||48|6_prove_ltb', axiom, ![V_27live_27, V_27ct_7c39_7c_27, V_27G_7c39_7c_7c39_7c_27]: ?[V_27G_27, V_27t2__live_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',V_27ct_7c39_7c_27),s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_7c39_7c_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27t2__live_27)))).
fof('thm.reg_allocProof.reg_allocProof_|49||48|7_prove_ltb', axiom, ![V_27live_27, V_27ct_7c39_7c_27, V_27G_27]: ?[V_27G_7c39_7c_27, V_27live_7c39_7c_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',V_27ct_7c39_7c_27),s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27),s('type.list.list'('type.num.num'),V_27live_7c39_7c_27)))).
fof('thm.reg_allocProof.clash_tree_to_spg_props', axiom, ![V_27ct_27, V_27live_27, V_27G_27, V_27G_7c39_7c_27, V_27live_7c39_7c_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27live_27)))) & (p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',V_27ct_27),s('type.list.list'('type.num.num'),V_27live_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27),s('type.list.list'('type.num.num'),V_27live_7c39_7c_27)))))) => (p(s('bool','const.reg_allocProof.is_subgraph_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27live_7c39_7c_27)))) & (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27)))) & p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27live_7c39_7c_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb', axiom, ![V_27ls_27, V_27G_27, V_27ls_7c39_7c_27]: ((p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & ![V_27x_27]: s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))) = s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27)))))) => p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.reg_allocProof_|49||49||48|_prove_ltb', axiom, ![V_27livelist_27, V_27l_27, V_27G_27]: ?[V_27G_7c39_7c_27, V_27live_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27livelist_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27),s('type.list.list'('type.num.num'),V_27live_27)))).
fof('thm.reg_allocProof.reg_allocProof_|49||49|2_prove_ltb', conjecture, ![V_27livelist_27, V_27ct_27, V_27G_27]: ?[V_27G_7c39_7c_27, V_27t_7c49_7c__live_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',V_27ct_27),s('type.list.list'('type.num.num'),V_27livelist_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_7c39_7c_27),s('type.list.list'('type.num.num'),V_27t_7c49_7c__live_27)))).
