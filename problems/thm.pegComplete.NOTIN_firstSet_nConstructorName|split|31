include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
include('incl/reg_allocProof.ax').
include('incl/bviProps.ax').
include('incl/bvpProps.ax').
include('incl/bvp_simpProof.ax').
include('incl/bvp_spaceProof.ax').
include('incl/bvl_jumpProof.ax').
include('incl/wellorder.ax').
include('incl/cardinal.ax').
include('incl/hrat.ax').
include('incl/hreal.ax').
include('incl/realax.ax').
include('incl/real.ax').
include('incl/topology.ax').
include('incl/nets.ax').
include('incl/seq.ax').
include('incl/lim.ax').
include('incl/powser.ax').
include('incl/transc.ax').
include('incl/intreal.ax').
include('incl/binary_ieee.ax').
include('incl/tailrec.ax').
include('incl/prog.ax').
include('incl/temporal.ax').
include('incl/address.ax').
include('incl/state.ax').
include('incl/temporal_state.ax').
include('incl/machine_ieee.ax').
include('incl/bitstring.ax').
include('incl/arm.ax').
include('incl/blast.ax').
include('incl/update.ax').
include('incl/arm_step.ax').
include('incl/arm6_target.ax').
include('incl/arm6_eval_encode.ax').
include('incl/mlstring.ax').
include('incl/patternMatches.ax').
include('incl/ml_translator.ax').
include('incl/ml_optimise.ax').
include('incl/ml_pmatch.ax').
include('incl/mini_prelude.ax').
include('incl/bag.ax').
include('incl/benchmark.ax').
include('incl/arm8.ax').
include('incl/arm8_step.ax').
include('incl/clos_relation.ax').
include('incl/clos_relationProps.ax').
include('incl/clos_removeProof.ax').
include('incl/simpleSexp.ax').
include('incl/fromSexp.ax').
include('incl/word_inst.ax').
include('incl/word_alloc.ax').
include('incl/word_remove.ax').
include('incl/word_to_word.ax').
include('incl/stackLang.ax').
include('incl/bvp_to_word.ax').
include('incl/stack_alloc.ax').
include('incl/riscv.ax').
include('incl/riscv_step.ax').
include('incl/std_prelude.ax').
include('incl/holSyntaxLib.ax').
include('incl/holSyntax.ax').
include('incl/holSyntaxExtra.ax').
include('incl/ml_module_demo.ax').
include('incl/bvp_liveProof.ax').
include('incl/PhysicistsQueue.ax').
include('incl/holBoolSyntax.ax').
include('incl/holAxiomsSyntax.ax').
include('incl/setSpec.ax').
include('incl/holSemantics.ax').
include('incl/holSemanticsExtra.ax').
include('incl/holBool.ax').
include('incl/commonUnif.ax').
include('incl/term.ax').
include('incl/subst.ax').
include('incl/walk.ax').
include('incl/walkstar.ax').
include('incl/unifDef.ax').
include('incl/unifProps.ax').
include('incl/redUnif.ax').
include('incl/parmove.ax').
include('incl/word_to_stack.ax').
include('incl/bvl_inlineProof.ax').
include('incl/clos_known.ax').
include('incl/clos_knownProof.ax').
include('incl/okasaki_misc.ax').
include('incl/UnbalancedSet.ax').
include('incl/mips.ax').
include('incl/mips_step.ax').
include('incl/mips_target.ax').
include('incl/mips_target_correct.ax').
include('incl/bvl_constProof.ax').
include('incl/int_bitwise.ax').
include('incl/copying_gc.ax').
include('incl/bvp_to_wordProps.ax').
include('incl/jrhSet.ax').
include('incl/BankersQueue.ax').
include('incl/cmlPEG.ax').
include('incl/clos_numberProof.ax').
include('incl/cmlParse.ax').
include('incl/holKernel.ax').
include('incl/reader.ax').
include('incl/x64.ax').
include('incl/source_to_modProof.ax').
include('incl/collapse.ax').
include('incl/infer_t.ax').
include('incl/unify.ax').
include('incl/infer.ax').
include('incl/inferProps.ax').
include('incl/infer_eComplete.ax').
include('incl/bvl_handleProof.ax').
include('incl/dec_to_exhProof.ax').
include('incl/regexpMatch.ax').
include('incl/ninetyOne.ax').
include('incl/example_91.ax').
include('incl/arm8_target.ax').
include('incl/BatchedQueue.ax').
include('incl/stack_remove.ax').
include('incl/stack_names.ax').
include('incl/stack_to_lab.ax').
include('incl/backend.ax').
include('incl/compiler.ax').
include('incl/ImplicitQueue.ax').
include('incl/stackSem.ax').
include('incl/gramProps.ax').
include('incl/pegSound.ax').
include('incl/holKernelProof.ax').
fof('thm.pegComplete.pegComplete_|48|_prove_ltb', axiom, ![V_27B_27,V_27A_27]: ![V_27t_27, V_27l_27, V_27h_27, V_27f_27]: (s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.list.list'(V_27B_27),V_27l_27))) = s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27h_27),s('type.list.list'(V_27A_27),V_27t_27))) <=> ?[V_27h_7c48_7c_27, V_27t_7c48_7c_27]: (s('type.list.list'(V_27B_27),V_27l_27) = s('type.list.list'(V_27B_27),'const.list.CONS_2'(s(V_27B_27,V_27h_7c48_7c_27),s('type.list.list'(V_27B_27),V_27t_7c48_7c_27))) & (s(V_27A_27,'happ'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s(V_27B_27,V_27h_7c48_7c_27))) = s(V_27A_27,V_27h_27) & s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.list.list'(V_27B_27),V_27t_7c48_7c_27))) = s('type.list.list'(V_27A_27),V_27t_27))))).
fof('thm.pegComplete.pegComplete_|49|_prove_ltb', axiom, ![V_27q_27, V_27p_27]: ((~ (p(s('bool',V_27p_27))) | p(s('bool',V_27q_27))) <=> (p(s('bool',V_27p_27)) => p(s('bool',V_27q_27))))).
fof('thm.pegComplete.pegComplete_2_prove_ltb', axiom, ![V_27B_27,V_27A_27]: ![V_27tk_27, V_27pt_27]: (s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(V_27A_27,V_27B_27),V_27pt_27))) = s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.TOK_1'(s(V_27A_27,V_27tk_27))) <=> s('type.grammar.parsetree'(V_27A_27,V_27B_27),V_27pt_27) = s('type.grammar.parsetree'(V_27A_27,V_27B_27),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.TOK_1'(s(V_27A_27,V_27tk_27))))))).
fof('thm.pegComplete.ptree_head_eq_tok|split|1', axiom, ![V_27B_27,V_27A_27]: ![V_27tk_27, V_27pt_27]: (s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.TOK_1'(s(V_27A_27,V_27tk_27))) = s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(V_27A_27,V_27B_27),V_27pt_27))) <=> s('type.grammar.parsetree'(V_27A_27,V_27B_27),V_27pt_27) = s('type.grammar.parsetree'(V_27A_27,V_27B_27),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.TOK_1'(s(V_27A_27,V_27tk_27))))))).
fof('thm.pegComplete.firstSet_nTyOp', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTyOp_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.AlphaT_0'),s('bool','T_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.SymbolT_0'),s('bool','T_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'type.pair.prod'('type.tokens.token','bool')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool'))),'_dst_x00x11x00_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.tokens.token')),'const.tokens.LongidT_0'),s('bool','T_0')))))))))).
fof('thm.pegComplete.firstSet_nTyVarList', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTyVarList_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.TyvarT_0'),s('bool','T_0')))))).
fof('thm.pegComplete.firstSet_nLetDec', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))).
fof('thm.pegComplete.firstSet_nLetDecs', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))).
fof('thm.pegComplete.firstSet_nTypeDec', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeDec_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))).
fof('thm.pegComplete.firstSet_nTypeAbbrevDec', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeAbbrevDec_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))).
fof('thm.pegComplete.firstSet_nDecl', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nDecl_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))))).
fof('thm.pegComplete.firstSet_nDecls', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nDecls_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))))))).
fof('thm.pegComplete.firstSet_nMultOps', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nMultOps_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.AlphaT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.AlphaT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.StarT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))).
fof('thm.pegComplete.firstSet_nRelOps', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nRelOps_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.EqualsT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))))))).
fof('thm.pegComplete.firstSet_nAddOps', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAddOps_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))).
fof('thm.pegComplete.firstSet_nCompOps', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nCompOps_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.AlphaT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))).
fof('thm.pegComplete.firstSet_nListOps', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nListOps_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SymbolT_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))).
fof('thm.pegComplete.firstSet_nUQTyOp', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQTyOp_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.AlphaT_0'),s('bool','T_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.SymbolT_0'),s('bool','T_0')))))))).
fof('thm.pegComplete.firstSet_nStructure', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nStructure_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.StructureT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))).
fof('thm.pegComplete.firstSet_nTopLevelDec', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTopLevelDec_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.StructureT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))))))).
fof('thm.pegComplete.firstSet_nSpecLine', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nSpecLine_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))).
fof('thm.pegComplete.firstSet_nSpecLineList', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nSpecLineList_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))))).
fof('thm.pegComplete.firstSet_nV', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x1_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.AlphaT_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('type.string.char','bool'),'const.string.isUpper_0'),s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.list.HD_0'))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x1_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.SymbolT_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))))))))))).
fof('thm.pegComplete.firstSet_nFQV', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'type.pair.prod'('type.tokens.token','bool')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool'))),'_dst_x00x11x01_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.tokens.token')),'const.tokens.LongidT_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('type.string.char','bool'),'const.string.isAlpha_0'),s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.list.HD_0'))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('type.string.char','bool'),'const.string.isUpper_0'),s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.list.HD_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.EMPTY_0')))))))))))))))))))))))))).
fof('thm.pegComplete.firstSet_nConstructorName', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'type.pair.prod'('type.tokens.token','bool')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool'))),'_dst_x00x11x01_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.tokens.token')),'const.tokens.LongidT_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('type.string.char','bool'),'const.string.isAlpha_0'),s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.list.HD_0'))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('type.string.char','bool'),'const.string.isUpper_0'),s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.list.HD_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.EMPTY_0'))))))))))))))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x1_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.AlphaT_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('type.string.char','bool'),'const.string.isUpper_0'),s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.list.HD_0'))))))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x1_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.AlphaT_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.EMPTY_0')))))))))))))))))).
fof('thm.pegComplete.firstSetML_nConstructorName', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSetML_nV', axiom, ![V_27sn_27, V_27rest_27]: (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSetML_nFQV', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nEtuple', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtuple_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.LparT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))).
fof('thm.pegComplete.firstSet_nEbase', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.LetT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.LparT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.LbrackT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.OpT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0'))))))))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.integer.int','type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.integer.int','type.tokens.token'),'const.tokens.IntT_0'),s('bool','T_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.StringT_0'),s('bool','T_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.string.char','type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.string.char','type.tokens.token'),'const.tokens.CharT_0'),s('bool','T_0'))))))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))).
fof('thm.pegComplete.firstSetML_nEbase', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nEapp', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nEapp', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nEmult', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nEmult', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nEadd', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nEadd', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nElistop', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nElistop', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nErel', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nErel', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nEcomp', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nEcomp', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nEbefore', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nEbefore', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nEtyped', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtyped_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nEtyped', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtyped_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtyped_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nElogicAND', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nElogicAND', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtyped_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nElogicOR', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nElogicOR', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtyped_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))))))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nEhandle', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEhandle_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nEhandle', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtyped_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEhandle_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))))))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEhandle_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nE', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.IfT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.CaseT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.FnT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.RaiseT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))))).
fof('thm.pegComplete.firstSet_nTopLevelDecs', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTopLevelDecs_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.StructureT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0'))))))))))))))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))).
fof('thm.pegComplete.firstSet_nNonETopLevelDecs', axiom, s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nNonETopLevelDecs_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.StructureT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))))))))))).
fof('thm.pegComplete.firstSet_nEseq', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|0', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|1', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.StructureT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|2', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|3', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|4', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|5', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|6', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RparT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|7', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RbrackT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nE|split|8', axiom, ![V_27rest_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27)))))))))).
fof('thm.pegComplete.firstSetML_nE', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtyped_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEhandle_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))))))))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nE|39|', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE|39|_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.IfT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.RaiseT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))))))).
fof('thm.pegComplete.firstSetML_nE|39|', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEmult_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEadd_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nErel_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEcomp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEbefore_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEtyped_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE|39|_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElistop_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))))))))))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE|39|_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE|39|_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nElist|49|', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nPtuple', axiom, ![V_27sn_27, V_27rest_27]: (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPtuple_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPtuple_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.LparT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0'))))).
fof('thm.pegComplete.firstSet_nPtuple', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPtuple_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.LparT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0')))).
fof('thm.pegComplete.firstSet_nPbase', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.UNION_2'(s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.LparT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.UnderbarT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.INSERT_2'(s('type.tokens.token','const.tokens.LbrackT_0'),s('fun'('type.tokens.token','bool'),'const.pred_set.EMPTY_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.integer.int','type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.integer.int','type.tokens.token'),'const.tokens.IntT_0'),s('bool','T_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.tokens.token'),'const.tokens.StringT_0'),s('bool','T_0'))))))),s('fun'('type.tokens.token','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.string.char','type.pair.prod'('type.tokens.token','bool')),'_dst_x0x1x0_3'(s('fun'('type.tokens.token','fun'('bool','type.pair.prod'('type.tokens.token','bool'))),'const.pair.,_0'),s('fun'('type.string.char','type.tokens.token'),'const.tokens.CharT_0'),s('bool','T_0'))))))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))).
fof('thm.pegComplete.firstSetML_nPbase', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPtuple_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nPapp', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPapp_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSetML_nPapp', axiom, ![V_27sn_27, V_27rest_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPtuple_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPapp_0'))),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27)))))))))) => s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSetML_3'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('fun'('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'bool'),V_27sn_27),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPapp_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0'))))))).
fof('thm.pegComplete.firstSet_nPattern', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPattern_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSet_nPatternList', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPatternList_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPattern_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.firstSet_nPbaseList|49|', axiom, ![V_27rest_27]: s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbaseList|49|_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),V_27rest_27))))) = s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbase_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|0', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CommaT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|1', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LparT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|2', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RparT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|3', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.UnderbarT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|4', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.BarT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|5', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.OpT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|6', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.FnT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|7', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.IfT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|8', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.EqualsT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|9', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.DarrowT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|10', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|11', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|12', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.EndT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|13', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.AndT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|14', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|15', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LbrackT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|16', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RbrackT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|17', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.InT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|18', axiom, ![V_27i_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.IntT_1'(s('type.integer.int',V_27i_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|19', axiom, ![V_27s_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.StringT_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|20', axiom, ![V_27c_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CharT_1'(s('type.string.char',V_27c_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|21', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ThenT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|22', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ElseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|23', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CaseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|24', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LetT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|25', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.OfT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|26', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RaiseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|27', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|28', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|29', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|30', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ColonT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nV|split|31', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.StructureT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|0', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.AndT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|1', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.BarT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|2', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CaseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|3', axiom, ![V_27c_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CharT_1'(s('type.string.char',V_27c_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|4', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ColonT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|5', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CommaT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|6', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.DarrowT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|7', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|8', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ElseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|9', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.EndT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|10', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.EqualsT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|11', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|12', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.FnT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|13', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|14', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.IfT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|15', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.InT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|16', axiom, ![V_27i_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.IntT_1'(s('type.integer.int',V_27i_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|17', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LbrackT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|18', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LetT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|19', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LparT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|20', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.OfT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|21', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.OpT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|22', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RaiseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|23', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RbrackT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|24', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RparT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|25', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|26', axiom, ![V_27s_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.StringT_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|27', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.StructureT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|28', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ThenT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|29', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|30', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.UnderbarT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nFQV|split|31', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|0', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.AndT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|1', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.BarT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|2', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ColonT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|3', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CaseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|4', axiom, ![V_27c_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CharT_1'(s('type.string.char',V_27c_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|5', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.CommaT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|6', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.DarrowT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|7', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.DatatypeT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|8', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ElseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|9', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.EndT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|10', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.EqualsT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|11', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ExceptionT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|12', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.FnT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|13', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.FunT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|14', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.IfT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|15', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.InT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|16', axiom, ![V_27i_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.IntT_1'(s('type.integer.int',V_27i_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|17', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LbrackT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|18', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LetT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|19', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.LparT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|20', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.OfT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|21', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.OpT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|22', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RaiseT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|23', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RbrackT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|24', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.RparT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|25', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.SemicolonT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|26', axiom, ![V_27s_27]: ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.StringT_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|27', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.StructureT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|28', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ThenT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|29', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.TypeT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|30', axiom, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.UnderbarT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
fof('thm.pegComplete.NOTIN_firstSet_nConstructorName|split|31', conjecture, ~ (p(s('bool','const.bool.IN_2'(s('type.tokens.token','const.tokens.ValT_0'),s('fun'('type.tokens.token','bool'),'const.NTproperties.firstSet_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.CONS_2'(s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.NIL_0')))))))))).
