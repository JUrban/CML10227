include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
include('incl/reg_allocProof.ax').
include('incl/bviProps.ax').
include('incl/bvpProps.ax').
include('incl/bvp_simpProof.ax').
include('incl/bvp_spaceProof.ax').
include('incl/bvl_jumpProof.ax').
include('incl/wellorder.ax').
include('incl/cardinal.ax').
include('incl/hrat.ax').
include('incl/hreal.ax').
include('incl/realax.ax').
include('incl/real.ax').
include('incl/topology.ax').
include('incl/nets.ax').
include('incl/seq.ax').
include('incl/lim.ax').
include('incl/powser.ax').
include('incl/transc.ax').
include('incl/intreal.ax').
include('incl/binary_ieee.ax').
include('incl/tailrec.ax').
include('incl/prog.ax').
include('incl/temporal.ax').
include('incl/address.ax').
include('incl/state.ax').
include('incl/temporal_state.ax').
include('incl/machine_ieee.ax').
include('incl/bitstring.ax').
include('incl/arm.ax').
include('incl/blast.ax').
include('incl/update.ax').
include('incl/arm_step.ax').
include('incl/arm6_target.ax').
include('incl/arm6_eval_encode.ax').
include('incl/mlstring.ax').
include('incl/patternMatches.ax').
fof('thm.ml_translator.empty_state_def', axiom, s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0') = s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.num.|48|_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_refs_fupd_2'(s('fun'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'('type.one.one'),'type.ffi.ffi_state'('type.one.one')),'const.combin.K_1'(s('type.ffi.ffi_state'('type.one.one'),'const.ffi.initial_ffi_state_2'(s('fun'('type.num.num','fun'('type.one.one','fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.bool.ARB_0'),s('type.one.one','const.one.one_0'))))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_defined_types_fupd_2'(s('fun'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.semanticPrimitives.tid_or_exn','bool')),'const.combin.K_1'(s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.pred_set.EMPTY_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_defined_mods_fupd_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'fun'('type.list.list'('type.string.char'),'bool')),'const.combin.K_1'(s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.EMPTY_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.bool.ARB_0')))))))))))).
fof('thm.ml_translator.Eval_def', axiom, ![V_27env_27, V_27exp_27, V_27P_27]: (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),V_27P_27)))) <=> ?[V_27res_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27)))))))) & p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v',V_27res_27))))))).
fof('thm.ml_translator.evaluate_closure_def', axiom, ![V_27input_27, V_27cl_27, V_27output_27]: (p(s('bool','const.ml_translator.evaluate_closure_3'(s('type.semanticPrimitives.v',V_27input_27),s('type.semanticPrimitives.v',V_27cl_27),s('type.semanticPrimitives.v',V_27output_27)))) <=> ?[V_27env_27, V_27exp_27]: (s('type.option.option'('type.pair.prod'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.ast.exp')),'const.semanticPrimitives.do_opapp_1'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27cl_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27input_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))))) = s('type.option.option'('type.pair.prod'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.ast.exp'),'const.pair.,_2'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27))))) & p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27output_27))))))))))).
fof('thm.ml_translator.AppReturns_def', axiom, ![V_27P_27, V_27cl_27, V_27Q_27]: (p(s('bool','const.ml_translator.AppReturns_3'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v',V_27cl_27),s('fun'('type.semanticPrimitives.v','bool'),V_27Q_27)))) <=> ![V_27v_27]: (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v',V_27v_27)))) => ?[V_27u_27]: (p(s('bool','const.ml_translator.evaluate_closure_3'(s('type.semanticPrimitives.v',V_27v_27),s('type.semanticPrimitives.v',V_27cl_27),s('type.semanticPrimitives.v',V_27u_27)))) & p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27Q_27),s('type.semanticPrimitives.v',V_27u_27)))))))).
fof('ARITY_2_4_const.ml_translator.Arrow', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2, VV3]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Arrow_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV1))),s('fun'(V_27A_27,V_27B_27),VV2))),s('type.semanticPrimitives.v',VV3))) = s('bool','const.ml_translator.Arrow_4'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV1),s('fun'(V_27A_27,V_27B_27),VV2),s('type.semanticPrimitives.v',VV3)))).
fof('thm.ml_translator.Arrow_def', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27, V_27b_27, V_27f_27, Vx]: (p(s('bool','const.ml_translator.Arrow_4'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27),s('type.semanticPrimitives.v',Vx)))) <=> ![V_27x_27]: p(s('bool','const.ml_translator.AppReturns_3'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27))),s('type.semanticPrimitives.v',Vx),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27x_27)))))))))).
fof('ARITY_2_4_const.ml_translator.Eq', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Eq_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s(V_27A_27,VV1))),s(V_27A_27,VV2))),s('type.semanticPrimitives.v',VV3))) = s('bool','const.ml_translator.Eq_4'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s(V_27A_27,VV1),s(V_27A_27,VV2),s('type.semanticPrimitives.v',VV3)))).
fof('thm.ml_translator.Eq_def', axiom, ![V_27A_27]: ![V_27abs_27, V_27x_27, Vx, Vx0]: (p(s('bool','const.ml_translator.Eq_4'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27abs_27),s(V_27A_27,V_27x_27),s(V_27A_27,Vx),s('type.semanticPrimitives.v',Vx0)))) <=> (s(V_27A_27,V_27x_27) = s(V_27A_27,Vx) & p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27abs_27),s(V_27A_27,Vx))),s('type.semanticPrimitives.v',Vx0))))))).
fof('ARITY_2_4_const.ml_translator.And', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.And_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27A_27,'bool'),VV1))),s(V_27A_27,VV2))),s('type.semanticPrimitives.v',VV3))) = s('bool','const.ml_translator.And_4'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27A_27,'bool'),VV1),s(V_27A_27,VV2),s('type.semanticPrimitives.v',VV3)))).
fof('thm.ml_translator.And_def', axiom, ![V_27A_27]: ![V_27a_27, V_27P_27, V_27x_27, V_27v_27]: (p(s('bool','const.ml_translator.And_4'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('fun'(V_27A_27,'bool'),V_27P_27),s(V_27A_27,V_27x_27),s('type.semanticPrimitives.v',V_27v_27)))) <=> (p(s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27P_27),s(V_27A_27,V_27x_27)))) & p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27))),s('type.semanticPrimitives.v',V_27v_27))))))).
fof('ARITY_0_2_const.ml_translator.UNIT_TYPE', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.one.one','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.UNIT_TYPE_0'),s('type.one.one',VV0))),s('type.semanticPrimitives.v',VV1))) = s('bool','const.ml_translator.UNIT_TYPE_2'(s('type.one.one',VV0),s('type.semanticPrimitives.v',VV1)))).
fof('thm.ml_translator.UNIT_TYPE_def', axiom, ![V_27u_27, V_27v_27]: (p(s('bool','const.ml_translator.UNIT_TYPE_2'(s('type.one.one',V_27u_27),s('type.semanticPrimitives.v',V_27v_27)))) <=> s('type.semanticPrimitives.v',V_27v_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))).
fof('ARITY_0_2_const.ml_translator.INT', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.integer.int','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.INT_0'),s('type.integer.int',VV0))),s('type.semanticPrimitives.v',VV1))) = s('bool','const.ml_translator.INT_2'(s('type.integer.int',VV0),s('type.semanticPrimitives.v',VV1)))).
fof('thm.ml_translator.INT_def', axiom, ![V_27i_27, Vx]: (p(s('bool','const.ml_translator.INT_2'(s('type.integer.int',V_27i_27),s('type.semanticPrimitives.v',Vx)))) <=> s('type.semanticPrimitives.v',Vx) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_27))))))).
fof('ARITY_0_1_const.ml_translator.NUM', axiom, ![VV0]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.num.num','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.NUM_0'),s('type.num.num',VV0))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.NUM_1'(s('type.num.num',VV0)))).
fof('ARITY_0_1_const.ml_translator.INT', axiom, ![VV0]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.integer.int','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.INT_0'),s('type.integer.int',VV0))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.INT_1'(s('type.integer.int',VV0)))).
fof('thm.ml_translator.NUM_def', axiom, ![V_27n_27]: s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.NUM_1'(s('type.num.num',V_27n_27))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.INT_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',V_27n_27)))))).
fof('ARITY_0_2_const.ml_translator.BOOL', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('bool','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.BOOL_0'),s('bool',VV0))),s('type.semanticPrimitives.v',VV1))) = s('bool','const.ml_translator.BOOL_2'(s('bool',VV0),s('type.semanticPrimitives.v',VV1)))).
fof('thm.ml_translator.BOOL_def', axiom, ![V_27b_27, Vx]: (p(s('bool','const.ml_translator.BOOL_2'(s('bool',V_27b_27),s('type.semanticPrimitives.v',Vx)))) <=> s('type.semanticPrimitives.v',Vx) = s('type.semanticPrimitives.v','const.semanticPrimitives.Boolv_1'(s('bool',V_27b_27))))).
fof('ARITY_0_2_const.ml_translator.WORD', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.WORD_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.semanticPrimitives.v',VV1))) = s('bool','const.ml_translator.WORD_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.semanticPrimitives.v',VV1)))).
fof('thm.ml_translator.WORD_def', axiom, ![V_27A_27]: ![V_27w_27, Vx]: (p(s('bool','const.ml_translator.WORD_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.semanticPrimitives.v',Vx)))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))) & s('type.semanticPrimitives.v',Vx) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.words.word_lsl_2'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.words.word_lsl_2'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))))))))).
fof('ARITY_0_2_const.ml_translator.CHAR', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.string.char','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.CHAR_0'),s('type.string.char',VV0))),s('type.semanticPrimitives.v',VV1))) = s('bool','const.ml_translator.CHAR_2'(s('type.string.char',VV0),s('type.semanticPrimitives.v',VV1)))).
fof('thm.ml_translator.CHAR_def', axiom, ![V_27c_27, Vx]: (p(s('bool','const.ml_translator.CHAR_2'(s('type.string.char',V_27c_27),s('type.semanticPrimitives.v',Vx)))) <=> s('type.semanticPrimitives.v',Vx) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27))))))).
fof('ARITY_0_2_const.ml_translator.STRING_TYPE', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'),s('type.mlstring.mlstring',VV0))),s('type.semanticPrimitives.v',VV1))) = s('bool','const.ml_translator.STRING_TYPE_2'(s('type.mlstring.mlstring',VV0),s('type.semanticPrimitives.v',VV1)))).
fof('thm.ml_translator.STRING_TYPE_def', axiom, ![V_27s_27, Vx]: (p(s('bool','const.ml_translator.STRING_TYPE_2'(s('type.mlstring.mlstring',V_27s_27),s('type.semanticPrimitives.v',Vx)))) <=> s('type.semanticPrimitives.v',Vx) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27s_27))))))))).
fof('thm.ml_translator.CONTAINER_def', axiom, ![V_27A_27]: ![V_27x_27]: s(V_27A_27,'const.ml_translator.CONTAINER_1'(s(V_27A_27,V_27x_27))) = s(V_27A_27,V_27x_27)).
fof('thm.ml_translator.TAG_def', axiom, ![V_27B_27,V_27A_27]: ![V_27n_27, V_27x_27]: s(V_27A_27,'const.ml_translator.TAG_2'(s(V_27B_27,V_27n_27),s(V_27A_27,V_27x_27))) = s(V_27A_27,V_27x_27)).
fof('thm.ml_translator.PRECONDITION_def', axiom, ![V_27b_27]: s('bool','const.ml_translator.PRECONDITION_1'(s('bool',V_27b_27))) = s('bool',V_27b_27)).
fof('thm.ml_translator.PreImp_def', axiom, ![V_27b_7c49_7c_27, V_27b2_27]: (p(s('bool','const.ml_translator.PreImp_2'(s('bool',V_27b_7c49_7c_27),s('bool',V_27b2_27)))) <=> (p(s('bool','const.ml_translator.PRECONDITION_1'(s('bool',V_27b_7c49_7c_27)))) => p(s('bool',V_27b2_27))))).
fof('thm.ml_translator.evaluate_|49||49|_Rval', axiom, ![V_27A_27]: ![V_27s2_27, V_27s_7c49_7c_27, V_27s_27, V_27res2_27, V_27res_7c49_7c_27, V_27exp_27, V_27env_27, V_27b_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool',V_27b_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27A_27),V_27s_27),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27A_27),V_27s_7c49_7c_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_7c49_7c_27)))))))) => (p(s('bool','const.bigStep.evaluate_5'(s('bool',V_27b_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27A_27),V_27s_27),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27A_27),V_27s2_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res2_27)))))))) => s('type.semanticPrimitives.v',V_27res_7c49_7c_27) = s('type.semanticPrimitives.v',V_27res2_27)))).
fof('ARITY_2_3_const.ml_translator.Arrow', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Arrow_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV1))),s('fun'(V_27A_27,V_27B_27),VV2))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV1),s('fun'(V_27A_27,V_27B_27),VV2)))).
fof('thm.ml_translator.Eval_Arrow', axiom, ![V_27B_27,V_27A_27]: ![V_27x2_27, V_27x_7c49_7c_27, V_27x_27, V_27f_27, V_27env_27, V_27b_27, V_27a_27]: (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x_7c49_7c_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27)))))) => (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x2_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27)))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x2_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27x_27))))))))))).
fof('thm.ml_translator.write_def', axiom, ![V_27A_27]: ![V_27name_27, V_27v_27, V_27env_27]: s('type.semanticPrimitives.environment'(V_27A_27),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27name_27),s(V_27A_27,V_27v_27),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27))) = s('type.semanticPrimitives.environment'(V_27A_27),'const.semanticPrimitives.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27)),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27)),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27name_27),s(V_27A_27,V_27v_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27)),'const.semanticPrimitives.environment_v_1'(s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27))))))),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27)))).
fof('thm.ml_translator.Eval_Fun', axiom, ![V_27A_27,V_27B_27]: ![V_27name_27, V_27f_27, V_27env_27, V_27body_27, V_27b_27, V_27a_27]: (![V_27v_27, V_27x_27]: (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27))),s('type.semanticPrimitives.v',V_27v_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.v',V_27v_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.ast.exp',V_27body_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27x_27))))))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27body_27))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27)))))))).
fof('thm.ml_translator.Eval_Fun_Eq', axiom, ![V_27A_27,V_27B_27]: ![V_27x_27, V_27name_27, V_27f_27, V_27env_27, V_27body_27, V_27b_27, V_27a_27]: (![V_27v_27]: (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27))),s('type.semanticPrimitives.v',V_27v_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.v',V_27v_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.ast.exp',V_27body_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27x_27))))))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27body_27))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Eq_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27)))))))).
fof('thm.ml_translator.And_IMP_Eq', axiom, ![V_27A_27,V_27B_27]: ![V_27x_27, V_27f_27, V_27exp_27, V_27env_27, V_27b_27, V_27a_27, V_27P_27]: (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.And_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('fun'(V_27A_27,'bool'),V_27P_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27)))))) => (p(s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27P_27),s(V_27A_27,V_27x_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Eq_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27))))))))).
fof('thm.ml_translator.Eq_IMP_And', axiom, ![V_27A_27,V_27B_27]: ![V_27name_27, V_27f_27, V_27exp_27, V_27env_27, V_27b_27, V_27a_27, V_27P_27]: (![V_27x_27]: (p(s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27P_27),s(V_27A_27,V_27x_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27exp_27))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Eq_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27))))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27exp_27))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.And_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('fun'(V_27A_27,'bool'),V_27P_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27)))))))).
fof('thm.ml_translator.Eval_Fun_And', axiom, ![V_27A_27,V_27B_27]: ![V_27name_27, V_27f_27, V_27env_27, V_27body_27, V_27b_27, V_27a_27, V_27P_27]: (![V_27v_27, V_27x_27]: (p(s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27P_27),s(V_27A_27,V_27x_27)))) => (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27))),s('type.semanticPrimitives.v',V_27v_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.v',V_27v_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.ast.exp',V_27body_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27x_27)))))))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27body_27))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.And_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('fun'(V_27A_27,'bool'),V_27P_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27)))))))).
fof('thm.ml_translator.Eval_Let', axiom, ![V_27B_27,V_27A_27]: ![V_27res_27, V_27name_27, V_27f_27, V_27exp_27, V_27env_27, V_27body_27, V_27b_27, V_27a_27]: ((p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27res_27)))))) & ![V_27v_27]: (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27res_27))),s('type.semanticPrimitives.v',V_27v_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.v',V_27v_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.ast.exp',V_27body_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27res_27)))))))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27name_27))),s('type.ast.exp',V_27exp_27),s('type.ast.exp',V_27body_27))),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'const.bool.LET_2'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27res_27)))))))))).
fof('thm.ml_translator.lookup_var_def', axiom, ![V_27A_27]: ![V_27name_27, V_27env_27]: s('type.option.option'(V_27A_27),'const.ml_translator.lookup_var_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27))) = s('type.option.option'(V_27A_27),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27)),'const.semanticPrimitives.environment_v_1'(s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27))),s('type.list.list'('type.string.char'),V_27name_27)))).
fof('thm.ml_translator.lookup_cons_def', axiom, ![V_27name_27, V_27env_27]: s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.ml_translator.lookup_cons_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27name_27))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'const.semanticPrimitives.environment_c_1'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27)))))).
fof('thm.ml_translator.lookup_var_write', axiom, ![V_27A_27]: ![V_27x_27, V_27w_27, V_27v_27, V_27env_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.list.list'('type.string.char'),V_27v_27) = s('type.list.list'('type.string.char'),V_27w_27)) & s('type.option.option'(V_27A_27),'const.ml_translator.lookup_var_2'(s('type.list.list'('type.string.char'),V_27v_27),s('type.semanticPrimitives.environment'(V_27A_27),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27w_27),s(V_27A_27,V_27x_27),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27))))) = s('type.option.option'(V_27A_27),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27x_27))),s('type.option.option'(V_27A_27),'const.ml_translator.lookup_var_2'(s('type.list.list'('type.string.char'),V_27v_27),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27))))))).
fof('thm.ml_translator.Eval_Var_SWAP_ENV', axiom, ![V_27name_27, V_27env_27, V_27P_27, V_27env_7c49_7c_27]: ((p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c49_7c_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27name_27))))),s('fun'('type.semanticPrimitives.v','bool'),V_27P_27)))) & s('type.option.option'('type.semanticPrimitives.v'),'const.ml_translator.lookup_var_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.option.option'('type.semanticPrimitives.v'),'const.ml_translator.lookup_var_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c49_7c_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27name_27))))),s('fun'('type.semanticPrimitives.v','bool'),V_27P_27)))))).
fof('thm.ml_translator.LOOKUP_VAR_def', axiom, ![V_27A_27]: ![V_27name_27, V_27env_27, V_27x_27]: (p(s('bool','const.ml_translator.LOOKUP_VAR_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27),s(V_27A_27,V_27x_27)))) <=> s('type.option.option'(V_27A_27),'const.ml_translator.lookup_var_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27))) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27x_27))))).
fof('thm.ml_translator.LOOKUP_VAR_THM', axiom, ![V_27x_27, V_27name_27, V_27env_27]: (p(s('bool','const.ml_translator.LOOKUP_VAR_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.v',V_27x_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27name_27))))),s('fun'('type.semanticPrimitives.v','bool'),'|dollar|equals_1'(s('type.semanticPrimitives.v',V_27x_27)))))))).
fof('thm.ml_translator.LOOKUP_VAR_SIMP', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27, V_27v_27, V_27name_27, V_27env_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s(V_27A_27,V_27v_27) = s(V_27A_27,V_27y_27)) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.list.list'('type.string.char'),V_27x_27) = s('type.list.list'('type.string.char'),V_27name_27)) & s('bool','const.ml_translator.LOOKUP_VAR_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'(V_27A_27),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27x_27),s(V_27A_27,V_27v_27),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27))),s(V_27A_27,V_27y_27))) = s('bool','const.bool.COND_3'(s('bool',Vv_27),s('bool',Vv),s('bool','const.ml_translator.LOOKUP_VAR_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.environment'(V_27A_27),V_27env_27),s(V_27A_27,V_27y_27)))))))).
fof('thm.ml_translator.Eval_Val_INT', axiom, ![V_27env_27, V_27n_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27n_27))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.INT_1'(s('type.integer.int',V_27n_27))))))).
fof('thm.ml_translator.Eval_Val_NUM', axiom, ![V_27env_27, V_27n_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',V_27n_27))))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.NUM_1'(s('type.num.num',V_27n_27))))))).
fof('ARITY_0_1_const.ml_translator.UNIT_TYPE', axiom, ![VV0]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.one.one','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.UNIT_TYPE_0'),s('type.one.one',VV0))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.UNIT_TYPE_1'(s('type.one.one',VV0)))).
fof('thm.ml_translator.Eval_Val_UNIT', axiom, ![V_27env_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.NONE_0'),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.UNIT_TYPE_1'(s('type.one.one','const.one.one_0'))))))).
fof('ARITY_0_1_const.ml_translator.BOOL', axiom, ![VV0]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('bool','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.BOOL_0'),s('bool',VV0))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',VV0)))).
fof('thm.ml_translator.Eval_Val_BOOL_T', axiom, ![V_27env_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Leq_0'))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool','T_0'))))))).
fof('thm.ml_translator.Eval_Val_BOOL_F', axiom, ![V_27env_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Lt_0'))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool','F_0'))))))).
fof('ARITY_0_1_const.ml_translator.CHAR', axiom, ![VV0]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.string.char','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.CHAR_0'),s('type.string.char',VV0))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.CHAR_1'(s('type.string.char',VV0)))).
fof('thm.ml_translator.Eval_Val_CHAR', axiom, ![V_27env_27, V_27c_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.CHAR_1'(s('type.string.char',V_27c_27))))))).
fof('ARITY_0_1_const.ml_translator.STRING_TYPE', axiom, ![VV0]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'),s('type.mlstring.mlstring',VV0))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.STRING_TYPE_1'(s('type.mlstring.mlstring',VV0)))).
fof('thm.ml_translator.Eval_Val_STRING', axiom, ![V_27env_27, V_27s_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27s_27))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.STRING_TYPE_1'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s_27))))))))).
fof('ARITY_0_1_const.ml_translator.WORD', axiom, ![V_27A_27]: ![VV0]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.WORD_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.WORD_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.ml_translator.Eval_Val_WORD', axiom, ![V_27A_27]: ![V_27env_27, V_27w_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.words.word_lsl_2'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.words.word_lsl_2'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.words.w2w_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.WORD_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))))).
fof('ARITY_0_1_const.ml_translator.no_closures', axiom, ![VV0]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.no_closures_0'),s('type.semanticPrimitives.v',VV0))) = s('bool','const.ml_translator.no_closures_1'(s('type.semanticPrimitives.v',VV0)))).
fof('thm.ml_translator.no_closures_primitive_def', axiom, s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.no_closures_0') = s('fun'('type.semanticPrimitives.v','bool'),'const.relation.WFREC_2'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'const.min.@_1'(s('fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.semanticPrimitives.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','bool')),'_dst_x01x10_2'(s('fun'('type.semanticPrimitives.v','fun'('fun'('type.semanticPrimitives.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool'))),'_i_0_0'),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.semanticPrimitives.Conv_0'))))))))))))))),s('fun'('fun'('type.semanticPrimitives.v','bool'),'fun'('type.semanticPrimitives.v','bool')),'_dst_x01x00x10x00x00x00x00_7'(s('fun'('type.semanticPrimitives.v','fun'('fun'('type.ast.lit','bool'),'fun'('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'fun'('fun'('type.num.num','bool'),'fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'))))))),'const.semanticPrimitives.v_CASE_0'),s('fun'('type.ast.lit','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0'))))),s('fun'('fun'('type.semanticPrimitives.v','bool'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))),'_dst_x000x101_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.semanticPrimitives.v','bool'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.semanticPrimitives.v','bool'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.semanticPrimitives.v','bool'),'fun'('type.semanticPrimitives.v','bool')),'_i_0_0'))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool')),'_dst_x0_1'(s('fun'('type.ast.exp','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.num.num','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0')))))))))).
fof('thm.ml_translator.ml_translator_43_prove_ltb', axiom, ![V_27a_27]: ((?[V_27l_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_27))) | (?[V_27name_27, V_27vs_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27name_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27))) | (?[V_27v3_27, V_27v4_27, V_27v5_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v3_27),s('type.list.list'('type.string.char'),V_27v4_27),s('type.ast.exp',V_27v5_27))) | (?[V_27v6_27, V_27v7_27, V_27v8_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v6_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v7_27),s('type.list.list'('type.string.char'),V_27v8_27))) | (?[V_27v9_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v9_27))) | ?[V_27v_7c49_7c_7c48_7c_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_27)))))))) => (?[V_27l_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_27))) | (?[V_27name_27, V_27vs_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27name_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27))) | (?[V_27v3_27, V_27v4_27, V_27v5_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v3_27),s('type.list.list'('type.string.char'),V_27v4_27),s('type.ast.exp',V_27v5_27))) | (?[V_27v6_27, V_27v7_27, V_27v8_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v6_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v7_27),s('type.list.list'('type.string.char'),V_27v8_27))) | (?[V_27v9_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v9_27))) | ?[V_27v_7c49_7c_7c48_7c_27]: s('type.semanticPrimitives.v',V_27a_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_27)))))))))).
fof('thm.ml_translator.no_closures_ind', axiom, ![V_27P_27]: ((![V_27l_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_27)))))) & (![V_27name_27, V_27vs_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.semanticPrimitives.v',V_27a_27),s('fun'('type.semanticPrimitives.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27)))))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27name_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27))))))) & (![V_27v3_27, V_27v4_27, V_27v5_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v3_27),s('type.list.list'('type.string.char'),V_27v4_27),s('type.ast.exp',V_27v5_27)))))) & (![V_27v6_27, V_27v7_27, V_27v8_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v6_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v7_27),s('type.list.list'('type.string.char'),V_27v8_27)))))) & (![V_27v9_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v9_27)))))) & ![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_27))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27P_27),s('type.semanticPrimitives.v',V_27v_27)))))).
fof('thm.ml_translator.no_closures_def|split|0', axiom, ![V_27l_27]: s('bool','const.ml_translator.no_closures_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_27))))) = s('bool','T_0')).
fof('thm.ml_translator.no_closures_def|split|1', axiom, ![V_27vs_27, V_27name_27]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.no_closures_0'),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27name_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27))))) = s('bool','const.list.EVERY_2'(s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.no_closures_0'),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27)))).
fof('thm.ml_translator.no_closures_def|split|2', axiom, ![V_27v5_27, V_27v4_27, V_27v3_27]: s('bool','const.ml_translator.no_closures_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v3_27),s('type.list.list'('type.string.char'),V_27v4_27),s('type.ast.exp',V_27v5_27))))) = s('bool','F_0')).
fof('thm.ml_translator.no_closures_def|split|3', axiom, ![V_27v8_27, V_27v7_27, V_27v6_27]: s('bool','const.ml_translator.no_closures_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v6_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v7_27),s('type.list.list'('type.string.char'),V_27v8_27))))) = s('bool','F_0')).
fof('thm.ml_translator.no_closures_def|split|4', axiom, ![V_27v9_27]: s('bool','const.ml_translator.no_closures_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v9_27))))) = s('bool','F_0')).
fof('thm.ml_translator.no_closures_def|split|5', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('bool','const.ml_translator.no_closures_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_27))))) = s('bool','F_0')).
fof('ARITY_0_1_const.ml_translator.types_match_UNION', axiom, ![VV0]: s('bool','happ'(s('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'const.ml_translator.types_match_UNION_0'),s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),VV0))) = s('bool','const.ml_translator.types_match_UNION_1'(s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),VV0)))).
fof('_dst_x0x0x1x1x0x0x1x0_ax', axiom, ![VA,VA2,VA3,VA4,VA5,VA6,VA7,VA1,VA8]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__z]: s(VA,'happ'(s('fun'(VA1,VA),'_dst_x0x0x1x1x0x0x1x0_8'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),V__x),s(VA2,V__0),s('fun'(VA1,VA3),V__1),s('fun'(VA1,VA4),V__2),s(VA5,V__3),s(VA6,V__4),s('fun'(VA1,VA7),V__5),s(VA8,V__6))),s(VA1,V__z))) = s(VA,'happ'(s('fun'(VA8,VA),'happ'(s('fun'(VA7,'fun'(VA8,VA)),'happ'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,VA))),'happ'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))),'happ'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),'happ'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))),'happ'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),V__x),s(VA2,V__0))),s(VA3,'happ'(s('fun'(VA1,VA3),V__1),s(VA1,V__z))))),s(VA4,'happ'(s('fun'(VA1,VA4),V__2),s(VA1,V__z))))),s(VA5,V__3))),s(VA6,V__4))),s(VA7,'happ'(s('fun'(VA1,VA7),V__5),s(VA1,V__z))))),s(VA8,V__6)))).
fof('_dst_x00x10x01x01x00x00x01x00_ax', axiom, ![VA,VA3,VA1,VA4,VA5,VA6,VA7,VA2,VA8,VA9]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x01x01x00x00x01x00_8'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA2,VA4),V__1),s('fun'(VA2,VA5),V__2),s(VA6,V__3),s(VA7,V__4),s('fun'(VA2,VA8),V__5),s(VA9,V__6))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x1x1x0x0x1x0_8'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s('fun'(VA2,VA4),V__1),s('fun'(VA2,VA5),V__2),s(VA6,V__3),s(VA7,V__4),s('fun'(VA2,VA8),V__5),s(VA9,V__6)))).
fof('_dst_x00x10x00x00x00x00x00x00_ax', axiom, ![VA2,VA,VA3,VA1,VA4,VA5,VA6,VA7,VA8,VA9]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x00x00x00x00x00x00_8'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))),V__x),s('fun'(VA1,VA3),V__0),s(VA4,V__1),s(VA5,V__2),s(VA6,V__3),s(VA7,V__4),s(VA8,V__5),s(VA9,V__6))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x0x0x0x0x0x0_8'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s(VA4,V__1),s(VA5,V__2),s(VA6,V__3),s(VA7,V__4),s(VA8,V__5),s(VA9,V__6)))).
fof('_dst_x000x010x001x101x000x000x001x000_ax', axiom, ![VA,VA2,VA4,VA5,VA6,VA1,VA7,VA8,VA3,VA9,VA10]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x010x001x101x000x000x001x000_8'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))))),V__x),s('fun'(VA2,VA4),V__0),s('fun'(VA3,VA5),V__1),s('fun'(VA1,'fun'(VA3,VA6)),V__2),s(VA7,V__3),s(VA8,V__4),s('fun'(VA3,VA9),V__5),s(VA10,V__6))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x10x01x01x00x00x01x00_8'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))))),V__x),s('fun'(VA2,VA4),V__0),s('fun'(VA3,VA5),V__1),s('fun'(VA3,VA6),'happ'(s('fun'(VA1,'fun'(VA3,VA6)),V__2),s(VA1,V__z))),s(VA7,V__3),s(VA8,V__4),s('fun'(VA3,VA9),V__5),s(VA10,V__6)))).
fof('thm.ml_translator.types_match_UNION_primitive_def', axiom, s('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'const.ml_translator.types_match_UNION_0') = s('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'const.relation.WFREC_2'(s('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'const.min.@_1'(s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool'))))),'_dst_x00000x00011x11111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool')),'_dst_x01x10_2'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool')),'=_0'),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'))),'_i_0_0'))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool'))))),'_dstsel_0_x01100x01111_2'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.pair.,_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'_i_0_0'))))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INL_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'))))),'_dst_x0000x0101x1010_3'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'const.pair.,_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'type.semanticPrimitives.v')),'_dst_x01x10_2'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.semanticPrimitives.Conv_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'_i_0_0'))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'type.semanticPrimitives.v')),'_dst_x01x10_2'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.semanticPrimitives.Conv_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'_i_0_0'))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.semanticPrimitives.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.semanticPrimitives.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool'))))),'_dstsel_0_x00011x01111_2'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INL_0'),s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'_dst_x01x10_2'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'const.pair.,_0'),s('fun'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'_i_0_0'))))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))))),'_dst_x0000x0101x1010_3'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.pair.,_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','type.list.list'('type.semanticPrimitives.v'))),'_dst_x01x10_2'(s('fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'_i_0_0'))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','type.list.list'('type.semanticPrimitives.v'))),'_dst_x01x10_2'(s('fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.semanticPrimitives.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.semanticPrimitives.v','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.semanticPrimitives.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))))),'_dstsel_0_x00011x01111_2'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.pair.,_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'_i_0_0'))))),s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INR_0'),s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))))),'_dst_x0000x0101x1010_3'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.pair.,_0'),s('fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.list.CONS_0'),s('fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.list.CONS_0'))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool')),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'fun'('fun'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'bool'),'fun'('fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'bool'),'bool'))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'bool')),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'fun'('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),'bool')),'const.pair.pair_CASE_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool'))),'_dst_x000x010x001x101x000x000x001x000_8'(s('fun'('type.semanticPrimitives.v','fun'('fun'('type.ast.lit','bool'),'fun'('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'fun'('fun'('type.num.num','bool'),'fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'))))))),'const.semanticPrimitives.v_CASE_0'),s('fun'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'_i_0_0'),s('fun'('type.semanticPrimitives.v','fun'('type.ast.lit','bool')),'_dst_x00x10x01x00x00x00x00x00_8'(s('fun'('type.semanticPrimitives.v','fun'('fun'('type.ast.lit','bool'),'fun'('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'fun'('fun'('type.num.num','bool'),'fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'))))))),'const.semanticPrimitives.v_CASE_0'),s('fun'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'_i_0_0'),s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'const.semanticPrimitives.lit_same_type_0'))),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool')),'_dst_x0_1'(s('fun'('type.ast.exp','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.num.num','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.semanticPrimitives.v','fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')))),'_dst_x0000x0100x0000x1011x0000x0000x0000x0000_8'(s('fun'('type.semanticPrimitives.v','fun'('fun'('type.ast.lit','bool'),'fun'('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'fun'('fun'('type.num.num','bool'),'fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'))))))),'const.semanticPrimitives.v_CASE_0'),s('fun'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'_i_0_0'),s('fun'('type.ast.lit','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))))),'_dst_x00000x01010x11111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool')),'const.semanticPrimitives.ctor_same_type_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))))),'_dst_x00000x01010x10101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'bool')),'=_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.pair.,_0'))))))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool')),'_dst_x0_1'(s('fun'('type.ast.exp','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.num.num','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool')),'_dst_x0_1'(s('fun'('type.ast.exp','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.semanticPrimitives.v','fun'('type.num.num','bool')),'_dst_x00x10x00x00x00x00x00x00_8'(s('fun'('type.semanticPrimitives.v','fun'('fun'('type.ast.lit','bool'),'fun'('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'fun'('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'fun'('fun'('type.num.num','bool'),'fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'bool'))))))),'const.semanticPrimitives.v_CASE_0'),s('fun'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'_i_0_0'),s('fun'('type.ast.lit','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool')),'_dst_x0_1'(s('fun'('type.ast.exp','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x0_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('type.num.num','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0'))))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))),s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'bool')),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'fun'('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'bool')),'const.pair.pair_CASE_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))),'_dst_x000x010x001x101_4'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('bool','fun'('fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'bool'))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'_i_0_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('bool','fun'('fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'bool'))),'const.list.list_CASE_0'),s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0'))),s('fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'_dst_x0_1'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))))))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'bool')))),'_dst_x0000x0100x0000x1011_4'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('bool','fun'('fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),'bool'))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'_i_0_0'),s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','F_0'))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.semanticPrimitives.v','fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))))),'_dst_x00000x11010x10101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool'))),'_dstsel_0_x011_1'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INL_0'),s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'const.pair.,_0'))))),s('fun'('fun'('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'bool'),'fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool'))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')))),'const.pair.,_0')))))))))))))))))))).
fof('thm.ml_translator.ml_translator_47_prove_ltb', axiom, ![V_27a_27]: ((((?[V_27l_7c49_7c_27, V_27l2_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l2_27))))))) | (?[V_27v9_27, V_27v32_27, V_27v33_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v32_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v33_27))))))) | (?[V_27v9_27, V_27v34_27, V_27v35_27, V_27v36_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v34_27),s('type.list.list'('type.string.char'),V_27v35_27),s('type.ast.exp',V_27v36_27))))))) | (?[V_27v9_27, V_27v37_27, V_27v38_27, V_27v39_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v37_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v38_27),s('type.list.list'('type.string.char'),V_27v39_27))))))) | (?[V_27v9_27, V_27v4_7c48_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v4_7c48_7c_27))))))) | ?[V_27v9_27, V_27v4_7c49_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v4_7c49_7c_27)))))))))))) | ((?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v53_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v53_27))))))) | (?[V_27cn_7c49_7c_27, V_27vs_7c49_7c_27, V_27cn2_27, V_27vs2_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v56_27, V_27v57_27, V_27v58_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v56_27),s('type.list.list'('type.string.char'),V_27v57_27),s('type.ast.exp',V_27v58_27))))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v59_27, V_27v6_7c48_7c_27, V_27v6_7c49_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v59_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v6_7c48_7c_27),s('type.list.list'('type.string.char'),V_27v6_7c49_7c_27))))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v62_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v62_27))))))) | ?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v63_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v63_27)))))))))))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v3_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v_7c49_7c2_27),s('type.list.list'('type.string.char'),V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27))),s('type.semanticPrimitives.v',V_27v3_27))))) | (?[V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27, V_27v3_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v_7c49_7c5_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v_7c49_7c6_27),s('type.list.list'('type.string.char'),V_27v_7c49_7c7_27))),s('type.semanticPrimitives.v',V_27v3_27))))) | ((?[V_27v_7c49_7c8_27, V_27v75_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v75_27))))))) | (?[V_27v_7c49_7c8_27, V_27v76_27, V_27v77_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v76_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v77_27))))))) | (?[V_27v_7c49_7c8_27, V_27v78_27, V_27v79_27, V_27v8_7c48_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v78_27),s('type.list.list'('type.string.char'),V_27v79_27),s('type.ast.exp',V_27v8_7c48_7c_27))))))) | (?[V_27v_7c49_7c8_27, V_27v8_7c49_7c_27, V_27v82_27, V_27v83_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v8_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v82_27),s('type.list.list'('type.string.char'),V_27v83_27))))))) | (?[V_27l_7c49_7c_27, V_27l2_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27l_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27l2_27))))))) | ?[V_27v_7c49_7c8_27, V_27v85_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v85_27)))))))))))) | ?[V_27v_7c49_7c9_27, V_27v3_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c9_27))),s('type.semanticPrimitives.v',V_27v3_27)))))))))) | ((s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) | ?[V_27v_7c49_7c_7c48_7c3_27, V_27v_7c49_7c_7c48_7c4_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_7c48_7c3_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c4_27)))))))) | (?[V_27v99_27, V_27v_7c49_7c_7c48_7c_7c48_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v99_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_7c48_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) | ?[V_27v_7c49_7c_27, V_27vs_7c49_7c_27, V_27v2_27, V_27vs2_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27)))))))))) => (?[V_27l_7c49_7c_27, V_27l2_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l2_27))))))) | (?[V_27l_7c49_7c_27, V_27l2_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27l_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27l2_27))))))) | (?[V_27cn_7c49_7c_27, V_27vs_7c49_7c_27, V_27cn2_27, V_27vs2_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))))) | (?[V_27v9_27, V_27v32_27, V_27v33_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v32_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v33_27))))))) | (?[V_27v9_27, V_27v34_27, V_27v35_27, V_27v36_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v34_27),s('type.list.list'('type.string.char'),V_27v35_27),s('type.ast.exp',V_27v36_27))))))) | (?[V_27v9_27, V_27v37_27, V_27v38_27, V_27v39_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v37_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v38_27),s('type.list.list'('type.string.char'),V_27v39_27))))))) | (?[V_27v9_27, V_27v4_7c48_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v4_7c48_7c_27))))))) | (?[V_27v9_27, V_27v4_7c49_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v4_7c49_7c_27))))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v53_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v53_27))))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v56_27, V_27v57_27, V_27v58_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v56_27),s('type.list.list'('type.string.char'),V_27v57_27),s('type.ast.exp',V_27v58_27))))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v59_27, V_27v6_7c48_7c_27, V_27v6_7c49_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v59_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v6_7c48_7c_27),s('type.list.list'('type.string.char'),V_27v6_7c49_7c_27))))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v62_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v62_27))))))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v63_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v63_27))))))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v3_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v_7c49_7c2_27),s('type.list.list'('type.string.char'),V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27))),s('type.semanticPrimitives.v',V_27v3_27))))) | (?[V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27, V_27v3_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v_7c49_7c5_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v_7c49_7c6_27),s('type.list.list'('type.string.char'),V_27v_7c49_7c7_27))),s('type.semanticPrimitives.v',V_27v3_27))))) | (?[V_27v_7c49_7c8_27, V_27v75_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v75_27))))))) | (?[V_27v_7c49_7c8_27, V_27v76_27, V_27v77_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v76_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v77_27))))))) | (?[V_27v_7c49_7c8_27, V_27v78_27, V_27v79_27, V_27v8_7c48_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v78_27),s('type.list.list'('type.string.char'),V_27v79_27),s('type.ast.exp',V_27v8_7c48_7c_27))))))) | (?[V_27v_7c49_7c8_27, V_27v8_7c49_7c_27, V_27v82_27, V_27v83_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v8_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v82_27),s('type.list.list'('type.string.char'),V_27v83_27))))))) | (?[V_27v_7c49_7c8_27, V_27v85_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v85_27))))))) | (?[V_27v_7c49_7c9_27, V_27v3_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c9_27))),s('type.semanticPrimitives.v',V_27v3_27))))) | (s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) | (?[V_27v_7c49_7c_27, V_27vs_7c49_7c_27, V_27v2_27, V_27vs2_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))))) | (?[V_27v_7c49_7c_7c48_7c3_27, V_27v_7c49_7c_7c48_7c4_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_7c48_7c3_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c4_27))))))) | ?[V_27v99_27, V_27v_7c49_7c_7c48_7c_7c48_7c_27]: s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),V_27a_27) = s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v99_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_7c48_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))))))))))))))))))))))))))))).
fof('thm.ml_translator.types_match_UNION_extract|49|_def', axiom, ![V_27x_27, V_27x_7c49_7c_27]: s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),V_27x_27),s('type.list.list'('type.semanticPrimitives.v'),V_27x_7c49_7c_27))) = s('bool','const.ml_translator.types_match_UNION_1'(s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INR_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v')),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.v'),V_27x_27),s('type.list.list'('type.semanticPrimitives.v'),V_27x_7c49_7c_27)))))))).
fof('thm.ml_translator.types_match_UNION_extract|48|_def', axiom, ![V_27x_27, V_27x_7c49_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',V_27x_27),s('type.semanticPrimitives.v',V_27x_7c49_7c_27))) = s('bool','const.ml_translator.types_match_UNION_1'(s('type.sum.sum'('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'type.pair.prod'('type.list.list'('type.semanticPrimitives.v'),'type.list.list'('type.semanticPrimitives.v'))),'const.sum.INL_1'(s('type.pair.prod'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.,_2'(s('type.semanticPrimitives.v',V_27x_27),s('type.semanticPrimitives.v',V_27x_7c49_7c_27)))))))).
fof('thm.ml_translator.types_match_ind', axiom, ![V_27P_7c48_7c_27, V_27P_7c49_7c_27]: ((![V_27l_7c49_7c_27, V_27l2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_7c49_7c_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l2_27)))))) & (![V_27l_7c49_7c_27, V_27l2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27l_7c49_7c_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27l2_27)))))) & (![V_27cn_7c49_7c_27, V_27vs_7c49_7c_27, V_27cn2_27, V_27vs2_27]: ((s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn_7c49_7c_27) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn2_27) => p(s('bool','happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))) => p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))))) & (![V_27v9_27, V_27v32_27, V_27v33_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v32_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v33_27)))))) & (![V_27v9_27, V_27v34_27, V_27v35_27, V_27v36_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v34_27),s('type.list.list'('type.string.char'),V_27v35_27),s('type.ast.exp',V_27v36_27)))))) & (![V_27v9_27, V_27v37_27, V_27v38_27, V_27v39_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v37_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v38_27),s('type.list.list'('type.string.char'),V_27v39_27)))))) & (![V_27v9_27, V_27v4_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v4_7c48_7c_27)))))) & (![V_27v9_27, V_27v4_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v4_7c49_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v53_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v53_27)))))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v56_27, V_27v57_27, V_27v58_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v56_27),s('type.list.list'('type.string.char'),V_27v57_27),s('type.ast.exp',V_27v58_27)))))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v59_27, V_27v6_7c48_7c_27, V_27v6_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v59_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v6_7c48_7c_27),s('type.list.list'('type.string.char'),V_27v6_7c49_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v62_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v62_27)))))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v63_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v63_27)))))) & (![V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v_7c49_7c2_27),s('type.list.list'('type.string.char'),V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27))))),s('type.semanticPrimitives.v',V_27v3_27)))) & (![V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v_7c49_7c5_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v_7c49_7c6_27),s('type.list.list'('type.string.char'),V_27v_7c49_7c7_27))))),s('type.semanticPrimitives.v',V_27v3_27)))) & (![V_27v_7c49_7c8_27, V_27v75_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v75_27)))))) & (![V_27v_7c49_7c8_27, V_27v76_27, V_27v77_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v76_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v77_27)))))) & (![V_27v_7c49_7c8_27, V_27v78_27, V_27v79_27, V_27v8_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v78_27),s('type.list.list'('type.string.char'),V_27v79_27),s('type.ast.exp',V_27v8_7c48_7c_27)))))) & (![V_27v_7c49_7c8_27, V_27v8_7c49_7c_27, V_27v82_27, V_27v83_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v8_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v82_27),s('type.list.list'('type.string.char'),V_27v83_27)))))) & (![V_27v_7c49_7c8_27, V_27v85_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v85_27)))))) & (![V_27v_7c49_7c9_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c9_27))))),s('type.semanticPrimitives.v',V_27v3_27)))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0')))) & (![V_27v_7c49_7c_27, V_27vs_7c49_7c_27, V_27v2_27, V_27vs2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c_27))),s('type.semanticPrimitives.v',V_27v2_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))))) & (![V_27v_7c49_7c_7c48_7c3_27, V_27v_7c49_7c_7c48_7c4_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_7c48_7c3_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c4_27)))))) & ![V_27v99_27, V_27v_7c49_7c_7c48_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v99_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_7c48_7c_27))))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0')))))))))))))))))))))))))))) => (![V_27v_7c48_7c_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.v','bool')),V_27P_7c48_7c_27),s('type.semanticPrimitives.v',V_27v_7c48_7c_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c_27)))) & ![V_27v_7c48_7c_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.list.list'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.semanticPrimitives.v'),'bool')),V_27P_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c48_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_27))))))).
fof('thm.ml_translator.types_match_def|split|0', axiom, ![V_27l2_27, V_27l_7c49_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l2_27))))) = s('bool','const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',V_27l_7c49_7c_27),s('type.ast.lit',V_27l2_27)))).
fof('thm.ml_translator.types_match_def|split|1', axiom, ![V_27l2_27, V_27l_7c49_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27l_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27l2_27))))) = s('bool','T_0')).
fof('thm.ml_translator.types_match_def|split|2', axiom, ![V_27vs2_27, V_27vs_7c49_7c_27, V_27cn2_27, V_27cn_7c49_7c_27]: (p(s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27)))))) <=> (p(s('bool','const.semanticPrimitives.ctor_same_type_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn_7c49_7c_27),s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn2_27)))) & (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn_7c49_7c_27) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27cn2_27) => p(s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27)))))))).
fof('thm.ml_translator.types_match_def|split|3', axiom, ![V_27v9_27, V_27v33_27, V_27v32_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v32_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v33_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|4', axiom, ![V_27v9_27, V_27v36_27, V_27v35_27, V_27v34_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v34_27),s('type.list.list'('type.string.char'),V_27v35_27),s('type.ast.exp',V_27v36_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|5', axiom, ![V_27v9_27, V_27v39_27, V_27v38_27, V_27v37_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v37_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v38_27),s('type.list.list'('type.string.char'),V_27v39_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|6', axiom, ![V_27v9_27, V_27v4_7c48_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v4_7c48_7c_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|7', axiom, ![V_27v9_27, V_27v4_7c49_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v9_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v4_7c49_7c_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|8', axiom, ![V_27v53_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v53_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|9', axiom, ![V_27v58_27, V_27v57_27, V_27v56_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v56_27),s('type.list.list'('type.string.char'),V_27v57_27),s('type.ast.exp',V_27v58_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|10', axiom, ![V_27v6_7c49_7c_27, V_27v6_7c48_7c_27, V_27v59_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v59_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v6_7c48_7c_27),s('type.list.list'('type.string.char'),V_27v6_7c49_7c_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|11', axiom, ![V_27v62_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v62_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|12', axiom, ![V_27v63_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c49_7c_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v63_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|13', axiom, ![V_27v3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c3_27, V_27v_7c49_7c2_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v_7c49_7c2_27),s('type.list.list'('type.string.char'),V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27))),s('type.semanticPrimitives.v',V_27v3_27))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|14', axiom, ![V_27v3_27, V_27v_7c49_7c7_27, V_27v_7c49_7c6_27, V_27v_7c49_7c5_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v_7c49_7c5_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v_7c49_7c6_27),s('type.list.list'('type.string.char'),V_27v_7c49_7c7_27))),s('type.semanticPrimitives.v',V_27v3_27))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|15', axiom, ![V_27v75_27, V_27v_7c49_7c8_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v75_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|16', axiom, ![V_27v77_27, V_27v76_27, V_27v_7c49_7c8_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27v76_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v77_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|17', axiom, ![V_27v8_7c48_7c_27, V_27v79_27, V_27v78_27, V_27v_7c49_7c8_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v78_27),s('type.list.list'('type.string.char'),V_27v79_27),s('type.ast.exp',V_27v8_7c48_7c_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|18', axiom, ![V_27v83_27, V_27v82_27, V_27v8_7c49_7c_27, V_27v_7c49_7c8_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v8_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v82_27),s('type.list.list'('type.string.char'),V_27v83_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|19', axiom, ![V_27v85_27, V_27v_7c49_7c8_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v_7c49_7c8_27))),s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v85_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|20', axiom, ![V_27v3_27, V_27v_7c49_7c9_27]: s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c9_27))),s('type.semanticPrimitives.v',V_27v3_27))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|21', axiom, s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))) = s('bool','T_0')).
fof('thm.ml_translator.types_match_def|split|22', axiom, ![V_27vs2_27, V_27vs_7c49_7c_27, V_27v2_27, V_27v_7c49_7c_27]: (p(s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27)))))) <=> (p(s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.semanticPrimitives.v',V_27v2_27)))) & p(s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))))).
fof('thm.ml_translator.types_match_def|split|23', axiom, ![V_27v_7c49_7c_7c48_7c4_27, V_27v_7c49_7c_7c48_7c3_27]: s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_7c48_7c3_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c4_27))))) = s('bool','F_0')).
fof('thm.ml_translator.types_match_def|split|24', axiom, ![V_27v99_27, V_27v_7c49_7c_7c48_7c_7c48_7c_27]: s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v99_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_7c48_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))) = s('bool','F_0')).
fof('thm.ml_translator.EqualityType_def', axiom, ![V_27A_27]: ![V_27abs_27]: (p(s('bool','const.ml_translator.EqualityType_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27abs_27)))) <=> (![V_27x_7c49_7c_27, V_27v_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27abs_27),s(V_27A_27,V_27x_7c49_7c_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c_27)))) => p(s('bool','const.ml_translator.no_closures_1'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27))))) & (![V_27x_7c49_7c_27, V_27v_7c49_7c_27, V_27x2_27, V_27v2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27abs_27),s(V_27A_27,V_27x_7c49_7c_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27abs_27),s(V_27A_27,V_27x2_27))),s('type.semanticPrimitives.v',V_27v2_27))))) => (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v',V_27v2_27) <=> s(V_27A_27,V_27x_7c49_7c_27) = s(V_27A_27,V_27x2_27))) & ![V_27x_7c49_7c_27, V_27v_7c49_7c_27, V_27x2_27, V_27v2_27]: ((p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27abs_27),s(V_27A_27,V_27x_7c49_7c_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27abs_27),s(V_27A_27,V_27x2_27))),s('type.semanticPrimitives.v',V_27v2_27))))) => p(s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.semanticPrimitives.v',V_27v2_27))))))))).
fof('thm.ml_translator.ml_translator_53_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27k_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num',V_27k_27))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27k_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27)))))))).
fof('thm.ml_translator.EqualityType_NUM_BOOL|split|0', axiom, p(s('bool','const.ml_translator.EqualityType_1'(s('fun'('type.num.num','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.NUM_0'))))).
fof('thm.ml_translator.EqualityType_NUM_BOOL|split|1', axiom, p(s('bool','const.ml_translator.EqualityType_1'(s('fun'('type.integer.int','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.INT_0'))))).
fof('thm.ml_translator.EqualityType_NUM_BOOL|split|2', axiom, p(s('bool','const.ml_translator.EqualityType_1'(s('fun'('bool','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.BOOL_0'))))).
fof('thm.ml_translator.EqualityType_NUM_BOOL|split|3', axiom, ![V_27A_27]: p(s('bool','const.ml_translator.EqualityType_1'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.WORD_0'))))).
fof('thm.ml_translator.EqualityType_NUM_BOOL|split|4', axiom, p(s('bool','const.ml_translator.EqualityType_1'(s('fun'('type.string.char','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.CHAR_0'))))).
fof('thm.ml_translator.EqualityType_NUM_BOOL|split|5', axiom, p(s('bool','const.ml_translator.EqualityType_1'(s('fun'('type.mlstring.mlstring','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.STRING_TYPE_0'))))).
fof('thm.ml_translator.EqualityType_NUM_BOOL|split|6', axiom, p(s('bool','const.ml_translator.EqualityType_1'(s('fun'('type.one.one','fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.UNIT_TYPE_0'))))).
fof('thm.ml_translator.ml_translator_55_prove_ltb', axiom, ![V_27vs_7c49_7c_27, V_27vs2_27]: (p(s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27)))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))))).
fof('thm.ml_translator.ml_translator_56_prove_ltb|split|0', axiom, ![V_27v_7c49_7c_27, V_27v2_27]: (p(s('bool','const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.semanticPrimitives.v',V_27v2_27)))) => ?[Vv]: ((p(s('bool',Vv)) <=> s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v',V_27v2_27)) & s('type.semanticPrimitives.eq_result','const.semanticPrimitives.do_eq_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.semanticPrimitives.v',V_27v2_27))) = s('type.semanticPrimitives.eq_result','const.semanticPrimitives.Eq_val_1'(s('bool',Vv)))))).
fof('thm.ml_translator.ml_translator_56_prove_ltb|split|1', axiom, ![V_27vs_7c49_7c_27, V_27vs2_27]: (p(s('bool','const.ml_translator.types_match_list_2'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27)))) => ?[Vv]: ((p(s('bool',Vv)) <=> s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27) = s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27)) & s('type.semanticPrimitives.eq_result','const.semanticPrimitives.do_eq_list_2'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs2_27))) = s('type.semanticPrimitives.eq_result','const.semanticPrimitives.Eq_val_1'(s('bool',Vv)))))).
fof('thm.ml_translator.ml_translator_57_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27, V_27x_7c49_7c_27, V_27v_7c49_7c_27, V_27x2_27, V_27v2_27]: ((p(s('bool','const.ml_translator.EqualityType_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27)))) & (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_7c49_7c_27))),s('type.semanticPrimitives.v',V_27v_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x2_27))),s('type.semanticPrimitives.v',V_27v2_27)))))) => ?[Vv]: ((p(s('bool',Vv)) <=> s(V_27A_27,V_27x_7c49_7c_27) = s(V_27A_27,V_27x2_27)) & s('type.semanticPrimitives.eq_result','const.semanticPrimitives.do_eq_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.semanticPrimitives.v',V_27v2_27))) = s('type.semanticPrimitives.eq_result','const.semanticPrimitives.Eq_val_1'(s('bool',Vv)))))).
fof('thm.ml_translator.ml_translator_58_prove_ltb', axiom, ![V_27v_27]: ?[V_27x_27]: s('type.pair.prod'('fun'('type.num.num','fun'('type.one.one','fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),V_27v_27) = s('type.pair.prod'('fun'('type.num.num','fun'('type.one.one','fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s('fun'('type.num.num','fun'('type.one.one','fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'('fun'('type.num.num','fun'('type.one.one','fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),V_27x_27))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.num.num','fun'('type.one.one','fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),V_27x_27))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.num.num','fun'('type.one.one','fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),V_27x_27))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.num.num','fun'('type.one.one','fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),V_27x_27)))))))))))))).
fof('thm.ml_translator.ml_translator_62_prove_ltb', axiom, ![V_27v_27]: ?[V_27x_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))))),V_27v_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))))),V_27x_27))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))))),V_27x_27))))),s('type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))),'const.pair.,_2'(s('type.ffi.ffi_state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))))),V_27x_27))))))),s('type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool')),'const.pair.,_2'(s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.pair.FST_1'(s('type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))))),V_27x_27))))))))),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'('type.one.one'),'type.pair.prod'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.list.list'('type.string.char'),'bool'))))),V_27x_27)))))))))))))))))).
fof('thm.ml_translator.Eval_Equality', axiom, ![V_27A_27]: ![V_27y2_27, V_27y_7c49_7c_27, V_27x2_27, V_27x_7c49_7c_27, V_27env_27, V_27a_27]: ((p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x_7c49_7c_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27y_7c49_7c_27)))))) & p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x2_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27y2_27))))))) => (p(s('bool','const.ml_translator.EqualityType_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27)))) => ?[Vv]: ((p(s('bool',Vv)) <=> s(V_27A_27,V_27y_7c49_7c_27) = s(V_27A_27,V_27y2_27)) & p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x2_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',Vv)))))))))).
fof('thm.ml_translator.Eval_Or', axiom, ![V_27x2_27, V_27x_7c49_7c_27, V_27env_27, V_27b2_27, V_27b_7c49_7c_27]: (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x_7c49_7c_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',V_27b_7c49_7c_27)))))) => (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x2_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',V_27b2_27)))))) => ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool',V_27b_7c49_7c_27)) | p(s('bool',V_27b2_27)))) & p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop','const.ast.Or_0'),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',Vv)))))))))).
fof('thm.ml_translator.Eval_And', axiom, ![V_27x2_27, V_27x_7c49_7c_27, V_27env_27, V_27b2_27, V_27b_7c49_7c_27]: (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x_7c49_7c_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',V_27b_7c49_7c_27)))))) => (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x2_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',V_27b2_27)))))) => ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool',V_27b_7c49_7c_27)) & p(s('bool',V_27b2_27)))) & p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop','const.ast.And_0'),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',Vv)))))))))).
fof('thm.ml_translator.Eval_If', axiom, ![V_27A_27]: ![V_27x3_27, V_27x2_27, V_27x_7c49_7c_27, V_27env_27, V_27b3_27, V_27b2_27, V_27b_7c49_7c_27, V_27a3_27, V_27a2_27, V_27a_7c49_7c_27, V_27a_27]: (((p(s('bool',V_27a_7c49_7c_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x_7c49_7c_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',V_27b_7c49_7c_27))))))) & ((p(s('bool',V_27a2_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x2_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27b2_27))))))) & (p(s('bool',V_27a3_27)) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x3_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27b3_27))))))))) => ((p(s('bool',V_27a_7c49_7c_27)) & ((p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',V_27b_7c49_7c_27)))) => p(s('bool',V_27a2_27))) & (~ (p(s('bool','const.ml_translator.CONTAINER_1'(s('bool',V_27b_7c49_7c_27))))) => p(s('bool',V_27a3_27))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27),s('type.ast.exp',V_27x3_27))),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,'const.bool.COND_3'(s('bool',V_27b_7c49_7c_27),s(V_27A_27,V_27b2_27),s(V_27A_27,V_27b3_27))))))))))).
fof('thm.ml_translator.Eval_Bool_Not', axiom, ![V_27x_7c49_7c_27, V_27env_27, V_27b_7c49_7c_27]: (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x_7c49_7c_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',V_27b_7c49_7c_27)))))) => ?[Vv]: ((p(s('bool',Vv)) <=> ~ (p(s('bool',V_27b_7c49_7c_27)))) & p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Lt_0'))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',Vv))))))))).
fof('thm.ml_translator.Eval_Implies', axiom, ![V_27x2_27, V_27x_7c49_7c_27, V_27env_27, V_27b2_27, V_27b_7c49_7c_27]: (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x_7c49_7c_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',V_27b_7c49_7c_27)))))) => (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27x2_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',V_27b2_27)))))) => ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool',V_27b_7c49_7c_27)) => p(s('bool',V_27b2_27)))) & p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb','const.ast.Leq_0'))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.BOOL_1'(s('bool',Vv)))))))))).
fof('thm.ml_translator.Eval_Var_SIMP', axiom, ![V_27y_27, V_27x_27, V_27v_27, V_27p_27, V_27env_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.list.list'('type.string.char'),V_27x_27) = s('type.list.list'('type.string.char'),V_27y_27)) & s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27x_27),s('type.semanticPrimitives.v',V_27v_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27y_27))))),s('fun'('type.semanticPrimitives.v','bool'),V_27p_27))) = s('bool','const.bool.COND_3'(s('bool',Vv),s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),V_27p_27),s('type.semanticPrimitives.v',V_27v_27))),s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27y_27))))),s('fun'('type.semanticPrimitives.v','bool'),V_27p_27))))))).
fof('ARITY_2_3_const.ml_translator.Eq', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Eq_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s(V_27A_27,VV1))),s(V_27A_27,VV2))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Eq_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s(V_27A_27,VV1),s(V_27A_27,VV2)))).
fof('thm.ml_translator.Eval_Eq', axiom, ![V_27A_27]: ![V_27x_27, V_27exp_27, V_27env_27, V_27a_27]: (p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27)))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Eq_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27x_27),s(V_27A_27,V_27x_27)))))))).
fof('ARITY_1_3_const.ml_translator.FUN_FORALL', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_FORALL_1'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),VV0))),s(V_27B_27,VV1))),s('type.semanticPrimitives.v',VV2))) = s('bool','const.ml_translator.FUN_FORALL_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),VV0),s(V_27B_27,VV1),s('type.semanticPrimitives.v',VV2)))).
fof('thm.ml_translator.FUN_FORALL', axiom, ![V_27A_27,V_27B_27]: ![Vx, Vx0, Vx1]: (p(s('bool','const.ml_translator.FUN_FORALL_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),Vx),s(V_27B_27,Vx0),s('type.semanticPrimitives.v',Vx1)))) <=> ![V_27y_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),Vx),s(V_27A_27,V_27y_27))),s(V_27B_27,Vx0))),s('type.semanticPrimitives.v',Vx1)))))).
fof('ARITY_1_3_const.ml_translator.FUN_EXISTS', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_EXISTS_1'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),VV0))),s(V_27B_27,VV1))),s('type.semanticPrimitives.v',VV2))) = s('bool','const.ml_translator.FUN_EXISTS_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),VV0),s(V_27B_27,VV1),s('type.semanticPrimitives.v',VV2)))).
fof('thm.ml_translator.FUN_EXISTS', axiom, ![V_27A_27,V_27B_27]: ![Vx, Vx0, Vx1]: (p(s('bool','const.ml_translator.FUN_EXISTS_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),Vx),s(V_27B_27,Vx0),s('type.semanticPrimitives.v',Vx1)))) <=> ?[V_27y_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),Vx),s(V_27A_27,V_27y_27))),s(V_27B_27,Vx0))),s('type.semanticPrimitives.v',Vx1)))))).
fof('ARITY_1_2_const.ml_translator.FUN_FORALL', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_FORALL_1'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),VV0))),s(V_27B_27,VV1))) = s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.FUN_FORALL_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),VV0),s(V_27B_27,VV1)))).
fof('thm.ml_translator.Eval_FUN_FORALL', axiom, ![V_27A_27,V_27B_27]: ![V_27p_27, V_27f_27, V_27exp_27, V_27env_27]: (![V_27x_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),V_27p_27),s(V_27A_27,V_27x_27))),s(V_27B_27,V_27f_27)))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.FUN_FORALL_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),V_27p_27),s(V_27B_27,V_27f_27)))))))).
fof('thm.ml_translator.Eval_FUN_FORALL_EQ', axiom, ![V_27A_27,V_27B_27]: ![V_27p_27, V_27f_27, V_27exp_27, V_27env_27]: (![V_27x_27]: p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),V_27p_27),s(V_27A_27,V_27x_27))),s(V_27B_27,V_27f_27)))))) <=> p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp',V_27exp_27),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.FUN_FORALL_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),V_27p_27),s(V_27B_27,V_27f_27)))))))).
fof('ARITY_1_2_const.ml_translator.Arrow', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'const.ml_translator.Arrow_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV1))) = s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Arrow_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV1)))).
fof('thm.ml_translator.ml_translator_96_prove_ltb', axiom, ![V_27A_27,V_27C_27,V_27B_27]: ![V_27b_27, V_27a_27]: s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_FORALL_1'(s('fun'(V_27C_27,'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'_dst_x0x1_2'(s('fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'const.ml_translator.Arrow_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27))),s('fun'(V_27C_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),V_27b_27))))) = s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'const.ml_translator.Arrow_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_FORALL_1'(s('fun'(V_27C_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),V_27b_27)))))).
fof('ARITY_0_2_const.ml_translator.Arrow', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')))),'const.ml_translator.Arrow_0'),s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV1))) = s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Arrow_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),VV1)))).
fof('thm.ml_translator.ml_translator_97_prove_ltb', axiom, ![V_27C_27,V_27A_27,V_27B_27]: ![V_27b_27, V_27a_27]: s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_FORALL_1'(s('fun'(V_27C_27,'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'_dst_x0x1x0_3'(s('fun'('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')))),'const.ml_translator.Arrow_0'),s('fun'(V_27C_27,'fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool'))),V_27a_27),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27))))) = s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')))),'const.ml_translator.Arrow_0'),s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_EXISTS_1'(s('fun'(V_27C_27,'fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool'))),V_27a_27))))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27)))).
fof('ARITY_1_2_const.ml_translator.Eq', axiom, ![V_27A_27]: ![VV0, VV1]: s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool'))),'const.ml_translator.Eq_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0))),s(V_27A_27,VV1))) = s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Eq_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),VV0),s(V_27A_27,VV1)))).
fof('thm.ml_translator.ml_translator_98_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_EXISTS_1'(s('fun'(V_27A_27,'fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool'))),'const.ml_translator.Eq_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27))))) = s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27)).
fof('thm.ml_translator.FUN_QUANT_SIMP|split|1', axiom, ![V_27A_27,V_27C_27,V_27B_27]: ![V_27b_27, V_27a_27]: s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_FORALL_1'(s('fun'(V_27C_27,'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'_dst_x0x1_2'(s('fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'const.ml_translator.Arrow_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27))),s('fun'(V_27C_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),V_27b_27))))) = s('fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool')),'happ'(s('fun'('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'fun'('fun'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.v','bool'))),'const.ml_translator.Arrow_1'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.FUN_FORALL_1'(s('fun'(V_27C_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool'))),V_27b_27)))))).
fof('thm.ml_translator.write_rec_def', axiom, ![V_27funs_27, V_27env2_27]: s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_rec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env2_27))) = s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.semanticPrimitives.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.semanticPrimitives.build_rec_env_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env2_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.semanticPrimitives.environment_v_1'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env2_27))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env2_27)))).
fof('thm.ml_translator.ml_translator_|49||48||49|_prove_ltb', axiom, ![V_27B_27,V_27C_27,V_27A_27,V_27D_27]: ![V_27rrr_27, V_27env3_27, V_27funs_27]: s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'const.list.FOLDR_3'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27C_27),'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))))),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27C_27),'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))))),'_dst_x0x1_2'(s('fun'('fun'(V_27B_27,'fun'(V_27C_27,'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))))),'fun'('type.pair.prod'(V_27B_27,V_27C_27),'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'(V_27B_27,'fun'(V_27C_27,'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))))),'_dst_x000x100_2'(s('fun'('type.pair.prod'(V_27A_27,V_27D_27),'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))),'const.list.CONS_0'),s('fun'(V_27A_27,'type.pair.prod'(V_27A_27,V_27D_27)),'_dst_x1x1_2'(s('fun'(V_27A_27,'fun'(V_27D_27,'type.pair.prod'(V_27A_27,V_27D_27))),'const.pair.,_0'),s('fun'(V_27A_27,V_27D_27),V_27rrr_27))))))))),s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),V_27env3_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27funs_27))) = s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),'type.pair.prod'(V_27A_27,V_27D_27)),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27C_27),'type.pair.prod'(V_27A_27,V_27D_27))),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),'type.pair.prod'(V_27A_27,V_27D_27))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27C_27),'type.pair.prod'(V_27A_27,V_27D_27))),'_dst_x0x1_2'(s('fun'('fun'(V_27B_27,'fun'(V_27C_27,'type.pair.prod'(V_27A_27,V_27D_27))),'fun'('type.pair.prod'(V_27B_27,V_27C_27),'type.pair.prod'(V_27A_27,V_27D_27))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'(V_27B_27,'fun'(V_27C_27,'type.pair.prod'(V_27A_27,V_27D_27)))),'_dst_x000x100x100_3'(s('fun'(V_27A_27,'fun'(V_27D_27,'type.pair.prod'(V_27A_27,V_27D_27))),'const.pair.,_0'),s('fun'(V_27A_27,V_27A_27),'_i_0_0'),s('fun'(V_27A_27,V_27D_27),V_27rrr_27))))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27funs_27))),s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),V_27env3_27)))).
fof('ARITY_0_3_const.ml_translator.write', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.semanticPrimitives.environment'(V_27A_27),'happ'(s('fun'('type.semanticPrimitives.environment'(V_27A_27),'type.semanticPrimitives.environment'(V_27A_27)),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.environment'(V_27A_27),'type.semanticPrimitives.environment'(V_27A_27))),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'fun'('type.semanticPrimitives.environment'(V_27A_27),'type.semanticPrimitives.environment'(V_27A_27)))),'const.ml_translator.write_0'),s('type.list.list'('type.string.char'),VV0))),s(V_27A_27,VV1))),s('type.semanticPrimitives.environment'(V_27A_27),VV2))) = s('type.semanticPrimitives.environment'(V_27A_27),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),VV0),s(V_27A_27,VV1),s('type.semanticPrimitives.environment'(V_27A_27),VV2)))).
fof('thm.ml_translator.ml_translator_|49||48|2_prove_ltb', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27rrr_27, V_27env_27, V_27funs_27]: s('type.semanticPrimitives.environment'(V_27C_27),'const.list.FOLDR_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27)),'fun'('type.semanticPrimitives.environment'(V_27C_27),'type.semanticPrimitives.environment'(V_27C_27))),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.environment'(V_27C_27),'type.semanticPrimitives.environment'(V_27C_27)))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27)),'fun'('type.semanticPrimitives.environment'(V_27C_27),'type.semanticPrimitives.environment'(V_27C_27)))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.environment'(V_27C_27),'type.semanticPrimitives.environment'(V_27C_27)))),'_dst_x0x1_2'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.environment'(V_27C_27),'type.semanticPrimitives.environment'(V_27C_27)))),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.environment'(V_27C_27),'type.semanticPrimitives.environment'(V_27C_27)))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.semanticPrimitives.environment'(V_27C_27),'type.semanticPrimitives.environment'(V_27C_27))))),'_dst_x000x100x100_3'(s('fun'('type.list.list'('type.string.char'),'fun'(V_27C_27,'fun'('type.semanticPrimitives.environment'(V_27C_27),'type.semanticPrimitives.environment'(V_27C_27)))),'const.ml_translator.write_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),V_27C_27),V_27rrr_27))))))),s('type.semanticPrimitives.environment'(V_27C_27),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27))),V_27funs_27))) = s('type.semanticPrimitives.environment'(V_27C_27),'const.semanticPrimitives.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27C_27)),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27C_27))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27C_27)),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27C_27)),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27)),'type.pair.prod'('type.list.list'('type.string.char'),V_27C_27)),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.list.list'('type.string.char'),V_27C_27))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27)),'type.pair.prod'('type.list.list'('type.string.char'),V_27C_27))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.list.list'('type.string.char'),V_27C_27))),'_dst_x0x1_2'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'('type.list.list'('type.string.char'),V_27C_27))),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.list.list'('type.string.char'),V_27C_27))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'('type.list.list'('type.string.char'),V_27C_27)))),'_dst_x000x100x100_3'(s('fun'('type.list.list'('type.string.char'),'fun'(V_27C_27,'type.pair.prod'('type.list.list'('type.string.char'),V_27C_27))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),V_27C_27),V_27rrr_27))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27))),V_27funs_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27C_27)),'const.semanticPrimitives.environment_v_1'(s('type.semanticPrimitives.environment'(V_27C_27),V_27env_27))))))),s('type.semanticPrimitives.environment'(V_27C_27),V_27env_27)))).
fof('thm.ml_translator.write_rec_thm', axiom, ![V_27funs_27, V_27env_27]: s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_rec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))) = s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.list.FOLDR_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v'))),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v')))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v')))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v')))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v'))))),'_dst_x000x100x100_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.semanticPrimitives.v','fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.semanticPrimitives.environment'('type.semanticPrimitives.v')))),'const.ml_translator.write_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.semanticPrimitives.Recclosure_2'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27)))).
fof('thm.ml_translator.Eval_Recclosure_ALT', axiom, ![V_27A_27,V_27B_27]: ![V_27n_27, V_27f_27, V_27env2_27, V_27env_27, V_27b_27, V_27a_27, V_27funs_27, V_27fname_27, V_27name_27, V_27body_27]: (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.list.list'('type.string.char')),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.string.char'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.list.list'('type.string.char'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.list.list'('type.string.char'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.string.char'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.list.list'('type.string.char')))),'_dst_x00_0'))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27)))))) => (![V_27v_27]: (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27n_27))),s('type.semanticPrimitives.v',V_27v_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.v',V_27v_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_rec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env2_27))))),s('type.ast.exp',V_27body_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27n_27))))))))) => (p(s('bool','const.ml_translator.LOOKUP_VAR_3'(s('type.list.list'('type.string.char'),V_27fname_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env2_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.list.list'('type.string.char'),V_27fname_27)))))) => (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.semanticPrimitives.find_recfun_2'(s('type.list.list'('type.string.char'),V_27fname_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27body_27))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27fname_27))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Eq_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27n_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27))))))))))).
fof('thm.ml_translator.Eval_Recclosure', conjecture, ![V_27A_27,V_27B_27]: ![V_27name_27, V_27n_27, V_27fname_27, V_27f_27, V_27env2_27, V_27env_27, V_27body_27, V_27b_27, V_27a_27]: (![V_27v_27]: (p(s('bool','happ'(s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27n_27))),s('type.semanticPrimitives.v',V_27v_27)))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),V_27name_27),s('type.semanticPrimitives.v',V_27v_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_rec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27fname_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27body_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.NIL_0'))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env2_27))))),s('type.ast.exp',V_27body_27),s('fun'('type.semanticPrimitives.v','bool'),'happ'(s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s(V_27B_27,'happ'(s('fun'(V_27A_27,V_27B_27),V_27f_27),s(V_27A_27,V_27n_27))))))))) => (p(s('bool','const.ml_translator.LOOKUP_VAR_3'(s('type.list.list'('type.string.char'),V_27fname_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env2_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27fname_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27body_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),V_27fname_27)))))) => p(s('bool','const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27fname_27))))),s('fun'('type.semanticPrimitives.v','bool'),'const.ml_translator.Arrow_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),'const.ml_translator.Eq_2'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s(V_27A_27,V_27n_27))),s('fun'(V_27B_27,'fun'('type.semanticPrimitives.v','bool')),V_27b_27),s('fun'(V_27A_27,V_27B_27),V_27f_27))))))))).
