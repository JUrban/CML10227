include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
fof('thm.reg_allocProof.in_clash_sets_def', axiom, ![V_27A_27]: ![V_27ls_27, V_27x_27]: (p(s('bool','const.reg_allocProof.in_clash_sets_2'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27),s('type.num.num',V_27x_27)))) <=> ?[V_27y_27]: (p(s('bool','const.bool.IN_2'(s('type.sptree.spt'(V_27A_27),V_27y_27),s('fun'('type.sptree.spt'(V_27A_27),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27)))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27y_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_2_prove_ltb', axiom, ![V_27x_27, V_27y_27, V_27g_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.num.num',V_27x_27))),s('type.num.num',V_27y_27))),s('bool','T_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x011x111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27x_27))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27y_27))))))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x011x100_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.dir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))).
fof('thm.reg_allocProof.reg_allocProof_3_prove_ltb', axiom, ![V_27y_27, V_27x_27, V_27G_27]: s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.undir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.pred_set.INSERT_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.pred_set.INSERT_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.reg_allocProof_4_prove_ltb', axiom, ![V_27q_27, V_27G_27, V_27ls_27]: s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27q_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','bool'),'const.pred_set.INSERT_2'(s('type.num.num',V_27q_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0')))))).
fof('thm.reg_allocProof.reg_allocProof_5_prove_ltb', axiom, ![V_27G_27, V_27ls_27]: s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))).
fof('thm.reg_allocProof.reg_allocProof_6_prove_ltb', axiom, ![V_27ls_27, V_27x_27, V_27g_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x011x100_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x10_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))).
fof('thm.reg_allocProof.reg_allocProof_7_prove_ltb', axiom, ![V_27A_27]: ![V_27ls_27, V_27x_27, V_27g_27]: (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27ls_27)))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'=_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x011x100_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'))))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))))).
fof('thm.reg_allocProof.sp_g_is_clique_def', axiom, ![V_27ls_27, V_27g_27]: (p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))) <=> (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))) & ![V_27x_27, V_27y_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & ~ (s('type.num.num',V_27x_27) = s('type.num.num',V_27y_27)))) => (p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))) & p(s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27y_27),s('type.num.num',V_27x_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))))).
fof('thm.reg_allocProof.colouring_satisfactory_def', axiom, ![V_27A_27]: ![V_27col_27, V_27G_27]: (p(s('bool','const.reg_allocProof.colouring_satisfactory_2'(s('fun'('type.num.num',V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) <=> ![V_27v_27]: (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27v_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'bool'),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('bool','fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'))),'const.option.option_CASE_0'),s('bool','F_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),'=_0'),s('fun'('type.num.num',V_27A_27),V_27col_27),s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27col_27),s('type.num.num',V_27v_27))))))))))))),s('type.option.option'('type.sptree.spt'('type.one.one')),'const.sptree.lookup_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))).
fof('thm.reg_allocProof.reg_allocProof_|49||48|_prove_ltb', axiom, ![V_27ls_27, V_27g_27]: p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))))).
fof('thm.reg_allocProof.reg_allocProof_|49||49|_prove_ltb', axiom, ![V_27ls_27, V_27g_27, V_27ls_7c39_7c_27]: ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27)))) & p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))))) => p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))))).
fof('thm.reg_allocProof.clash_sets_clique', axiom, ![V_27A_27]: ![V_27ls_27, V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.sptree.spt'(V_27A_27),V_27x_27),s('fun'('type.sptree.spt'(V_27A_27),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27)))))) => p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'const.sptree.toAList_1'(s('type.sptree.spt'(V_27A_27),V_27x_27))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clash_sets_to_sp_g_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27ls_27)))))))).
fof('thm.reg_allocProof.colouring_satisfactory_cliques', axiom, ![V_27ls_27, V_27g_27, V_27f_27]: ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27ls_27)))) & (p(s('bool','const.reg_allocProof.colouring_satisfactory_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))) & p(s('bool','const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))) => p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),V_27ls_27)))))))).
fof('ARITY_0_1_const.reg_alloc.is_stack_var', axiom, ![VV0]: s('bool','happ'(s('fun'('type.num.num','bool'),'const.reg_alloc.is_stack_var_0'),s('type.num.num',VV0))) = s('bool','const.reg_alloc.is_stack_var_1'(s('type.num.num',VV0)))).
fof('thm.reg_allocProof.colouring_conventional_def', axiom, ![V_27G_27, V_27k_27, V_27col_27]: s('bool','const.reg_allocProof.colouring_conventional_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('fun'('type.num.num','type.num.num'),V_27col_27))) = s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('fun'('fun'('type.num.num','bool'),'bool'),'fun'('fun'('type.num.num','bool'),'bool')),'const.bool.LET_0'),s('fun'('fun'('type.num.num','bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'_i_0_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1x1x1_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),V_27col_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01x01_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_stack_var_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>=_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27))))))),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'))),s('fun'('type.num.num','type.num.num'),V_27col_27))))))))))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_allocProof.undir_graph_def', axiom, ![V_27G_27]: (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) <=> ![V_27x_27]: p(s('bool','const.option.option_CASE_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.num.num',V_27x_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('bool','T_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27x_27))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))))),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'const.option.SOME_0'))),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27x_27))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0')))))))))))))))))).
fof('thm.reg_allocProof.satisfactory_pref_def', axiom, ![V_27A_27,V_27C_27,V_27B_27]: ![V_27prefs_27]: (p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'(V_27A_27,'fun'('type.list.list'(V_27B_27),'fun'(V_27C_27,'type.option.option'(V_27B_27)))),V_27prefs_27)))) <=> ![V_27h_27, V_27ls_27, V_27col_27, V_27v_27]: (s('type.option.option'(V_27B_27),'happ'(s('fun'(V_27C_27,'type.option.option'(V_27B_27)),'happ'(s('fun'('type.list.list'(V_27B_27),'fun'(V_27C_27,'type.option.option'(V_27B_27))),'happ'(s('fun'(V_27A_27,'fun'('type.list.list'(V_27B_27),'fun'(V_27C_27,'type.option.option'(V_27B_27)))),V_27prefs_27),s(V_27A_27,V_27h_27))),s('type.list.list'(V_27B_27),V_27ls_27))),s(V_27C_27,V_27col_27))) = s('type.option.option'(V_27B_27),'const.option.SOME_1'(s(V_27B_27,V_27v_27))) => p(s('bool','const.bool.IN_2'(s(V_27B_27,V_27v_27),s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27ls_27))))))))).
fof('ARITY_1_4_const.reg_alloc.aux_pref', axiom, ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.aux_pref_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.num.num',VV1))),s('type.list.list'('type.num.num'),VV2))),s('type.sptree.spt'('type.num.num'),VV3))) = s('type.option.option'('type.num.num'),'const.reg_alloc.aux_pref_4'(s('type.sptree.spt'('type.num.num'),VV0),s('type.num.num',VV1),s('type.list.list'('type.num.num'),VV2),s('type.sptree.spt'('type.num.num'),VV3)))).
fof('thm.reg_allocProof.reg_allocProof_|49|7_prove_ltb', axiom, ![V_27prefs_27]: p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.aux_pref_1'(s('type.sptree.spt'('type.num.num'),V_27prefs_27))))))).
fof('thm.reg_allocProof.reg_allocProof_|49|8_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27x_27, V_27col_27, V_27cand_27, V_27ls_27]: (s('type.option.option'(V_27B_27),'const.reg_alloc.first_match_col_3'(s('type.list.list'(V_27B_27),V_27cand_27),s('type.sptree.spt'(V_27B_27),V_27col_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')),V_27ls_27))) = s('type.option.option'(V_27B_27),'const.option.SOME_1'(s(V_27B_27,V_27x_27))) => p(s('bool','const.bool.IN_2'(s(V_27B_27,V_27x_27),s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27cand_27)))))))).
fof('ARITY_1_4_const.reg_alloc.move_pref', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.move_pref_1'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV0))),s('type.num.num',VV1))),s('type.list.list'('type.num.num'),VV2))),s('type.sptree.spt'('type.num.num'),VV3))) = s('type.option.option'('type.num.num'),'const.reg_alloc.move_pref_4'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV0),s('type.num.num',VV1),s('type.list.list'('type.num.num'),VV2),s('type.sptree.spt'('type.num.num'),VV3)))).
fof('thm.reg_allocProof.reg_allocProof_|49|9_prove_ltb', axiom, ![V_27A_27]: ![V_27moves_27]: p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.move_pref_1'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27moves_27))))))).
fof('ARITY_2_5_const.reg_alloc.aux_move_pref', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3, VV4]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.aux_move_pref_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1))),s('type.num.num',VV2))),s('type.list.list'('type.num.num'),VV3))),s('type.sptree.spt'('type.num.num'),VV4))) = s('type.option.option'('type.num.num'),'const.reg_alloc.aux_move_pref_5'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1),s('type.num.num',VV2),s('type.list.list'('type.num.num'),VV3),s('type.sptree.spt'('type.num.num'),VV4)))).
fof('thm.reg_allocProof.reg_allocProof_2|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27prefs_27, V_27moves_27]: p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'const.reg_alloc.aux_move_pref_2'(s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27moves_27))))))).
fof('thm.reg_allocProof.reg_allocProof_2|49|_prove_ltb', axiom, ![V_27ls_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))))))))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.id_colour_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))).
fof('thm.reg_allocProof.reg_allocProof_22_prove_ltb', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27, V_27prefs_27, V_27k_27, V_27G_27, V_27xs_27, V_27spill_27, V_27col_27, V_27spill_7c39_7c_27, V_27col_7c39_7c_27]: ((s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))) & s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))) => s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))))).
fof('thm.reg_allocProof.reg_allocProof_23_prove_ltb', axiom, ![V_27A_27]: ![V_27x_27, V_27prefs_27, V_27k_27, V_27G_27, V_27xs_27, V_27spill_27, V_27col_27, V_27spill_7c39_7c_27, V_27col_7c39_7c_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27)))))) & s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))))).
fof('thm.reg_allocProof.partial_colouring_satisfactory_def', axiom, ![V_27A_27]: ![V_27col_27, V_27G_27]: (p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) <=> (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) & ![V_27v_27]: ((p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27v_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) & p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27v_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))))))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.option.option'(V_27A_27),'bool'),'=_1'(s('type.option.option'(V_27A_27),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27))),'const.sptree.lookup_0'),s('type.num.num',V_27v_27))),s('type.sptree.spt'(V_27A_27),V_27col_27))))),s('fun'('type.num.num','type.option.option'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27))),'const.sptree.lookup_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))))))))))),s('type.sptree.spt'('type.one.one'),'const.option.THE_1'(s('type.option.option'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.num.num',V_27v_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))))))).
fof('thm.reg_allocProof.reg_allocProof_25_prove_ltb', axiom, ![V_27ls_27, V_27col_27, V_27k_27, V_27ls_7c39_7c_27]: (s('type.list.list'('type.num.num'),'const.reg_alloc.remove_colours_3'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.list.list'('type.num.num'),V_27k_27))) = s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27) => ![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_7c39_7c_27)))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27k_27)))))) & ![V_27y_27, V_27c_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27y_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27c_27)))) => ~ (s('type.num.num',V_27c_27) = s('type.num.num',V_27x_27))))))).
fof('thm.reg_allocProof.reg_allocProof_26_prove_ltb', axiom, ![V_27x_27, V_27v_27, V_27h_27, V_27col_27, V_27G_27]: ((p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27h_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (s('type.option.option'('type.sptree.spt'('type.one.one')),'const.sptree.lookup_2'(s('type.num.num',V_27h_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.option.option'('type.sptree.spt'('type.one.one')),'const.option.SOME_1'(s('type.sptree.spt'('type.one.one'),V_27x_27))) & ![V_27y_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.one.one'),V_27x_27)))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27y_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) => ~ (s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27y_27),s('type.sptree.spt'('type.num.num'),V_27col_27))))) = s('type.num.num',V_27v_27))))))) => p(s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'('type.num.num'),'const.sptree.insert_3'(s('type.num.num',V_27h_27),s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('ARITY_0_2_const.reg_allocProof.partial_colouring_satisfactory', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('type.sptree.spt'(V_27A_27),VV0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1))) = s('bool','const.reg_allocProof.partial_colouring_satisfactory_2'(s('type.sptree.spt'(V_27A_27),VV0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1)))).
fof('thm.reg_allocProof.reg_allocProof_27_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27]: ((p(s('bool','const.reg_allocProof.undir_graph_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))) & (p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27)))) & p(s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x00_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'const.reg_allocProof.partial_colouring_satisfactory_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_28_prove_ltb', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: ((s('fun'('type.num.num','bool'),'const.pred_set.INTER_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0') & s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))) => s('fun'('type.num.num','bool'),'const.pred_set.INTER_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))).
fof('thm.reg_allocProof.reg_allocProof_29_prove_ltb', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: (s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))) => ![V_27x_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27))))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27)))))) | p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))))))).
fof('thm.reg_allocProof.reg_allocProof_3|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27spill_7c39_7c_27, V_27prefs_27, V_27k_27, V_27h_27, V_27col_27, V_27G_27]: ((~ (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (~ (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))))))) & (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'(V_27A_27)),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27)))))) & (![V_27x_27]: (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'),s('type.list.list'('type.num.num'),V_27k_27)))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('type.num.num',V_27x_27))))) & (s('fun'('type.num.num','bool'),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool')),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool'))),'const.pred_set.INTER_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0') & p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27))))))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'happ'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27h_27))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x11x11_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x01x10_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'=_0'),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('fun'('type.num.num','type.sptree.spt'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.sptree.insert_1'(s('type.num.num',V_27h_27))),s('type.sptree.spt'('type.num.num'),V_27col_27))))),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'bool')),'=_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'bool')),'=_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27h_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11x00_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x00x10x01_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('type.num.num','bool'))),'const.pred_set.INTER_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'const.sptree.domain_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.assign_colour_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.num.num',V_27h_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_3|49|_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: ((![V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27k_27)))))) => p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27x_27))))) & (s('fun'('type.num.num','bool'),'const.pred_set.INTER_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))) = s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0') & (p(s('bool','const.reg_allocProof.satisfactory_pref_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27)))) & s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))) => ![V_27x_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27)))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))))) & p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))) => ?[Vv]: ((p(s('bool',Vv)) <=> ?[V_27y_27]: (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27y_27))) & p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27y_27)))))) & p(s('bool','const.bool.COND_3'(s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27x_27))),s('bool','const.bool.COND_3'(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27))))),s('bool',Vv),s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))))))),s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))))))))).
fof('thm.reg_allocProof.reg_allocProof_32_prove_ltb', axiom, ![V_27A_27]: ![V_27x_27, V_27h_27, V_27ls_27, V_27ls_7c39_7c_27]: ((p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27x_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27ls_27)))))) & (s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27h_27),s('type.list.list'(V_27A_27),V_27ls_7c39_7c_27))) = s('type.list.list'(V_27A_27),V_27ls_27) & ~ (s(V_27A_27,V_27x_27) = s(V_27A_27,V_27h_27)))) => p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27x_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27ls_7c39_7c_27)))))))).
fof('thm.reg_allocProof.reg_allocProof_33_prove_ltb', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27h_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: (s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.assign_colour_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.num.num',V_27h_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))) => ![V_27x_27]: (~ (s('type.num.num',V_27x_27) = s('type.num.num',V_27h_27)) => ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))))))))).
fof('thm.reg_allocProof.reg_allocProof_34_prove_ltb', conjecture, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27, V_27col_27, V_27spill_27, V_27col_7c39_7c_27, V_27spill_7c39_7c_27]: (s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spill_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27),s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27))) => ![V_27x_27]: (~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))))) => ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))))))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_7c39_7c_27)))))) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spill_27))))))))))).
