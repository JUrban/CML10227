include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
include('incl/reg_allocProof.ax').
include('incl/bviProps.ax').
include('incl/bvpProps.ax').
include('incl/bvp_simpProof.ax').
include('incl/bvp_spaceProof.ax').
include('incl/bvl_jumpProof.ax').
include('incl/wellorder.ax').
include('incl/cardinal.ax').
include('incl/hrat.ax').
include('incl/hreal.ax').
include('incl/realax.ax').
include('incl/real.ax').
include('incl/topology.ax').
include('incl/nets.ax').
include('incl/seq.ax').
include('incl/lim.ax').
include('incl/powser.ax').
include('incl/transc.ax').
include('incl/intreal.ax').
include('incl/binary_ieee.ax').
include('incl/tailrec.ax').
include('incl/prog.ax').
include('incl/temporal.ax').
include('incl/address.ax').
include('incl/state.ax').
include('incl/temporal_state.ax').
include('incl/machine_ieee.ax').
include('incl/bitstring.ax').
include('incl/arm.ax').
include('incl/blast.ax').
include('incl/update.ax').
include('incl/arm_step.ax').
include('incl/arm6_target.ax').
include('incl/arm6_eval_encode.ax').
include('incl/mlstring.ax').
include('incl/patternMatches.ax').
include('incl/ml_translator.ax').
include('incl/ml_optimise.ax').
include('incl/ml_pmatch.ax').
include('incl/mini_prelude.ax').
include('incl/bag.ax').
include('incl/benchmark.ax').
include('incl/arm8.ax').
include('incl/arm8_step.ax').
include('incl/clos_relation.ax').
include('incl/clos_relationProps.ax').
include('incl/clos_removeProof.ax').
include('incl/simpleSexp.ax').
include('incl/fromSexp.ax').
include('incl/word_inst.ax').
include('incl/word_alloc.ax').
include('incl/word_remove.ax').
include('incl/word_to_word.ax').
include('incl/stackLang.ax').
include('incl/bvp_to_word.ax').
include('incl/stack_alloc.ax').
include('incl/riscv.ax').
include('incl/riscv_step.ax').
include('incl/std_prelude.ax').
include('incl/holSyntaxLib.ax').
include('incl/holSyntax.ax').
include('incl/holSyntaxExtra.ax').
include('incl/ml_module_demo.ax').
include('incl/bvp_liveProof.ax').
include('incl/PhysicistsQueue.ax').
include('incl/holBoolSyntax.ax').
include('incl/holAxiomsSyntax.ax').
include('incl/setSpec.ax').
include('incl/holSemantics.ax').
include('incl/holSemanticsExtra.ax').
include('incl/holBool.ax').
include('incl/commonUnif.ax').
include('incl/term.ax').
include('incl/subst.ax').
include('incl/walk.ax').
include('incl/walkstar.ax').
include('incl/unifDef.ax').
include('incl/unifProps.ax').
include('incl/redUnif.ax').
include('incl/parmove.ax').
include('incl/word_to_stack.ax').
include('incl/bvl_inlineProof.ax').
include('incl/clos_known.ax').
include('incl/clos_knownProof.ax').
include('incl/okasaki_misc.ax').
include('incl/UnbalancedSet.ax').
include('incl/mips.ax').
include('incl/mips_step.ax').
include('incl/mips_target.ax').
include('incl/mips_target_correct.ax').
include('incl/bvl_constProof.ax').
include('incl/int_bitwise.ax').
include('incl/copying_gc.ax').
include('incl/bvp_to_wordProps.ax').
include('incl/jrhSet.ax').
include('incl/BankersQueue.ax').
include('incl/cmlPEG.ax').
include('incl/clos_numberProof.ax').
include('incl/cmlParse.ax').
include('incl/holKernel.ax').
include('incl/reader.ax').
include('incl/x64.ax').
include('incl/source_to_modProof.ax').
include('incl/collapse.ax').
include('incl/infer_t.ax').
include('incl/unify.ax').
include('incl/infer.ax').
include('incl/inferProps.ax').
include('incl/infer_eComplete.ax').
include('incl/bvl_handleProof.ax').
include('incl/dec_to_exhProof.ax').
include('incl/regexpMatch.ax').
include('incl/ninetyOne.ax').
include('incl/example_91.ax').
include('incl/arm8_target.ax').
include('incl/BatchedQueue.ax').
include('incl/stack_remove.ax').
include('incl/stack_names.ax').
include('incl/stack_to_lab.ax').
include('incl/backend.ax').
include('incl/compiler.ax').
include('incl/ImplicitQueue.ax').
include('incl/stackSem.ax').
include('incl/gramProps.ax').
include('incl/pegSound.ax').
include('incl/holKernelProof.ax').
include('incl/pegComplete.ax').
include('incl/cmlPtreeConversionProps.ax').
include('incl/simpleIO.ax').
include('incl/LazyPairingHeap.ax').
include('incl/stackProps.ax').
include('incl/stack_removeProof.ax').
include('incl/holSoundness.ax').
include('incl/holExtension.ax').
include('incl/lexer_impl.ax').
include('incl/SplayHeap.ax').
include('incl/infer_eSound.ax').
include('incl/wordProps.ax').
include('incl/type_eDeterm.ax').
include('incl/inferComplete.ax').
include('incl/BinaryRandomAccessLists.ax').
include('incl/BinomialHeap.ax').
include('incl/ml_pmatch_demo.ax').
include('incl/holKernelPmatch.ax').
include('incl/ml_monad.ax').
include('incl/ml_hol_kernel.ax').
include('incl/slr_parser_gen.ax').
include('incl/word_instProof.ax').
include('incl/bvi_to_bvpProof.ax').
include('incl/setModel.ax').
include('incl/BottomUpMergeSort.ax').
include('incl/clos_freeProof.ax').
include('incl/example_qsort.ax').
include('incl/PairingHeap.ax').
include('incl/arm6_target_correct.ax').
include('incl/ml_hol_init.ax').
include('incl/x64_step.ax').
include('incl/x64_target.ax').
include('incl/x64_eval_encode.ax').
include('incl/arm8_target_correct.ax').
include('incl/clos_mtiProof.ax').
include('incl/LeftistHeap.ax').
include('incl/word_removeProof.ax').
include('incl/riscv_target.ax').
include('incl/riscv_target_correct.ax').
include('incl/RedBlackSet.ax').
include('incl/stack_namesProof.ax').
include('incl/exh_to_patProof.ax').
include('incl/print.ax').
include('incl/x64_target_correct.ax').
include('incl/HoodMelvilleQueue.ax').
include('incl/lab_filterProof.ax').
include('incl/ml_translator_test.ax').
include('incl/con_to_decProof.ax').
include('incl/pat_to_closProof.ax').
fof('thm.clos_annotateProof.v_rel|48|_def', axiom, ![Vx, Vx_27, Vx0, Vx1, Vx_270, Vx_27_27]: (p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',Vx),s('type.num.num',Vx_27),s('type.sptree.spt'('type.num.num'),Vx0),s('type.list.list'('type.closSem.v'),Vx1),s('type.list.list'('type.closSem.v'),Vx_270),s('type.num.num',Vx_27_27)))) <=> ![V_27v__rel_7c39_7c_27, V_27env__ok_7c39_7c_27]: ((![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: ((?[V_27j_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))) | (?[V_27w_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))) | (?[V_27t_27, V_27xs_27, V_27ys_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))))) | (?[V_27r_7c49_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))) | (?[V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))) & (s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))))) | ?[V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27))))) & ![V_27a2_7c48_7c_27, V_27a3_7c48_7c_27, V_27a4_7c48_7c_27, V_27a5_7c48_7c_27, V_27a6_7c48_7c_27, V_27a7_7c48_7c_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27a2_7c48_7c_27))))),s('type.num.num',V_27a7_7c48_7c_27)))) | ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num',V_27a3_7c48_7c_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27))))))))) | ?[V_27v_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27a7_7c48_7c_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27a2_7c48_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27a2_7c48_7c_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27a7_7c48_7c_27))),s('type.num.num',V_27a3_7c48_7c_27))),s('type.sptree.spt'('type.num.num'),V_27a4_7c48_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27)))))) & p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27)))))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27a2_7c48_7c_27))),s('type.num.num',V_27a3_7c48_7c_27))),s('type.sptree.spt'('type.num.num'),V_27a4_7c48_7c_27))),s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27))),s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27))),s('type.num.num',V_27a7_7c48_7c_27)))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',Vx))),s('type.num.num',Vx_27))),s('type.sptree.spt'('type.num.num'),Vx0))),s('type.list.list'('type.closSem.v'),Vx1))),s('type.list.list'('type.closSem.v'),Vx_270))),s('type.num.num',Vx_27_27))))))).
fof('ARITY_0_2_const.clos_annotateProof.v_rel', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',VV0))),s('type.closSem.v',VV1))) = s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',VV0),s('type.closSem.v',VV1)))).
fof('thm.clos_annotateProof.v_rel|49|_def', axiom, ![Vx, Vx_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',Vx),s('type.closSem.v',Vx_27)))) <=> ![V_27v__rel_7c39_7c_27, V_27env__ok_7c39_7c_27]: ((![V_27a_7c48_7c_7c48_7c_27, V_27a_7c49_7c_7c48_7c_27]: ((?[V_27j_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))) & s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))) | (?[V_27w_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))) & s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))) | (?[V_27t_27, V_27xs_27, V_27ys_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))) & (s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))))) | (?[V_27r_7c49_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))) & s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))) | (?[V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))) & (s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))) & (s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))))) | ?[V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))) & (s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27))))) & ![V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27a2_27))))),s('type.num.num',V_27a7_27)))) | ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num',V_27a3_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a5_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a6_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_27))))))))) | ?[V_27v_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27a7_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27a2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27a2_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27a7_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_27)))))) & p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a5_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27a6_27)))))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.list.list'('type.closSem.v'),V_27a6_27))),s('type.num.num',V_27a7_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',Vx))),s('type.closSem.v',Vx_27))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|0', axiom, ![V_27j_27]: p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|1', axiom, ![V_27w_27]: p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|2', axiom, ![V_27t_27, V_27xs_27, V_27ys_27]: (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|3', axiom, ![V_27r_7c49_7c_27]: p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|4', axiom, ![V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.num.num',V_27m_27),s('type.num.num',V_27num__args_27),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_7c39_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27num__args_27),s('type.num.num',V_27n_27))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','const.closProps.every_Fn_vs_NONE_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27)))))))).
fof('ARITY_0_6_const.clos_annotateProof.env_ok', axiom, ![VV0, VV1, VV2, VV3, VV4, VV5]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.sptree.spt'('type.num.num'),VV2))),s('type.list.list'('type.closSem.v'),VV3))),s('type.list.list'('type.closSem.v'),VV4))),s('type.num.num',VV5))) = s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.list.list'('type.closSem.v'),VV3),s('type.list.list'('type.closSem.v'),VV4),s('type.num.num',VV5)))).
fof('thm.clos_annotateProof.v_rel_rules|split|5', axiom, ![V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))))),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27)))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|6', axiom, ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27n_27)))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env2_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27),s('type.num.num',V_27n_27)))))).
fof('thm.clos_annotateProof.v_rel_rules|split|7', axiom, ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27)))) & (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))))))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env2_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27),s('type.num.num',V_27n_27)))))).
fof('thm.clos_annotateProof.v_rel_rules|split|8', axiom, ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27, V_27v_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27n_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))))))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env2_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27),s('type.num.num',V_27n_27)))))).
fof('thm.clos_annotateProof.v_rel_ind', axiom, ![V_27v__rel_7c39_7c_27, V_27env__ok_7c39_7c_27]: ((![V_27j_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))))),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))))) & (![V_27w_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))) & (![V_27t_27, V_27xs_27, V_27ys_27]: (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))))))) & (![V_27r_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))))),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))))) & (![V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))))))) & (![V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))))),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))))))) & (![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27))))),s('type.num.num',V_27n_27)))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))) & (![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))) & ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27, V_27v_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27n_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))))))))))) => (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',V_27a_7c48_7c_27),s('type.closSem.v',V_27a_7c49_7c_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27))))) & ![V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27]: (p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27a2_27),s('type.num.num',V_27a3_27),s('type.sptree.spt'('type.num.num'),V_27a4_27),s('type.list.list'('type.closSem.v'),V_27a5_27),s('type.list.list'('type.closSem.v'),V_27a6_27),s('type.num.num',V_27a7_27)))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.list.list'('type.closSem.v'),V_27a6_27))),s('type.num.num',V_27a7_27)))))))).
fof('thm.clos_annotateProof.v_rel_strongind', axiom, ![V_27v__rel_7c39_7c_27, V_27env__ok_7c39_7c_27]: ((![V_27j_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))))),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))))) & (![V_27w_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))) & (![V_27t_27, V_27xs_27, V_27ys_27]: (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27))),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))))))) & (![V_27r_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))))),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))))) & (![V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27)))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27)))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27))),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))))))) & (![V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x1111x1111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27))),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))))),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))))))) & (![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27))))),s('type.num.num',V_27n_27)))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))) & (![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))) & ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27, V_27v_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27n_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))))))))))) => (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27))))) & ![V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.list.list'('type.closSem.v'),V_27a6_27))),s('type.num.num',V_27a7_27)))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.list.list'('type.closSem.v'),V_27a6_27))),s('type.num.num',V_27a7_27)))))))).
fof('thm.clos_annotateProof.v_rel_cases|split|0', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27)))) <=> (?[V_27j_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))) | (?[V_27w_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))) | (?[V_27t_27, V_27xs_27, V_27ys_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))))) | (?[V_27r_7c49_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))) | (?[V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))) & (s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))))) | ?[V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))))))).
fof('thm.clos_annotateProof.v_rel_cases|split|1', axiom, ![V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27]: (p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27a2_27),s('type.num.num',V_27a3_27),s('type.sptree.spt'('type.num.num'),V_27a4_27),s('type.list.list'('type.closSem.v'),V_27a5_27),s('type.list.list'('type.closSem.v'),V_27a6_27),s('type.num.num',V_27a7_27)))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a7_27)))) | ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num',V_27a3_27)))) & (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a6_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_27))))))))) | ?[V_27v_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27a7_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27a2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27a2_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27a7_27),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_27)))))) & p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27a6_27)))))))))))))))).
fof('thm.clos_annotateProof.v_rel_simp|split|0', axiom, ![V_27y_27, V_27x_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27x_27))),s('type.closSem.v',V_27y_27)))) <=> s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27x_27))))).
fof('thm.clos_annotateProof.v_rel_simp|split|1', axiom, ![V_27y_27, V_27n_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27n_27))),s('type.closSem.v',V_27y_27)))) <=> s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27n_27))))).
fof('thm.clos_annotateProof.v_rel_simp|split|2', conjecture, ![V_27y_27, V_27n_7c39_7c_27, V_27l_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27n_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27l_27))))),s('type.closSem.v',V_27y_27)))) <=> ?[V_27ys_27]: (s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27n_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27ys_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27l_27),s('type.list.list'('type.closSem.v'),V_27ys_27))))))).
