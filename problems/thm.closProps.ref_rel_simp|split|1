include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
fof('thm.closProps.with_same_clock', axiom, ![V_27FFI_27]: ![V_27s_27]: s('type.closSem.state'(V_27FFI_27),'const.closSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(V_27FFI_27),V_27s_27))))),s('type.closSem.state'(V_27FFI_27),V_27s_27))) = s('type.closSem.state'(V_27FFI_27),V_27s_27)).
fof('thm.closProps.dec_clock_code', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27]: s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(V_27A_27),'const.closSem.dec_clock_2'(s('type.num.num',V_27x_27),s('type.closSem.state'(V_27A_27),V_27y_27))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(V_27A_27),V_27y_27)))).
fof('thm.closProps.dec_clock_ffi', axiom, ![V_27A_27]: ![V_27y_27, V_27x_27]: s('type.ffi.ffi_state'(V_27A_27),'const.closSem.state_ffi_1'(s('type.closSem.state'(V_27A_27),'const.closSem.dec_clock_2'(s('type.num.num',V_27x_27),s('type.closSem.state'(V_27A_27),V_27y_27))))) = s('type.ffi.ffi_state'(V_27A_27),'const.closSem.state_ffi_1'(s('type.closSem.state'(V_27A_27),V_27y_27)))).
fof('thm.closProps.closProps_4_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: (((?[V_27R_27, V_27vs_27, V_27ws_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27)),'const.pair.,_2'(s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27vs_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27ws_27))))))) | ?[V_27v_7c48_7c_27, V_27v6_27, V_27v_7c49_7c_7c49_7c_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27)),'const.pair.,_2'(s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27v6_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c49_7c_7c49_7c_27)))))))) | (?[V_27v_7c48_7c_27, V_27v7_27, V_27v_7c49_7c4_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27)),'const.pair.,_2'(s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v7_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27v_7c49_7c4_27))))))) | ?[V_27R_27, V_27as_27, V_27bs_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27)),'const.pair.,_2'(s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27as_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27))))))))) => (?[V_27R_27, V_27vs_27, V_27ws_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27)),'const.pair.,_2'(s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27vs_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27ws_27))))))) | (?[V_27R_27, V_27as_27, V_27bs_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27)),'const.pair.,_2'(s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27as_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27))))))) | (?[V_27v_7c48_7c_27, V_27v6_27, V_27v_7c49_7c_7c49_7c_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27)),'const.pair.,_2'(s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27v6_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c49_7c_7c49_7c_27))))))) | ?[V_27v_7c48_7c_27, V_27v7_27, V_27v_7c49_7c4_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.pair.prod'('type.closSem.ref'(V_27A_27),'type.closSem.ref'(V_27B_27)),'const.pair.,_2'(s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v7_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27v_7c49_7c4_27)))))))))))).
fof('thm.closProps.ref_rel_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27]: ((![V_27R_27, V_27vs_27, V_27ws_27]: p(s('bool','happ'(s('fun'('type.closSem.ref'(V_27B_27),'bool'),'happ'(s('fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27vs_27))))),s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27ws_27)))))) & (![V_27R_27, V_27as_27, V_27bs_27]: p(s('bool','happ'(s('fun'('type.closSem.ref'(V_27B_27),'bool'),'happ'(s('fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27as_27))))),s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27)))))) & (![V_27v_7c48_7c_27, V_27v6_27, V_27v_7c49_7c_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closSem.ref'(V_27B_27),'bool'),'happ'(s('fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27))),s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27v6_27))))),s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c49_7c_7c49_7c_27)))))) & ![V_27v_7c48_7c_27, V_27v7_27, V_27v_7c49_7c4_27]: p(s('bool','happ'(s('fun'('type.closSem.ref'(V_27B_27),'bool'),'happ'(s('fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27))),s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v7_27))))),s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27v_7c49_7c4_27))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.closSem.ref'(V_27B_27),'bool'),'happ'(s('fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.closSem.ref'(V_27A_27),'fun'('type.closSem.ref'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_27))),s('type.closSem.ref'(V_27A_27),V_27v_7c49_7c_27))),s('type.closSem.ref'(V_27B_27),V_27v2_27)))))).
fof('thm.closProps.ref_rel_def|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27ws_27, V_27vs_27, V_27R_27]: s('bool','const.closProps.ref_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27vs_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27ws_27))))) = s('bool','const.list.LIST_REL_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.list.list'(V_27A_27),V_27vs_27),s('type.list.list'(V_27B_27),V_27ws_27)))).
fof('thm.closProps.ref_rel_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27bs_27, V_27as_27, V_27R_27]: (p(s('bool','const.closProps.ref_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27as_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27)))))) <=> s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27as_27) = s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27))).
fof('thm.closProps.ref_rel_def|split|2', axiom, ![V_27A_27,V_27B_27]: ![V_27v6_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c48_7c_27]: s('bool','const.closProps.ref_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27v6_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c49_7c_7c49_7c_27))))) = s('bool','F_0')).
fof('thm.closProps.ref_rel_def|split|3', axiom, ![V_27A_27,V_27B_27]: ![V_27v7_27, V_27v_7c49_7c4_27, V_27v_7c48_7c_27]: s('bool','const.closProps.ref_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v7_27))),s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27v_7c49_7c4_27))))) = s('bool','F_0')).
fof('thm.closProps.ref_rel_simp|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27y_27, V_27vs_27, V_27R_27]: (p(s('bool','const.closProps.ref_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.closSem.ref'(V_27A_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27A_27),V_27vs_27))),s('type.closSem.ref'(V_27B_27),V_27y_27)))) <=> ?[V_27ws_27]: (s('type.closSem.ref'(V_27B_27),V_27y_27) = s('type.closSem.ref'(V_27B_27),'const.closSem.ValueArray_1'(s('type.list.list'(V_27B_27),V_27ws_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.list.list'(V_27A_27),V_27vs_27),s('type.list.list'(V_27B_27),V_27ws_27))))))).
fof('thm.closProps.ref_rel_simp|split|1', conjecture, ![V_27A_27,V_27B_27]: ![V_27y_27, V_27bs_27, V_27R_27]: (p(s('bool','const.closProps.ref_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.closSem.ref'(V_27A_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27))),s('type.closSem.ref'(V_27B_27),V_27y_27)))) <=> s('type.closSem.ref'(V_27B_27),V_27y_27) = s('type.closSem.ref'(V_27B_27),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27bs_27))))).
