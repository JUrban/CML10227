include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
include('incl/reg_allocProof.ax').
include('incl/bviProps.ax').
include('incl/bvpProps.ax').
include('incl/bvp_simpProof.ax').
include('incl/bvp_spaceProof.ax').
include('incl/bvl_jumpProof.ax').
include('incl/wellorder.ax').
include('incl/cardinal.ax').
include('incl/hrat.ax').
include('incl/hreal.ax').
include('incl/realax.ax').
include('incl/real.ax').
include('incl/topology.ax').
include('incl/nets.ax').
include('incl/seq.ax').
include('incl/lim.ax').
include('incl/powser.ax').
include('incl/transc.ax').
include('incl/intreal.ax').
include('incl/binary_ieee.ax').
include('incl/tailrec.ax').
include('incl/prog.ax').
include('incl/temporal.ax').
include('incl/address.ax').
include('incl/state.ax').
include('incl/temporal_state.ax').
include('incl/machine_ieee.ax').
include('incl/bitstring.ax').
include('incl/arm.ax').
include('incl/blast.ax').
include('incl/update.ax').
include('incl/arm_step.ax').
include('incl/arm6_target.ax').
include('incl/arm6_eval_encode.ax').
include('incl/mlstring.ax').
include('incl/patternMatches.ax').
include('incl/ml_translator.ax').
include('incl/ml_optimise.ax').
include('incl/ml_pmatch.ax').
include('incl/mini_prelude.ax').
include('incl/bag.ax').
include('incl/benchmark.ax').
include('incl/arm8.ax').
include('incl/arm8_step.ax').
include('incl/clos_relation.ax').
include('incl/clos_relationProps.ax').
include('incl/clos_removeProof.ax').
include('incl/simpleSexp.ax').
include('incl/fromSexp.ax').
include('incl/word_inst.ax').
include('incl/word_alloc.ax').
include('incl/word_remove.ax').
include('incl/word_to_word.ax').
include('incl/stackLang.ax').
include('incl/bvp_to_word.ax').
include('incl/stack_alloc.ax').
include('incl/riscv.ax').
include('incl/riscv_step.ax').
include('incl/std_prelude.ax').
include('incl/holSyntaxLib.ax').
include('incl/holSyntax.ax').
include('incl/holSyntaxExtra.ax').
include('incl/ml_module_demo.ax').
include('incl/bvp_liveProof.ax').
fof('thm.PhysicistsQueue.queue_TY_DEF', axiom, ![V_27A_27]: ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'(V_27A_27),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'fun'('type.list.list'(V_27A_27),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'fun'('type.list.list'(V_27A_27),'fun'('type.num.num','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'(V_27A_27),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'(V_27A_27),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'bool')))))),'_dst_x000000x100000x011111_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))))),'_i_0_0'),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))))))))),'_dst_x00000x11111x00000_3'(s('fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))))))),'_dst_x00000x10000x01111_3'(s('fun'('type.list.list'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))),'type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))))),'const.pair.,_0'),s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))))),'_dst_x0000x1000x0111_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'_dst_x000x100x011_3'(s('fun'('type.list.list'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.list.list'(V_27A_27)),'type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))),'const.pair.,_0'),s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))),'const.pair.,_0'))))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'const.ind_type.BOTTOM_0'))))))))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27)))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))))),'_i_0_0'))))))),s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'(V_27A_27),'type.pair.prod'('type.num.num','type.list.list'(V_27A_27))))))),V_27rep_27))))).
fof('thm.PhysicistsQueue.queue_case_def', axiom, ![V_27B_27,V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27, V_27f_27]: s(V_27B_27,'const.PhysicistsQueue.queue_CASE_2'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.list.list'(V_27A_27),V_27a2_27),s('type.num.num',V_27a3_27),s('type.list.list'(V_27A_27),V_27a4_27))),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27f_27))) = s(V_27B_27,'happ'(s('fun'('type.list.list'(V_27A_27),V_27B_27),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27)),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27)))),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27f_27),s('type.list.list'(V_27A_27),V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))),s('type.list.list'(V_27A_27),V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.list.list'(V_27A_27),V_27a4_27)))).
fof('thm.PhysicistsQueue.queue_size_def', axiom, ![V_27A_27]: ![V_27f_27, V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27]: s('type.num.num','const.PhysicistsQueue.queue_size_2'(s('fun'(V_27A_27,'type.num.num'),V_27f_27),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.list.list'(V_27A_27),V_27a2_27),s('type.num.num',V_27a3_27),s('type.list.list'(V_27A_27),V_27a4_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'(V_27A_27,'type.num.num'),V_27f_27),s('type.list.list'(V_27A_27),V_27a_7c48_7c_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_7c49_7c_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'(V_27A_27,'type.num.num'),V_27f_27),s('type.list.list'(V_27A_27),V_27a2_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num','const.list.list_size_2'(s('fun'(V_27A_27,'type.num.num'),V_27f_27),s('type.list.list'(V_27A_27),V_27a4_27)))))))))))))).
fof('ARITY_0_5_const.PhysicistsQueue.QUEUE', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3, VV4]: s('type.PhysicistsQueue.queue'(V_27A_27),'happ'(s('fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27))),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)))),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27))))),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)))))),'const.PhysicistsQueue.QUEUE_0'),s('type.list.list'(V_27A_27),VV0))),s('type.num.num',VV1))),s('type.list.list'(V_27A_27),VV2))),s('type.num.num',VV3))),s('type.list.list'(V_27A_27),VV4))) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),VV0),s('type.num.num',VV1),s('type.list.list'(V_27A_27),VV2),s('type.num.num',VV3),s('type.list.list'(V_27A_27),VV4)))).
fof('thm.PhysicistsQueue.datatype_queue', axiom, ![V_27A_27]: ![V_27queue_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)))))),'bool'),V_27queue_27),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)))))),'const.PhysicistsQueue.QUEUE_0'))))))).
fof('thm.PhysicistsQueue.queue_|49||49|', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c39_7c_27, V_27a2_7c39_7c_27, V_27a3_7c39_7c_27, V_27a4_7c39_7c_27]: (s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.list.list'(V_27A_27),V_27a2_27),s('type.num.num',V_27a3_27),s('type.list.list'(V_27A_27),V_27a4_27))) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27a_7c48_7c_7c39_7c_27),s('type.num.num',V_27a_7c49_7c_7c39_7c_27),s('type.list.list'(V_27A_27),V_27a2_7c39_7c_27),s('type.num.num',V_27a3_7c39_7c_27),s('type.list.list'(V_27A_27),V_27a4_7c39_7c_27))) <=> (s('type.list.list'(V_27A_27),V_27a_7c48_7c_27) = s('type.list.list'(V_27A_27),V_27a_7c48_7c_7c39_7c_27) & (s('type.num.num',V_27a_7c49_7c_27) = s('type.num.num',V_27a_7c49_7c_7c39_7c_27) & (s('type.list.list'(V_27A_27),V_27a2_27) = s('type.list.list'(V_27A_27),V_27a2_7c39_7c_27) & (s('type.num.num',V_27a3_27) = s('type.num.num',V_27a3_7c39_7c_27) & s('type.list.list'(V_27A_27),V_27a4_27) = s('type.list.list'(V_27A_27),V_27a4_7c39_7c_27))))))).
fof('thm.PhysicistsQueue.queue_case_cong', axiom, ![V_27A_27,V_27B_27]: ![V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27f_27]: ((s('type.PhysicistsQueue.queue'(V_27A_27),V_27M_27) = s('type.PhysicistsQueue.queue'(V_27A_27),V_27M_7c39_7c_27) & ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27]: (s('type.PhysicistsQueue.queue'(V_27A_27),V_27M_7c39_7c_27) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.list.list'(V_27A_27),V_27a2_27),s('type.num.num',V_27a3_27),s('type.list.list'(V_27A_27),V_27a4_27))) => s(V_27B_27,'happ'(s('fun'('type.list.list'(V_27A_27),V_27B_27),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27)),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27)))),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27f_27),s('type.list.list'(V_27A_27),V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))),s('type.list.list'(V_27A_27),V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.list.list'(V_27A_27),V_27a4_27))) = s(V_27B_27,'happ'(s('fun'('type.list.list'(V_27A_27),V_27B_27),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27)),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27)))),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27f_7c39_7c_27),s('type.list.list'(V_27A_27),V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))),s('type.list.list'(V_27A_27),V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.list.list'(V_27A_27),V_27a4_27))))) => s(V_27B_27,'const.PhysicistsQueue.queue_CASE_2'(s('type.PhysicistsQueue.queue'(V_27A_27),V_27M_27),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27f_27))) = s(V_27B_27,'const.PhysicistsQueue.queue_CASE_2'(s('type.PhysicistsQueue.queue'(V_27A_27),V_27M_7c39_7c_27),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27f_7c39_7c_27))))).
fof('thm.PhysicistsQueue.queue_nchotomy', axiom, ![V_27A_27]: ![V_27qq_27]: ?[V_27l_27, V_27n_27, V_27l_7c48_7c_27, V_27n_7c48_7c_27, V_27l_7c49_7c_27]: s('type.PhysicistsQueue.queue'(V_27A_27),V_27qq_27) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27l_27),s('type.num.num',V_27n_27),s('type.list.list'(V_27A_27),V_27l_7c48_7c_27),s('type.num.num',V_27n_7c48_7c_27),s('type.list.list'(V_27A_27),V_27l_7c49_7c_27)))).
fof('thm.PhysicistsQueue.queue_Axiom', axiom, ![V_27B_27,V_27A_27]: ![V_27f_27]: ?[V_27fn_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27]: s(V_27B_27,'happ'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),V_27B_27),V_27fn_27),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.list.list'(V_27A_27),V_27a2_27),s('type.num.num',V_27a3_27),s('type.list.list'(V_27A_27),V_27a4_27))))) = s(V_27B_27,'happ'(s('fun'('type.list.list'(V_27A_27),V_27B_27),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27)),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))),'happ'(s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27)))),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27f_27),s('type.list.list'(V_27A_27),V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))),s('type.list.list'(V_27A_27),V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.list.list'(V_27A_27),V_27a4_27)))).
fof('thm.PhysicistsQueue.queue_induction', axiom, ![V_27A_27]: ![V_27P_27]: (![V_27l_27, V_27n_27, V_27l_7c48_7c_27, V_27n_7c48_7c_27, V_27l_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'bool'),V_27P_27),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27l_27),s('type.num.num',V_27n_27),s('type.list.list'(V_27A_27),V_27l_7c48_7c_27),s('type.num.num',V_27n_7c48_7c_27),s('type.list.list'(V_27A_27),V_27l_7c49_7c_27)))))) => ![V_27q_27]: p(s('bool','happ'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'bool'),V_27P_27),s('type.PhysicistsQueue.queue'(V_27A_27),V_27q_27)))))).
fof('thm.PhysicistsQueue.empty_def', axiom, ![V_27A_27]: s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.empty_0') = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.NIL_0'),s('type.num.num','const.num.|48|_0'),s('type.list.list'(V_27A_27),'const.list.NIL_0'),s('type.num.num','const.num.|48|_0'),s('type.list.list'(V_27A_27),'const.list.NIL_0')))).
fof('thm.PhysicistsQueue.PHYSICISTSQUEUE_QUEUE_TYPE_def', axiom, ![V_27A_27]: ![V_27a_27, V_27x__5_27, V_27x__4_27, V_27x__3_27, V_27x__2_27, V_27x___7c49_7c_27, V_27v_27]: (p(s('bool','const.PhysicistsQueue.PHYSICISTSQUEUE_QUEUE_TYPE_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27x__5_27),s('type.num.num',V_27x__4_27),s('type.list.list'(V_27A_27),V_27x__3_27),s('type.num.num',V_27x__2_27),s('type.list.list'(V_27A_27),V_27x___7c49_7c_27))),s('type.semanticPrimitives.v',V_27v_27)))) <=> ?[V_27v_7c49_7c___7c49_7c_27, V_27v_7c49_7c__2_27, V_27v_7c49_7c__3_27, V_27v_7c49_7c__4_27, V_27v_7c49_7c__5_27]: (s('type.semanticPrimitives.v',V_27v_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))))))))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c__3_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c__4_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c__5_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))))))))))) & (p(s('bool','const.ml_translator.LIST_TYPE_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('type.list.list'(V_27A_27),V_27x__5_27),s('type.semanticPrimitives.v',V_27v_7c49_7c___7c49_7c_27)))) & (p(s('bool','const.ml_translator.NUM_2'(s('type.num.num',V_27x__4_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__2_27)))) & (p(s('bool','const.ml_translator.LIST_TYPE_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('type.list.list'(V_27A_27),V_27x__3_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__3_27)))) & (p(s('bool','const.ml_translator.NUM_2'(s('type.num.num',V_27x__2_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__4_27)))) & p(s('bool','const.ml_translator.LIST_TYPE_3'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.v','bool')),V_27a_27),s('type.list.list'(V_27A_27),V_27x___7c49_7c_27),s('type.semanticPrimitives.v',V_27v_7c49_7c__5_27))))))))))).
fof('thm.PhysicistsQueue.is_empty_def', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27lenf_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: (p(s('bool','const.PhysicistsQueue.is_empty_1'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27v_7c48_7c_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27v_7c49_7c_27),s('type.num.num',V_27v2_27),s('type.list.list'(V_27A_27),V_27v3_27)))))) <=> s('type.num.num',V_27lenf_27) = s('type.num.num','const.num.|48|_0'))).
fof('thm.PhysicistsQueue.PhysicistsQueue_2|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: (?[V_27v_7c48_7c_27, V_27lenf_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(V_27A_27)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27v_7c48_7c_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27v_7c49_7c_27),s('type.num.num',V_27v2_27),s('type.list.list'(V_27A_27),V_27v3_27))))) => ?[V_27v_7c48_7c_27, V_27lenf_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(V_27A_27)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27v_7c48_7c_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27v_7c49_7c_27),s('type.num.num',V_27v2_27),s('type.list.list'(V_27A_27),V_27v3_27))))))).
fof('ARITY_0_1_const.PhysicistsQueue.checkw', axiom, ![V_27A_27]: ![VV0]: s('type.PhysicistsQueue.queue'(V_27A_27),'happ'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)),'const.PhysicistsQueue.checkw_0'),s('type.PhysicistsQueue.queue'(V_27A_27),VV0))) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.checkw_1'(s('type.PhysicistsQueue.queue'(V_27A_27),VV0)))).
fof('ARITY_0_2_const.PhysicistsQueue.queue_CASE', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s(V_27B_27,'happ'(s('fun'('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27B_27),'happ'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'fun'('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),V_27B_27)),'const.PhysicistsQueue.queue_CASE_0'),s('type.PhysicistsQueue.queue'(V_27A_27),VV0))),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),VV1))) = s(V_27B_27,'const.PhysicistsQueue.queue_CASE_2'(s('type.PhysicistsQueue.queue'(V_27A_27),VV0),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),V_27B_27))))),VV1)))).
fof('_dst_x00x11x00x00x00x00_ax', axiom, ![VA,VA2,VA3,VA1,VA4,VA5,VA6,VA7]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x11x00x00x00x00_6'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s('fun'(VA1,'fun'(VA2,VA3)),V__0),s(VA4,V__1),s(VA5,V__2),s(VA6,V__3),s(VA7,V__4))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x1x0x0x0x0_6'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s('fun'(VA2,VA3),'happ'(s('fun'(VA1,'fun'(VA2,VA3)),V__0),s(VA1,V__z))),s(VA4,V__1),s(VA5,V__2),s(VA6,V__3),s(VA7,V__4)))).
fof('_dst_x000x011x000x000x000x100_ax', axiom, ![VA,VA2,VA3,VA4,VA5,VA6,VA7,VA8,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x011x000x000x000x100_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s('fun'(VA2,'fun'(VA3,VA4)),V__0),s(VA5,V__1),s(VA6,V__2),s(VA7,V__3),s('fun'(VA1,VA8),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x11x00x00x00x00_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s('fun'(VA2,'fun'(VA3,VA4)),V__0),s(VA5,V__1),s(VA6,V__2),s(VA7,V__3),s(VA8,'happ'(s('fun'(VA1,VA8),V__4),s(VA1,V__z)))))).
fof('_dst_x0000x0011x0000x0000x1000x0100_ax', axiom, ![VA,VA3,VA4,VA5,VA6,VA7,VA8,VA1,VA2,VA9]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0011x0000x0000x1000x0100_6'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))),V__x),s('fun'(VA3,'fun'(VA4,VA5)),V__0),s(VA6,V__1),s(VA7,V__2),s('fun'(VA1,VA8),V__3),s('fun'(VA2,VA9),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x011x000x000x000x100_6'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))),V__x),s('fun'(VA3,'fun'(VA4,VA5)),V__0),s(VA6,V__1),s(VA7,V__2),s(VA8,'happ'(s('fun'(VA1,VA8),V__3),s(VA1,V__z))),s('fun'(VA2,VA9),V__4)))).
fof('_dst_x00000x00011x00000x10000x01000x00100_ax', axiom, ![VA,VA4,VA5,VA6,VA7,VA8,VA1,VA2,VA9,VA3,VA10]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x00011x00000x10000x01000x00100_6'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))),V__x),s('fun'(VA4,'fun'(VA5,VA6)),V__0),s(VA7,V__1),s('fun'(VA1,VA8),V__2),s('fun'(VA2,VA9),V__3),s('fun'(VA3,VA10),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x0011x0000x0000x1000x0100_6'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))),V__x),s('fun'(VA4,'fun'(VA5,VA6)),V__0),s(VA7,V__1),s(VA8,'happ'(s('fun'(VA1,VA8),V__2),s(VA1,V__z))),s('fun'(VA2,VA9),V__3),s('fun'(VA3,VA10),V__4)))).
fof('_dst_x000000x000011x100000x010000x001000x000100_ax', axiom, ![VA,VA5,VA6,VA7,VA8,VA1,VA2,VA9,VA3,VA10,VA4,VA11]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x000011x100000x010000x001000x000100_6'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA))))),V__x),s('fun'(VA5,'fun'(VA6,VA7)),V__0),s('fun'(VA1,VA8),V__1),s('fun'(VA2,VA9),V__2),s('fun'(VA3,VA10),V__3),s('fun'(VA4,VA11),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x00011x00000x10000x01000x00100_6'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA))))),V__x),s('fun'(VA5,'fun'(VA6,VA7)),V__0),s(VA8,'happ'(s('fun'(VA1,VA8),V__1),s(VA1,V__z))),s('fun'(VA2,VA9),V__2),s('fun'(VA3,VA10),V__3),s('fun'(VA4,VA11),V__4)))).
fof('thm.PhysicistsQueue.checkw_primitive_def', axiom, ![V_27A_27]: s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)),'const.PhysicistsQueue.checkw_0') = s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)),'const.relation.WFREC_2'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'fun'('type.PhysicistsQueue.queue'(V_27A_27),'bool')),'const.min.@_1'(s('fun'('fun'('type.PhysicistsQueue.queue'(V_27A_27),'fun'('type.PhysicistsQueue.queue'(V_27A_27),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)),'fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27))),'_dst_x0_1'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'fun'('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)))))),'type.PhysicistsQueue.queue'(V_27A_27))),'const.PhysicistsQueue.queue_CASE_0'),s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)))))),'_dst_x00000x10000x01111x01111_4'(s('fun'('type.list.list'(V_27A_27),'fun'('type.PhysicistsQueue.queue'(V_27A_27),'fun'('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27))),'type.PhysicistsQueue.queue'(V_27A_27)))),'const.list.list_CASE_0'),s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27))))),'_dst_x0000x1111_2'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)),'const.combin.I_0'),s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27))))),'_dst_x01x10x01_3'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)))))),'const.PhysicistsQueue.QUEUE_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'_i_0_0'))))),s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27))))))),'_dst_x000000x111111_2'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)),'const.combin.I_0'),s('fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27))))))),'_dst_x000000x000011x100000x010000x001000x000100_6'(s('fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'fun'('type.num.num','fun'('type.list.list'(V_27A_27),'type.PhysicistsQueue.queue'(V_27A_27)))))),'const.PhysicistsQueue.QUEUE_0'),s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.list.CONS_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'_i_0_0')))))))))))))).
fof('thm.PhysicistsQueue.PhysicistsQueue_27_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((?[V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27]: s('type.PhysicistsQueue.queue'(V_27A_27),V_27a_27) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.NIL_0'),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))) | ?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27]: s('type.PhysicistsQueue.queue'(V_27A_27),V_27a_27) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s('type.list.list'(V_27A_27),V_27v_7c49_7c_7c49_7c_27))),s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'(V_27A_27),V_27v2_27),s('type.num.num',V_27v3_27),s('type.list.list'(V_27A_27),V_27v4_27)))) => (?[V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27]: s('type.PhysicistsQueue.queue'(V_27A_27),V_27a_27) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.NIL_0'),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))) | ?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27]: s('type.PhysicistsQueue.queue'(V_27A_27),V_27a_27) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s('type.list.list'(V_27A_27),V_27v_7c49_7c_7c49_7c_27))),s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'(V_27A_27),V_27v2_27),s('type.num.num',V_27v3_27),s('type.list.list'(V_27A_27),V_27v4_27)))))).
fof('thm.PhysicistsQueue.checkw_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27]: p(s('bool','happ'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'bool'),V_27P_27),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.NIL_0'),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27)))))) & ![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27]: p(s('bool','happ'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'bool'),V_27P_27),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s('type.list.list'(V_27A_27),V_27v_7c49_7c_7c49_7c_27))),s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'(V_27A_27),V_27v2_27),s('type.num.num',V_27v3_27),s('type.list.list'(V_27A_27),V_27v4_27))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.PhysicistsQueue.queue'(V_27A_27),'bool'),V_27P_27),s('type.PhysicistsQueue.queue'(V_27A_27),V_27v_27)))))).
fof('thm.PhysicistsQueue.checkw_def|split|0', axiom, ![V_27A_27]: ![V_27r_27, V_27lenr_27, V_27lenf_27, V_27f_27]: s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.checkw_1'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.NIL_0'),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))))) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27)))).
fof('thm.PhysicistsQueue.checkw_def|split|1', axiom, ![V_27A_27]: ![V_27v4_27, V_27v3_27, V_27v2_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_27]: s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.checkw_1'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s('type.list.list'(V_27A_27),V_27v_7c49_7c_7c49_7c_27))),s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'(V_27A_27),V_27v2_27),s('type.num.num',V_27v3_27),s('type.list.list'(V_27A_27),V_27v4_27))))) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s('type.list.list'(V_27A_27),V_27v_7c49_7c_7c49_7c_27))),s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'(V_27A_27),V_27v2_27),s('type.num.num',V_27v3_27),s('type.list.list'(V_27A_27),V_27v4_27)))).
fof('thm.PhysicistsQueue.check_def', axiom, ![V_27A_27]: ![V_27w_27, V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27]: s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.check_1'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27w_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))))) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27lenr_27),s('type.num.num',V_27lenf_27))),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.checkw_1'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27w_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))))),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.checkw_1'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27lenf_27),s('type.num.num',V_27lenr_27))),s('type.list.list'(V_27A_27),'const.list.APPEND_2'(s('type.list.list'(V_27A_27),V_27f_27),s('type.list.list'(V_27A_27),'const.list.REVERSE_1'(s('type.list.list'(V_27A_27),V_27r_27))))),s('type.num.num','const.num.|48|_0'),s('type.list.list'(V_27A_27),'const.list.NIL_0')))))))).
fof('thm.PhysicistsQueue.PhysicistsQueue_34_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: (?[V_27w_27, V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27]: s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(V_27A_27)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27w_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))))) => ?[V_27w_27, V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27]: s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(V_27A_27)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27w_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))))))).
fof('thm.PhysicistsQueue.snoc_def', axiom, ![V_27A_27]: ![V_27w_27, V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27, V_27x_27]: s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.snoc_2'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27w_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))),s(V_27A_27,V_27x_27))) = s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.check_1'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27w_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27lenr_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27x_27),s('type.list.list'(V_27A_27),V_27r_27)))))))).
fof('thm.PhysicistsQueue.PhysicistsQueue_42_prove_ltb', conjecture, ![V_27A_27]: ![V_27a_27]: (?[V_27w_27, V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27, V_27x_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.PhysicistsQueue.queue'(V_27A_27),V_27A_27)),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.PhysicistsQueue.queue'(V_27A_27),V_27A_27)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.PhysicistsQueue.queue'(V_27A_27),V_27A_27),'const.pair.,_2'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27w_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))),s(V_27A_27,V_27x_27))))) => ?[V_27w_27, V_27lenf_27, V_27f_27, V_27lenr_27, V_27r_27, V_27x_27]: s('type.pair.prod'('type.one.one','type.pair.prod'('type.PhysicistsQueue.queue'(V_27A_27),V_27A_27)),V_27a_27) = s('type.pair.prod'('type.one.one','type.pair.prod'('type.PhysicistsQueue.queue'(V_27A_27),V_27A_27)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'('type.PhysicistsQueue.queue'(V_27A_27),V_27A_27),'const.pair.,_2'(s('type.PhysicistsQueue.queue'(V_27A_27),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(V_27A_27),V_27w_27),s('type.num.num',V_27lenf_27),s('type.list.list'(V_27A_27),V_27f_27),s('type.num.num',V_27lenr_27),s('type.list.list'(V_27A_27),V_27r_27))),s(V_27A_27,V_27x_27))))))).
