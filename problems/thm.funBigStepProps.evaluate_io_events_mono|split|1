include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
fof('thm.funBigStepProps.do_app_io_events_mono', axiom, ![V_27A_27]: ![V_27vs_27, V_27res_27, V_27r_7c39_7c_27, V_27r_27, V_27op_27, V_27ffi_7c39_7c_27, V_27ffi_27]: (s('type.option.option'('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'const.semanticPrimitives.do_app_3'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27r_27),s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27))),s('type.ast.op',V_27op_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27))) = s('type.option.option'('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'const.option.SOME_1'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27r_7c39_7c_27),s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c39_7c_27))),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27res_27))))) => (p(s('bool','const.list.isPREFIX_2'(s('type.list.list'('type.ffi.io_event'),'const.ffi.ffi_state_io_events_1'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27))),s('type.list.list'('type.ffi.io_event'),'const.ffi.ffi_state_io_events_1'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c39_7c_27)))))) & (p(s('bool','const.option.IS_SOME_1'(s('type.option.option'('type.ffi.final_event'),'const.ffi.ffi_state_final_event_1'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27)))))) => s('type.ffi.ffi_state'(V_27A_27),V_27ffi_7c39_7c_27) = s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27))))).
fof('thm.funBigStepProps.evaluate_io_events_mono|split|0', axiom, ![V_27FFI_27]: ![V_27s_27, V_27e_27, V_27exp_27]: p(s('bool','const.list.isPREFIX_2'(s('type.list.list'('type.ffi.io_event'),'const.ffi.ffi_state_io_events_1'(s('type.ffi.ffi_state'(V_27FFI_27),'const.semanticPrimitives.state_ffi_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27))))),s('type.list.list'('type.ffi.io_event'),'const.ffi.ffi_state_io_events_1'(s('type.ffi.ffi_state'(V_27FFI_27),'const.semanticPrimitives.state_ffi_1'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27e_27),s('type.list.list'('type.ast.exp'),V_27exp_27))))))))))))).
fof('thm.funBigStepProps.evaluate_io_events_mono|split|1', conjecture, ![V_27FFI_27]: ![V_27s_27, V_27e_27, V_27exp_27]: (p(s('bool','const.option.IS_SOME_1'(s('type.option.option'('type.ffi.final_event'),'const.ffi.ffi_state_final_event_1'(s('type.ffi.ffi_state'(V_27FFI_27),'const.semanticPrimitives.state_ffi_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27)))))))) => s('type.ffi.ffi_state'(V_27FFI_27),'const.semanticPrimitives.state_ffi_1'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27e_27),s('type.list.list'('type.ast.exp'),V_27exp_27))))))) = s('type.ffi.ffi_state'(V_27FFI_27),'const.semanticPrimitives.state_ffi_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27))))).
