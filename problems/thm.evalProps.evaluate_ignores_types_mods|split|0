include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
fof('thm.evalProps.with_same_v', axiom, ![V_27V_27]: ![V_27env_27]: s('type.semanticPrimitives.environment'(V_27V_27),'const.semanticPrimitives.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27V_27)),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27V_27))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27V_27)),'const.semanticPrimitives.environment_v_1'(s('type.semanticPrimitives.environment'(V_27V_27),V_27env_27))))),s('type.semanticPrimitives.environment'(V_27V_27),V_27env_27))) = s('type.semanticPrimitives.environment'(V_27V_27),V_27env_27)).
fof('thm.evalProps.with_same_clock', axiom, ![V_27FFI_27]: ![V_27st_27]: s('type.semanticPrimitives.state'(V_27FFI_27),'const.semanticPrimitives.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))))),s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))) = s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27)).
fof('thm.evalProps.mk_id_|49||49|', axiom, ![V_27A_27]: ![V_27d_27, V_27c_27, V_27b_27, V_27a_27]: (s('type.ast.id'(V_27A_27),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),V_27a_27),s(V_27A_27,V_27b_27))) = s('type.ast.id'(V_27A_27),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),V_27c_27),s(V_27A_27,V_27d_27))) <=> (s('type.option.option'('type.list.list'('type.string.char')),V_27a_27) = s('type.option.option'('type.list.list'('type.string.char')),V_27c_27) & s(V_27A_27,V_27b_27) = s(V_27A_27,V_27d_27)))).
fof('thm.evalProps.Boolv_|49||49|', axiom, ![V_27b2_27, V_27b_7c49_7c_27]: (s('type.semanticPrimitives.v','const.semanticPrimitives.Boolv_1'(s('bool',V_27b_7c49_7c_27))) = s('type.semanticPrimitives.v','const.semanticPrimitives.Boolv_1'(s('bool',V_27b2_27))) <=> s('bool',V_27b_7c49_7c_27) = s('bool',V_27b2_27))).
fof('thm.evalProps.Tword_simp|split|0', axiom, ![V_27z_7c49_7c_27, V_27z2_27]: (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_7c49_7c_27))) = s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z2_27))) <=> s('type.ast.word_size',V_27z_7c49_7c_27) = s('type.ast.word_size',V_27z2_27))).
fof('thm.evalProps.Tword_simp|split|1', axiom, ![V_27z_7c49_7c_27, V_27z2_27]: (s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_7c49_7c_27))) = s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z2_27))) <=> s('type.ast.word_size',V_27z_7c49_7c_27) = s('type.ast.word_size',V_27z2_27))).
fof('thm.evalProps.Tword_simp|split|2', axiom, ![V_27z_27]: ~ (s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.tctor','const.ast.TC_string_0'))).
fof('thm.evalProps.Tword_simp|split|3', axiom, ![V_27z_27]: ~ (s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.tctor','const.ast.TC_tup_0'))).
fof('thm.evalProps.Tword_simp|split|4', axiom, ![V_27z_27]: ~ (s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.tctor','const.ast.TC_word8array_0'))).
fof('thm.evalProps.Tword_simp|split|5', axiom, ![V_27z_27]: (s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.tctor','const.ast.TC_word8_0') <=> s('type.ast.word_size',V_27z_27) = s('type.ast.word_size','const.ast.W8_0'))).
fof('thm.evalProps.Tword_simp|split|6', axiom, ![V_27z_27]: (s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.tctor','const.ast.TC_word64_0') <=> s('type.ast.word_size',V_27z_27) = s('type.ast.word_size','const.ast.W64_0'))).
fof('thm.evalProps.Tword_simp|split|7', axiom, ![V_27z_27]: (s('type.ast.tctor','const.ast.TC_word8_0') = s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_27))) <=> s('type.ast.word_size',V_27z_27) = s('type.ast.word_size','const.ast.W8_0'))).
fof('thm.evalProps.Tword_simp|split|8', axiom, ![V_27z_27]: (s('type.ast.tctor','const.ast.TC_word64_0') = s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_27))) <=> s('type.ast.word_size',V_27z_27) = s('type.ast.word_size','const.ast.W64_0'))).
fof('thm.evalProps.Tword_simp|split|9', axiom, ~ (s('type.ast.t','const.ast.Tword8_0') = s('type.ast.t','const.ast.Tword64_0'))).
fof('thm.evalProps.Tword_simp|split|10', axiom, ![V_27z_27]: ~ (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.t','const.ast.Tchar_0'))).
fof('thm.evalProps.Tword_simp|split|11', axiom, ![V_27z_27]: ~ (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.t','const.ast.Tint_0'))).
fof('thm.evalProps.Tword_simp|split|12', axiom, ![V_27z_27, V_27v_27]: ~ (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27v_27))))).
fof('thm.evalProps.Tword_simp|split|13', axiom, ![V_27z_27, V_27v_27]: ~ (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27v_27))))).
fof('thm.evalProps.Tword_simp|split|14', axiom, ![V_27z_27]: (s('type.ast.t','const.ast.Tword8_0') = s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) <=> s('type.ast.word_size',V_27z_27) = s('type.ast.word_size','const.ast.W8_0'))).
fof('thm.evalProps.Tword_simp|split|15', axiom, ![V_27z_27]: (s('type.ast.t','const.ast.Tword64_0') = s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) <=> s('type.ast.word_size',V_27z_27) = s('type.ast.word_size','const.ast.W64_0'))).
fof('thm.evalProps.Tword_simp|split|16', axiom, ![V_27z_27]: (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.t','const.ast.Tword8_0') <=> s('type.ast.word_size',V_27z_27) = s('type.ast.word_size','const.ast.W8_0'))).
fof('thm.evalProps.Tword_simp|split|17', axiom, ![V_27z_27]: (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.t','const.ast.Tword64_0') <=> s('type.ast.word_size',V_27z_27) = s('type.ast.word_size','const.ast.W64_0'))).
fof('thm.evalProps.Tword_simp|split|18', axiom, ![V_27n_27, V_27a_27]: (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size','const.ast.W8_0'))) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27a_27),s('type.ast.tctor',V_27n_27))) <=> (s('type.list.list'('type.ast.t'),V_27a_27) = s('type.list.list'('type.ast.t'),'const.list.NIL_0') & s('type.ast.tctor',V_27n_27) = s('type.ast.tctor','const.ast.TC_word8_0')))).
fof('thm.evalProps.Tword_simp|split|19', axiom, ![V_27n_27, V_27a_27]: (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size','const.ast.W64_0'))) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27a_27),s('type.ast.tctor',V_27n_27))) <=> (s('type.list.list'('type.ast.t'),V_27a_27) = s('type.list.list'('type.ast.t'),'const.list.NIL_0') & s('type.ast.tctor',V_27n_27) = s('type.ast.tctor','const.ast.TC_word64_0')))).
fof('thm.evalProps.Tword_simp|split|20', axiom, ![V_27z_27, V_27a_27, V_27n_27]: (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',V_27z_27))) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27a_27),s('type.ast.tctor',V_27n_27))) <=> (s('type.list.list'('type.ast.t'),V_27a_27) = s('type.list.list'('type.ast.t'),'const.list.NIL_0') & s('type.ast.tctor',V_27n_27) = s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',V_27z_27)))))).
fof('thm.evalProps.Tword_simp|split|21', axiom, ![V_27n_27, V_27a_27]: (s('type.ast.t','const.ast.Tword8_0') = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27a_27),s('type.ast.tctor',V_27n_27))) <=> (s('type.list.list'('type.ast.t'),V_27a_27) = s('type.list.list'('type.ast.t'),'const.list.NIL_0') & s('type.ast.tctor',V_27n_27) = s('type.ast.tctor','const.ast.TC_word8_0')))).
fof('thm.evalProps.Tword_simp|split|22', axiom, ![V_27n_27, V_27a_27]: (s('type.ast.t','const.ast.Tword64_0') = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27a_27),s('type.ast.tctor',V_27n_27))) <=> (s('type.list.list'('type.ast.t'),V_27a_27) = s('type.list.list'('type.ast.t'),'const.list.NIL_0') & s('type.ast.tctor',V_27n_27) = s('type.ast.tctor','const.ast.TC_word64_0')))).
fof('thm.evalProps.opw_lookup_def|split|0', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.evalProps.opw_lookup_1'(s('type.ast.opw','const.ast.Andw_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_and_0')).
fof('thm.evalProps.opw_lookup_def|split|1', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.evalProps.opw_lookup_1'(s('type.ast.opw','const.ast.Orw_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_or_0')).
fof('thm.evalProps.opw_lookup_def|split|2', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.evalProps.opw_lookup_1'(s('type.ast.opw','const.ast.Xor_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_xor_0')).
fof('thm.evalProps.opw_lookup_def|split|3', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.evalProps.opw_lookup_1'(s('type.ast.opw','const.ast.Add_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_add_0')).
fof('thm.evalProps.opw_lookup_def|split|4', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.evalProps.opw_lookup_1'(s('type.ast.opw','const.ast.Sub_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_sub_0')).
fof('thm.evalProps.shift_lookup_def|split|0', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.evalProps.shift_lookup_1'(s('type.ast.shift','const.ast.Lsl_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.words.word_lsl_0')).
fof('thm.evalProps.shift_lookup_def|split|1', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.evalProps.shift_lookup_1'(s('type.ast.shift','const.ast.Lsr_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.words.word_lsr_0')).
fof('thm.evalProps.shift_lookup_def|split|2', axiom, ![V_27A_27]: s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.evalProps.shift_lookup_1'(s('type.ast.shift','const.ast.Asr_0'))) = s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.words.word_asr_0')).
fof('thm.evalProps.evalProps_8_prove_ltb', axiom, ![V_27a_27]: (((?[V_27op_27, V_27v8_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v8_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v9_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v9_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v_7c49_7c_7c48_7c_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.lit',V_27v2_27))))))) | ((?[V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c8_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v_7c49_7c8_27))))))))) | (?[V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c9_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v_7c49_7c9_27))))))))) | (?[V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v2_7c48_7c_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v2_7c48_7c_27))))))))) | (?[V_27op_27, V_27w_7c49_7c_27, V_27w2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c49_7c_27))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w2_27))))))))) | ?[V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v22_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v22_27))))))))))))) | ?[V_27op_27, V_27v_7c49_7c2_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v_7c49_7c2_27))),s('type.ast.lit',V_27v2_27))))))))))) | (?[V_27op_27, V_27v28_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v28_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v29_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v29_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v3_7c48_7c_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v3_7c48_7c_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v3_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v3_7c49_7c_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v32_27, V_27v38_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v38_27))))))))) | (?[V_27op_27, V_27v32_27, V_27v39_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v39_27))))))))) | (?[V_27op_27, V_27v32_27, V_27v4_7c48_7c_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v4_7c48_7c_27))))))))) | (?[V_27op_27, V_27v32_27, V_27v4_7c49_7c_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v4_7c49_7c_27))))))))) | ?[V_27op_27, V_27w_7c49_7c_27, V_27w2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c49_7c_27))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w2_27)))))))))))))))))) => (?[V_27op_27, V_27w_7c49_7c_27, V_27w2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c49_7c_27))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w2_27))))))))) | (?[V_27op_27, V_27w_7c49_7c_27, V_27w2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c49_7c_27))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w2_27))))))))) | (?[V_27op_27, V_27v8_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v8_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v9_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v9_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v_7c49_7c_7c48_7c_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c8_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v_7c49_7c8_27))))))))) | (?[V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c9_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v_7c49_7c9_27))))))))) | (?[V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v2_7c48_7c_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v2_7c48_7c_27))))))))) | (?[V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v22_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v22_27))))))))) | (?[V_27op_27, V_27v_7c49_7c2_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v_7c49_7c2_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v28_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v28_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v29_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v29_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v3_7c48_7c_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v3_7c48_7c_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v3_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v3_7c49_7c_27))),s('type.ast.lit',V_27v2_27))))))) | (?[V_27op_27, V_27v32_27, V_27v38_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v38_27))))))))) | (?[V_27op_27, V_27v32_27, V_27v39_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v39_27))))))))) | (?[V_27op_27, V_27v32_27, V_27v4_7c48_7c_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v4_7c48_7c_27))))))))) | ?[V_27op_27, V_27v32_27, V_27v4_7c49_7c_27]: s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.opw','type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit'))),'const.pair.,_2'(s('type.ast.opw',V_27op_27),s('type.pair.prod'('type.ast.word_size','type.pair.prod'('type.ast.lit','type.ast.lit')),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.pair.prod'('type.ast.lit','type.ast.lit'),'const.pair.,_2'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v4_7c49_7c_27)))))))))))))))))))))))))))).
fof('thm.evalProps.do_word_op_ind', axiom, ![V_27P_27]: ((![V_27op_27, V_27w_7c49_7c_27, V_27w2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c49_7c_27))))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w2_27)))))) & (![V_27op_27, V_27w_7c49_7c_27, V_27w2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c49_7c_27))))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w2_27)))))) & (![V_27op_27, V_27v8_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v8_27))))),s('type.ast.lit',V_27v2_27)))) & (![V_27op_27, V_27v9_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v9_27))))),s('type.ast.lit',V_27v2_27)))) & (![V_27op_27, V_27v_7c49_7c_7c48_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c_7c48_7c_27))))),s('type.ast.lit',V_27v2_27)))) & (![V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c8_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v_7c49_7c8_27)))))) & (![V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c9_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v_7c49_7c9_27)))))) & (![V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v2_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v2_7c48_7c_27)))))) & (![V_27op_27, V_27v_7c49_7c_7c49_7c_27, V_27v22_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v22_27)))))) & (![V_27op_27, V_27v_7c49_7c2_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v_7c49_7c2_27))))),s('type.ast.lit',V_27v2_27)))) & (![V_27op_27, V_27v28_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v28_27))))),s('type.ast.lit',V_27v2_27)))) & (![V_27op_27, V_27v29_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v29_27))))),s('type.ast.lit',V_27v2_27)))) & (![V_27op_27, V_27v3_7c48_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v3_7c48_7c_27))))),s('type.ast.lit',V_27v2_27)))) & (![V_27op_27, V_27v3_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v3_7c49_7c_27))))),s('type.ast.lit',V_27v2_27)))) & (![V_27op_27, V_27v32_27, V_27v38_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v38_27)))))) & (![V_27op_27, V_27v32_27, V_27v39_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v39_27)))))) & (![V_27op_27, V_27v32_27, V_27v4_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v4_7c48_7c_27)))))) & ![V_27op_27, V_27v32_27, V_27v4_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27op_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v4_7c49_7c_27))))))))))))))))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.lit','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.opw','fun'('type.ast.word_size','fun'('type.ast.lit','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.opw',V_27v_27))),s('type.ast.word_size',V_27v_7c49_7c_27))),s('type.ast.lit',V_27v2_27))),s('type.ast.lit',V_27v3_27)))))).
fof('ARITY_1_3_const.evalProps.opw_lookup', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.evalProps.opw_lookup_1'(s('type.ast.opw',VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))),s('type.fcp.cart'('bool',V_27A_27),VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.evalProps.opw_lookup_3'(s('type.ast.opw',VV0),s('type.fcp.cart'('bool',V_27A_27),VV1),s('type.fcp.cart'('bool',V_27A_27),VV2)))).
fof('thm.evalProps.do_word_op_def|split|0', axiom, ![V_27w2_7c39_7c_27, V_27w_7c49_7c_7c39_7c_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c49_7c_7c39_7c_27))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w2_7c39_7c_27))))) = s('type.option.option'('type.ast.lit'),'const.option.SOME_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.evalProps.opw_lookup_3'(s('type.ast.opw',V_27op_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c49_7c_7c39_7c_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w2_7c39_7c_27)))))))).
fof('thm.evalProps.do_word_op_def|split|1', axiom, ![V_27w2_27, V_27w_7c49_7c_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c49_7c_27))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w2_27))))) = s('type.option.option'('type.ast.lit'),'const.option.SOME_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.evalProps.opw_lookup_3'(s('type.ast.opw',V_27op_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c49_7c_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w2_27)))))))).
fof('thm.evalProps.do_word_op_def|split|2', axiom, ![V_27v8_27, V_27v2_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v8_27))),s('type.ast.lit',V_27v2_27))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|3', axiom, ![V_27v9_27, V_27v2_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v9_27))),s('type.ast.lit',V_27v2_27))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|4', axiom, ![V_27v2_27, V_27v_7c49_7c_7c48_7c_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.lit',V_27v2_27))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|5', axiom, ![V_27v_7c49_7c8_27, V_27v_7c49_7c_7c49_7c_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v_7c49_7c8_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|6', axiom, ![V_27v_7c49_7c9_27, V_27v_7c49_7c_7c49_7c_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v_7c49_7c9_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|7', axiom, ![V_27v2_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v2_7c48_7c_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|8', axiom, ![V_27v22_27, V_27v_7c49_7c_7c49_7c_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c_7c49_7c_27))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v22_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|9', axiom, ![V_27v2_27, V_27v_7c49_7c2_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v_7c49_7c2_27))),s('type.ast.lit',V_27v2_27))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|10', axiom, ![V_27v28_27, V_27v2_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v28_27))),s('type.ast.lit',V_27v2_27))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|11', axiom, ![V_27v29_27, V_27v2_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v29_27))),s('type.ast.lit',V_27v2_27))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|12', axiom, ![V_27v3_7c48_7c_27, V_27v2_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v3_7c48_7c_27))),s('type.ast.lit',V_27v2_27))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|13', axiom, ![V_27v3_7c49_7c_27, V_27v2_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v3_7c49_7c_27))),s('type.ast.lit',V_27v2_27))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|14', axiom, ![V_27v38_27, V_27v32_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v38_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|15', axiom, ![V_27v39_27, V_27v32_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v39_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|16', axiom, ![V_27v4_7c48_7c_27, V_27v32_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v4_7c48_7c_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_op_def|split|17', axiom, ![V_27v4_7c49_7c_27, V_27v32_27, V_27op_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_word_op_4'(s('type.ast.opw',V_27op_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v32_27))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v4_7c49_7c_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.evalProps_|49|3_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v9_27, V_27v2_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v9_27))))))))) | (?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27, V_27v2_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v_7c49_7c_7c48_7c_27))))))))) | (?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c_7c49_7c_27))))))))) | ((?[V_27sh_27, V_27n_27, V_27w_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27sh_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))))))) | ?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c49_7c2_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c2_27)))))))))) | (?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c49_7c3_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v_7c49_7c3_27))))))))) | ?[V_27sh_27, V_27n_27, V_27w_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27sh_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))))))))))) => (?[V_27sh_27, V_27n_27, V_27w_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27sh_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))))))) | (?[V_27sh_27, V_27n_27, V_27w_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27sh_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))))))) | (?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v9_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v9_27))))))))) | (?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v_7c49_7c_7c48_7c_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v_7c49_7c_7c48_7c_27))))))))) | (?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v_7c49_7c_7c49_7c_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c_7c49_7c_27))))))))) | (?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c49_7c2_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c2_27))))))))) | ?[V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c49_7c3_27]: s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),V_27a_27) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v_7c49_7c3_27))))))))))))))))).
fof('thm.evalProps.do_shift_ind', axiom, ![V_27P_27]: ((![V_27sh_27, V_27n_27, V_27w_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.shift',V_27sh_27))),s('type.num.num',V_27n_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27)))))) & (![V_27sh_27, V_27n_27, V_27w_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.shift',V_27sh_27))),s('type.num.num',V_27n_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))) & (![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v9_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.shift',V_27v_7c48_7c_27))),s('type.num.num',V_27v_7c49_7c_27))),s('type.ast.word_size',V_27v2_27))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v9_27)))))) & (![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.shift',V_27v_7c48_7c_27))),s('type.num.num',V_27v_7c49_7c_27))),s('type.ast.word_size',V_27v2_27))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v_7c49_7c_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.shift',V_27v_7c48_7c_27))),s('type.num.num',V_27v_7c49_7c_27))),s('type.ast.word_size',V_27v2_27))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c_7c49_7c_27)))))) & (![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c49_7c2_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.shift',V_27v_7c48_7c_27))),s('type.num.num',V_27v_7c49_7c_27))),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c2_27)))))) & ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c49_7c3_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.shift',V_27v_7c48_7c_27))),s('type.num.num',V_27v_7c49_7c_27))),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v_7c49_7c3_27)))))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),'happ'(s('fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool'))),'happ'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.ast.word_size','fun'('type.ast.lit','bool')))),V_27P_27),s('type.ast.shift',V_27v_27))),s('type.num.num',V_27v_7c49_7c_27))),s('type.ast.word_size',V_27v2_27))),s('type.ast.lit',V_27v3_27)))))).
fof('ARITY_1_3_const.evalProps.shift_lookup', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.evalProps.shift_lookup_1'(s('type.ast.shift',VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))),s('type.num.num',VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.evalProps.shift_lookup_3'(s('type.ast.shift',VV0),s('type.fcp.cart'('bool',V_27A_27),VV1),s('type.num.num',VV2)))).
fof('thm.evalProps.do_shift_def|split|0', axiom, ![V_27w_7c39_7c_27, V_27sh_27, V_27n_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_shift_4'(s('type.ast.shift',V_27sh_27),s('type.num.num',V_27n_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_27))))) = s('type.option.option'('type.ast.lit'),'const.option.SOME_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.evalProps.shift_lookup_3'(s('type.ast.shift',V_27sh_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_27),s('type.num.num',V_27n_27)))))))).
fof('thm.evalProps.do_shift_def|split|1', axiom, ![V_27w_27, V_27sh_27, V_27n_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_shift_4'(s('type.ast.shift',V_27sh_27),s('type.num.num',V_27n_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))) = s('type.option.option'('type.ast.lit'),'const.option.SOME_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.evalProps.shift_lookup_3'(s('type.ast.shift',V_27sh_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27),s('type.num.num',V_27n_27)))))))).
fof('thm.evalProps.do_shift_def|split|2', axiom, ![V_27v9_27, V_27v2_27, V_27v_7c49_7c_27, V_27v_7c48_7c_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_shift_4'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.num.num',V_27v_7c49_7c_27),s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v9_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_shift_def|split|3', axiom, ![V_27v2_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_27, V_27v_7c48_7c_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_shift_4'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.num.num',V_27v_7c49_7c_27),s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_shift_def|split|4', axiom, ![V_27v2_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_27, V_27v_7c48_7c_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_shift_4'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.num.num',V_27v_7c49_7c_27),s('type.ast.word_size',V_27v2_27),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v_7c49_7c_7c49_7c_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_shift_def|split|5', axiom, ![V_27v_7c49_7c2_27, V_27v_7c49_7c_27, V_27v_7c48_7c_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_shift_4'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.num.num',V_27v_7c49_7c_27),s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v_7c49_7c2_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.do_shift_def|split|6', axiom, ![V_27v_7c49_7c3_27, V_27v_7c49_7c_27, V_27v_7c48_7c_27]: s('type.option.option'('type.ast.lit'),'const.evalProps.do_shift_4'(s('type.ast.shift',V_27v_7c48_7c_27),s('type.num.num',V_27v_7c49_7c_27),s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v_7c49_7c3_27))))) = s('type.option.option'('type.ast.lit'),'const.option.NONE_0')).
fof('thm.evalProps.evalProps_|49|8_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v3_27, V_27v_7c48_7c_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v3_27))))) | (?[V_27v4_27, V_27v_7c48_7c_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v4_27))))) | (?[V_27v5_27, V_27v_7c48_7c_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v5_27))))) | ((?[V_27w_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))) | ?[V_27v6_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v6_27)))))) | (?[V_27v7_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v7_27))))) | ?[V_27w_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))))))) => (?[V_27w_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))) | (?[V_27w_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))) | (?[V_27v_7c48_7c_27, V_27v3_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v3_27))))) | (?[V_27v_7c48_7c_27, V_27v4_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v4_27))))) | (?[V_27v_7c48_7c_27, V_27v5_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v5_27))))) | (?[V_27v6_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v6_27))))) | ?[V_27v7_27]: s('type.pair.prod'('type.ast.word_size','type.ast.lit'),V_27a_27) = s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v7_27))))))))))))).
fof('thm.evalProps.do_word_to_int_ind', axiom, ![V_27P_27]: ((![V_27w_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),V_27P_27),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27)))))) & (![V_27w_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),V_27P_27),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))) & (![V_27v_7c48_7c_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),V_27P_27),s('type.ast.word_size',V_27v_7c48_7c_27))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v3_27)))))) & (![V_27v_7c48_7c_27, V_27v4_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),V_27P_27),s('type.ast.word_size',V_27v_7c48_7c_27))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v4_27)))))) & (![V_27v_7c48_7c_27, V_27v5_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),V_27P_27),s('type.ast.word_size',V_27v_7c48_7c_27))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v5_27)))))) & (![V_27v6_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),V_27P_27),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v6_27)))))) & ![V_27v7_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),V_27P_27),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v7_27)))))))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.ast.lit','bool'),'happ'(s('fun'('type.ast.word_size','fun'('type.ast.lit','bool')),V_27P_27),s('type.ast.word_size',V_27v_27))),s('type.ast.lit',V_27v_7c49_7c_27)))))).
fof('thm.evalProps.do_word_to_int_def|split|0', axiom, ![V_27w_7c39_7c_27]: s('type.option.option'('type.integer.int'),'const.evalProps.do_word_to_int_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_27))))) = s('type.option.option'('type.integer.int'),'const.option.SOME_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_27)))))))).
fof('thm.evalProps.do_word_to_int_def|split|1', axiom, ![V_27w_27]: s('type.option.option'('type.integer.int'),'const.evalProps.do_word_to_int_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))) = s('type.option.option'('type.integer.int'),'const.option.SOME_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))))).
fof('thm.evalProps.do_word_to_int_def|split|2', axiom, ![V_27v3_27, V_27v_7c48_7c_27]: s('type.option.option'('type.integer.int'),'const.evalProps.do_word_to_int_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27v3_27))))) = s('type.option.option'('type.integer.int'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_to_int_def|split|3', axiom, ![V_27v4_27, V_27v_7c48_7c_27]: s('type.option.option'('type.integer.int'),'const.evalProps.do_word_to_int_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27v4_27))))) = s('type.option.option'('type.integer.int'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_to_int_def|split|4', axiom, ![V_27v5_27, V_27v_7c48_7c_27]: s('type.option.option'('type.integer.int'),'const.evalProps.do_word_to_int_2'(s('type.ast.word_size',V_27v_7c48_7c_27),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27v5_27))))) = s('type.option.option'('type.integer.int'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_to_int_def|split|5', axiom, ![V_27v6_27]: s('type.option.option'('type.integer.int'),'const.evalProps.do_word_to_int_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27v6_27))))) = s('type.option.option'('type.integer.int'),'const.option.NONE_0')).
fof('thm.evalProps.do_word_to_int_def|split|6', axiom, ![V_27v7_27]: s('type.option.option'('type.integer.int'),'const.evalProps.do_word_to_int_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v7_27))))) = s('type.option.option'('type.integer.int'),'const.option.NONE_0')).
fof('ARITY_0_2_const.evalProps.do_word_from_int', axiom, ![VV0, VV1]: s('type.ast.lit','happ'(s('fun'('type.integer.int','type.ast.lit'),'happ'(s('fun'('type.ast.word_size','fun'('type.integer.int','type.ast.lit')),'const.evalProps.do_word_from_int_0'),s('type.ast.word_size',VV0))),s('type.integer.int',VV1))) = s('type.ast.lit','const.evalProps.do_word_from_int_2'(s('type.ast.word_size',VV0),s('type.integer.int',VV1)))).
fof('thm.evalProps.do_word_from_int_def|split|0', axiom, ![V_27i_27]: s('type.ast.lit','const.evalProps.do_word_from_int_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.integer.int',V_27i_27))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.integer_word.i2w_1'(s('type.integer.int',V_27i_27)))))).
fof('thm.evalProps.do_word_from_int_def|split|1', axiom, ![V_27i_27]: s('type.ast.lit','const.evalProps.do_word_from_int_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.integer.int',V_27i_27))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.integer_word.i2w_1'(s('type.integer.int',V_27i_27)))))).
fof('thm.evalProps.lit_same_type_refl', axiom, ![V_27l_27]: p(s('bool','const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',V_27l_27),s('type.ast.lit',V_27l_27))))).
fof('thm.evalProps.lit_same_type_sym', axiom, ![V_27l_7c49_7c_27, V_27l2_27]: (p(s('bool','const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',V_27l_7c49_7c_27),s('type.ast.lit',V_27l2_27)))) => p(s('bool','const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',V_27l2_27),s('type.ast.lit',V_27l_7c49_7c_27)))))).
fof('thm.evalProps.evalProps_25_prove_ltb', axiom, ![V_27P_7c48_7c_27]: (![V_27s_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) <=> ![V_27s_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat','const.ast.Pvar_1'(s('type.list.list'('type.string.char'),V_27s_27)))))))).
fof('thm.evalProps.evalProps_26_prove_ltb', axiom, ![V_27P_7c48_7c_27]: (![V_27l_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat','const.ast.Plit_1'(s('type.ast.lit',V_27l_27)))))) <=> ![V_27l_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat','const.ast.Plit_1'(s('type.ast.lit',V_27l_27)))))))).
fof('thm.evalProps.evalProps_27_prove_ltb', axiom, ![V_27P_7c49_7c_27, V_27P_7c48_7c_27]: (![V_27l_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.pat'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.pat'),V_27l_27)))) => ![V_27o_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27o_27),s('type.list.list'('type.ast.pat'),V_27l_27))))))) <=> ![V_27l_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.pat'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.pat'),V_27l_27)))) => ![V_27o_27]: p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat','const.ast.Pcon_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27o_27),s('type.list.list'('type.ast.pat'),V_27l_27))))))))).
fof('thm.evalProps.evalProps_28_prove_ltb', axiom, ![V_27P_7c48_7c_27]: (![V_27p_27]: (p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat',V_27p_27)))) => p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat','const.ast.Pref_1'(s('type.ast.pat',V_27p_27))))))) <=> ![V_27p_27]: (p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat',V_27p_27)))) => p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat','const.ast.Pref_1'(s('type.ast.pat',V_27p_27))))))))).
fof('thm.evalProps.evalProps_29_prove_ltb', axiom, ![V_27P_7c49_7c_27, V_27P_7c48_7c_27]: (![V_27p_27, V_27l_27]: ((p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat',V_27p_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.ast.pat'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.pat'),V_27l_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.ast.pat'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.ast.pat'),V_27l_27))))))) <=> ![V_27p_27, V_27l_27]: ((p(s('bool','happ'(s('fun'('type.ast.pat','bool'),V_27P_7c48_7c_27),s('type.ast.pat',V_27p_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.ast.pat'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.pat'),V_27l_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.ast.pat'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.pat'),'const.list.CONS_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.ast.pat'),V_27l_27))))))))).
fof('thm.evalProps.evalProps_3|48|_prove_ltb', axiom, ((![V_27p_27, V_27acc_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27))) & ![V_27ps_27, V_27acc_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pats_bindings_2'(s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pats_bindings_2'(s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27)))) <=> (![V_27p_27, V_27acc_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27))) & ![V_27ps_27, V_27acc_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pats_bindings_2'(s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pats_bindings_2'(s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27)))))).
fof('thm.evalProps.pat_bindings_accum|split|0', axiom, ![V_27p_27, V_27acc_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27)))).
fof('thm.evalProps.pat_bindings_accum|split|1', axiom, ![V_27ps_27, V_27acc_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pats_bindings_2'(s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pats_bindings_2'(s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.list.list'('type.string.char')),V_27acc_27)))).
fof('thm.evalProps.pmatch_append|split|0', axiom, ![V_27cenv_27, V_27st_27, V_27p_27, V_27v_27, V_27env_27, V_27env_7c39_7c_27, V_27env_7c39_7c_7c39_7c_27]: (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.pmatch_5'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),V_27cenv_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27st_27),s('type.ast.pat',V_27p_27),s('type.semanticPrimitives.v',V_27v_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_27))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27))) => s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.pmatch_5'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),V_27cenv_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27st_27),s('type.ast.pat',V_27p_27),s('type.semanticPrimitives.v',V_27v_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_7c39_7c_27))))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_7c39_7c_27))))))).
fof('thm.evalProps.pmatch_append|split|1', axiom, ![V_27cenv_27, V_27st_27, V_27ps_27, V_27v_27, V_27env_27, V_27env_7c39_7c_27, V_27env_7c39_7c_7c39_7c_27]: (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.pmatch_list_5'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),V_27cenv_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27st_27),s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_27))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27))) => s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.pmatch_list_5'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),V_27cenv_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27st_27),s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_7c39_7c_27))))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_7c39_7c_27))))))).
fof('thm.evalProps.pmatch_extend|split|0', axiom, ![V_27cenv_27, V_27s_27, V_27p_27, V_27v_27, V_27env_27, V_27env_7c39_7c_27]: (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.pmatch_5'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),V_27cenv_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ast.pat',V_27p_27),s('type.semanticPrimitives.v',V_27v_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_27))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27))) => ?[V_27env_7c39_7c_7c39_7c_7c48_7c_27]: (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_7c39_7c_7c48_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_27))) & s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_7c39_7c_7c48_7c_27))) = s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))).
fof('thm.evalProps.pmatch_extend|split|1', axiom, ![V_27cenv_27, V_27s_27, V_27ps_27, V_27vs_27, V_27env_27, V_27env_7c39_7c_27]: (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.pmatch_list_5'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),V_27cenv_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_27))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27))) => ?[V_27env_7c39_7c_7c39_7c_7c48_7c_27]: (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_7c39_7c_7c48_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_27))) & s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_7c39_7c_7c48_7c_27))) = s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pats_bindings_2'(s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))).
fof('thm.evalProps.evalProps_34_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27]: ![V_27x_27, V_27v9_27, V_27v8_27, V_27v7_27, V_27v6_27, V_27v5_27, V_27v4_27, V_27v3_27, V_27v2_7c48_7c_27, V_27v2_27, V_27v_7c49_7c9_27, V_27v_7c49_7c8_27, V_27v_7c49_7c7_27, V_27v_7c49_7c6_27, V_27v_7c49_7c5_27, V_27v_7c49_7c4_27, V_27v_7c49_7c3_27, V_27v_7c49_7c2_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_27, V_27v_27, V_27f7_27, V_27f6_27, V_27f5_27, V_27f4_27, V_27f3_27, V_27f2_27, V_27f_7c49_7c_27, V_27f_7c39_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,'const.ast.op_CASE_30'(s('type.ast.op',V_27x_27),s('fun'('type.ast.opn',V_27A_27),V_27f_27),s('fun'('type.ast.opb',V_27A_27),V_27f_7c49_7c_27),s('fun'('type.ast.word_size','fun'('type.ast.opw',V_27A_27)),V_27f2_27),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num',V_27A_27))),V_27f3_27),s(V_27A_27,V_27v_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s('fun'('type.ast.word_size',V_27A_27),V_27f4_27),s('fun'('type.ast.word_size',V_27A_27),V_27f5_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s('fun'('type.ast.opb',V_27A_27),V_27f6_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27),s(V_27A_27,V_27v_7c49_7c8_27),s(V_27A_27,V_27v_7c49_7c9_27),s(V_27A_27,V_27v2_7c48_7c_27),s('fun'('type.num.num',V_27A_27),V_27f7_27))))) = s(V_27A_7c49_7c_27,'const.ast.op_CASE_30'(s('type.ast.op',V_27x_27),s('fun'('type.ast.opn',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.ast.opn',V_27A_27),V_27f_27))),s('fun'('type.ast.opb',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.ast.opb',V_27A_27),V_27f_7c49_7c_27))),s('fun'('type.ast.word_size','fun'('type.ast.opw',V_27A_7c49_7c_27)),'_dst_x00x11_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.ast.word_size','fun'('type.ast.opw',V_27A_27)),V_27f2_27))),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num',V_27A_7c49_7c_27))),'_dst_x000x111_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num',V_27A_27))),V_27f3_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v2_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v3_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v4_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v5_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v6_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v7_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v8_27))),s('fun'('type.ast.word_size',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.ast.word_size',V_27A_27),V_27f4_27))),s('fun'('type.ast.word_size',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.ast.word_size',V_27A_27),V_27f5_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v9_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27))),s('fun'('type.ast.opb',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.ast.opb',V_27A_27),V_27f6_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c2_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c3_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c4_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c5_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c6_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c7_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c8_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c9_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v2_7c48_7c_27))),s('fun'('type.num.num',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.num.num',V_27A_27),V_27f7_27)))))).
fof('thm.evalProps.evalProps_35_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27,V_27B_27]: ![V_27x_27, V_27v_27, V_27f_7c39_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27B_27,'const.list.list_CASE_3'(s('type.list.list'(V_27A_27),V_27x_27),s(V_27B_27,V_27v_27),s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),V_27B_27)),V_27f_27))))) = s(V_27A_7c49_7c_27,'const.list.list_CASE_3'(s('type.list.list'(V_27A_27),V_27x_27),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27B_27,V_27v_27))),s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),V_27A_7c49_7c_27)),'_dst_x00x11_2'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),V_27B_27)),V_27f_27)))))).
fof('thm.evalProps.evalProps_36_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27,V_27B_27]: ![V_27x_27, V_27v_27, V_27f_7c39_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27B_27,'const.option.option_CASE_3'(s('type.option.option'(V_27A_27),V_27x_27),s(V_27B_27,V_27v_27),s('fun'(V_27A_27,V_27B_27),V_27f_27))))) = s(V_27A_7c49_7c_27,'const.option.option_CASE_3'(s('type.option.option'(V_27A_27),V_27x_27),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27B_27,V_27v_27))),s('fun'(V_27A_27,V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'(V_27A_27,V_27B_27),V_27f_27)))))).
fof('thm.evalProps.evalProps_37_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27]: ![V_27x_27, V_27f5_27, V_27f4_27, V_27f3_27, V_27f2_27, V_27f_7c49_7c_27, V_27f_7c39_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,'const.semanticPrimitives.v_CASE_7'(s('type.semanticPrimitives.v',V_27x_27),s('fun'('type.ast.lit',V_27A_27),V_27f_27),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),V_27A_27)),V_27f_7c49_7c_27),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp',V_27A_27))),V_27f2_27),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),V_27A_27))),V_27f3_27),s('fun'('type.num.num',V_27A_27),V_27f4_27),s('fun'('type.list.list'('type.semanticPrimitives.v'),V_27A_27),V_27f5_27))))) = s(V_27A_7c49_7c_27,'const.semanticPrimitives.v_CASE_7'(s('type.semanticPrimitives.v',V_27x_27),s('fun'('type.ast.lit',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.ast.lit',V_27A_27),V_27f_27))),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),V_27A_7c49_7c_27)),'_dst_x00x11_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'fun'('type.list.list'('type.semanticPrimitives.v'),V_27A_27)),V_27f_7c49_7c_27))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp',V_27A_7c49_7c_27))),'_dst_x000x111_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp',V_27A_27))),V_27f2_27))),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),V_27A_7c49_7c_27))),'_dst_x000x111_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),V_27A_27))),V_27f3_27))),s('fun'('type.num.num',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.num.num',V_27A_27),V_27f4_27))),s('fun'('type.list.list'('type.semanticPrimitives.v'),V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.list.list'('type.semanticPrimitives.v'),V_27A_27),V_27f5_27)))))).
fof('thm.evalProps.evalProps_38_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27,V_27B_27]: ![V_27x_27, V_27f2_27, V_27f_7c49_7c_27, V_27f_7c39_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27B_27,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27),s('fun'(V_27A_27,V_27B_27),V_27f_27),s('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27B_27),V_27f_7c49_7c_27),s('fun'('type.list.list'(V_27A_27),V_27B_27),V_27f2_27))))) = s(V_27A_7c49_7c_27,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27),s('fun'(V_27A_27,V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'(V_27A_27,V_27B_27),V_27f_27))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27B_27),V_27f_7c49_7c_27))),s('fun'('type.list.list'(V_27A_27),V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27B_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.list.list'(V_27A_27),V_27B_27),V_27f2_27)))))).
fof('thm.evalProps.evalProps_39_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27]: ![V_27x_27, V_27f4_27, V_27f3_27, V_27f2_27, V_27f_7c49_7c_27, V_27f_7c39_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,'const.ast.lit_CASE_6'(s('type.ast.lit',V_27x_27),s('fun'('type.integer.int',V_27A_27),V_27f_27),s('fun'('type.string.char',V_27A_27),V_27f_7c49_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27A_27),V_27f3_27),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27A_27),V_27f4_27))))) = s(V_27A_7c49_7c_27,'const.ast.lit_CASE_6'(s('type.ast.lit',V_27x_27),s('fun'('type.integer.int',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.integer.int',V_27A_27),V_27f_27))),s('fun'('type.string.char',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.string.char',V_27A_27),V_27f_7c49_7c_27))),s('fun'('type.list.list'('type.string.char'),V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27))),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27A_27),V_27f3_27))),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27A_27),V_27f4_27)))))).
fof('thm.evalProps.evalProps_4|48|_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27]: ![V_27x_27, V_27v_27, V_27f_7c39_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,'const.semanticPrimitives.eq_result_CASE_3'(s('type.semanticPrimitives.eq_result',V_27x_27),s('fun'('bool',V_27A_27),V_27f_27),s(V_27A_27,V_27v_27))))) = s(V_27A_7c49_7c_27,'const.semanticPrimitives.eq_result_CASE_3'(s('type.semanticPrimitives.eq_result',V_27x_27),s('fun'('bool',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('bool',V_27A_27),V_27f_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_27)))))).
fof('thm.evalProps.evalProps_4|49|_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27]: ![V_27x_27, V_27v_7c49_7c_27, V_27v_7c48_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_27),s(V_27A_27,'const.ast.word_size_CASE_3'(s('type.ast.word_size',V_27x_27),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27))))) = s(V_27A_7c49_7c_27,'const.ast.word_size_CASE_3'(s('type.ast.word_size',V_27x_27),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_27),s(V_27A_27,V_27v_7c48_7c_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_27),s(V_27A_27,V_27v_7c49_7c_27)))))).
fof('thm.evalProps.evalProps_42_prove_ltb', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27x_27, V_27v_27, V_27f_27]: (s(V_27A_27,'const.pair.pair_CASE_2'(s('type.pair.prod'(V_27B_27,V_27C_27),V_27x_27),s('fun'(V_27B_27,'fun'(V_27C_27,V_27A_27)),V_27f_27))) = s(V_27A_27,V_27v_27) <=> ?[V_27x_7c49_7c_27, V_27x2_27]: (s('type.pair.prod'(V_27B_27,V_27C_27),V_27x_27) = s('type.pair.prod'(V_27B_27,V_27C_27),'const.pair.,_2'(s(V_27B_27,V_27x_7c49_7c_27),s(V_27C_27,V_27x2_27))) & s(V_27A_27,'happ'(s('fun'(V_27C_27,V_27A_27),'happ'(s('fun'(V_27B_27,'fun'(V_27C_27,V_27A_27)),V_27f_27),s(V_27B_27,V_27x_7c49_7c_27))),s(V_27C_27,V_27x2_27))) = s(V_27A_27,V_27v_27)))).
fof('thm.evalProps.evalProps_43_prove_ltb', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27f_27, V_27v_27, V_27z_27]: (s(V_27C_27,'const.bool.LET_2'(s('fun'('type.pair.prod'(V_27A_27,V_27B_27),V_27C_27),'const.pair.UNCURRY_1'(s('fun'(V_27A_27,'fun'(V_27B_27,V_27C_27)),V_27f_27))),s('type.pair.prod'(V_27A_27,V_27B_27),V_27z_27))) = s(V_27C_27,V_27v_27) <=> ?[V_27x_7c49_7c_27, V_27x2_27]: (s('type.pair.prod'(V_27A_27,V_27B_27),V_27z_27) = s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27x_7c49_7c_27),s(V_27B_27,V_27x2_27))) & s(V_27C_27,'happ'(s('fun'(V_27B_27,V_27C_27),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,V_27C_27)),V_27f_27),s(V_27A_27,V_27x_7c49_7c_27))),s(V_27B_27,V_27x2_27))) = s(V_27C_27,V_27v_27)))).
fof('ARITY_0_3_const.semanticPrimitives.opn_lookup', axiom, ![VV0, VV1, VV2]: s('type.integer.int','happ'(s('fun'('type.integer.int','type.integer.int'),'happ'(s('fun'('type.integer.int','fun'('type.integer.int','type.integer.int')),'happ'(s('fun'('type.ast.opn','fun'('type.integer.int','fun'('type.integer.int','type.integer.int'))),'const.semanticPrimitives.opn_lookup_0'),s('type.ast.opn',VV0))),s('type.integer.int',VV1))),s('type.integer.int',VV2))) = s('type.integer.int','const.semanticPrimitives.opn_lookup_3'(s('type.ast.opn',VV0),s('type.integer.int',VV1),s('type.integer.int',VV2)))).
fof('ARITY_1_3_const.semanticPrimitives.shift8_lookup', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.semanticPrimitives.shift8_lookup_1'(s('type.ast.shift',VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))),s('type.num.num',VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.semanticPrimitives.shift8_lookup_3'(s('type.ast.shift',VV0),s('type.fcp.cart'('bool',V_27A_27),VV1),s('type.num.num',VV2)))).
fof('ARITY_0_3_const.semanticPrimitives.opb_lookup', axiom, ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.integer.int','bool'),'happ'(s('fun'('type.integer.int','fun'('type.integer.int','bool')),'happ'(s('fun'('type.ast.opb','fun'('type.integer.int','fun'('type.integer.int','bool'))),'const.semanticPrimitives.opb_lookup_0'),s('type.ast.opb',VV0))),s('type.integer.int',VV1))),s('type.integer.int',VV2))) = s('bool','const.semanticPrimitives.opb_lookup_3'(s('type.ast.opb',VV0),s('type.integer.int',VV1),s('type.integer.int',VV2)))).
fof('ARITY_1_3_const.semanticPrimitives.opw8_lookup', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.semanticPrimitives.opw8_lookup_1'(s('type.ast.opw',VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))),s('type.fcp.cart'('bool',V_27A_27),VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.semanticPrimitives.opw8_lookup_3'(s('type.ast.opw',VV0),s('type.fcp.cart'('bool',V_27A_27),VV1),s('type.fcp.cart'('bool',V_27A_27),VV2)))).
fof('ARITY_1_3_const.semanticPrimitives.shift64_lookup', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'const.semanticPrimitives.shift64_lookup_1'(s('type.ast.shift',VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))),s('type.num.num',VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.semanticPrimitives.shift64_lookup_3'(s('type.ast.shift',VV0),s('type.fcp.cart'('bool',V_27A_27),VV1),s('type.num.num',VV2)))).
fof('ARITY_1_3_const.semanticPrimitives.opw64_lookup', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.semanticPrimitives.opw64_lookup_1'(s('type.ast.opw',VV0))),s('type.fcp.cart'('bool',V_27A_27),VV1))),s('type.fcp.cart'('bool',V_27A_27),VV2))) = s('type.fcp.cart'('bool',V_27A_27),'const.semanticPrimitives.opw64_lookup_3'(s('type.ast.opw',VV0),s('type.fcp.cart'('bool',V_27A_27),VV1),s('type.fcp.cart'('bool',V_27A_27),VV2)))).
fof('thm.evalProps.do_app_cases', axiom, ![V_27A_27]: ![V_27vs_27, V_27v_27, V_27t_27, V_27st_7c39_7c_27, V_27s_27, V_27op_27]: (s('type.option.option'('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'const.semanticPrimitives.do_app_3'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))),s('type.ast.op',V_27op_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27))) = s('type.option.option'('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'))),'const.option.SOME_1'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) <=> ?[V_27v_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: (s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_27))) & ((s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') & (?[V_27v3_7c48_7c_27, V_27op_7c39_7c_7c39_7c_7c39_7c_27, V_27n_27, V_27v48_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',V_27v3_7c48_7c_27),s('type.ast.shift',V_27op_7c39_7c_7c39_7c_7c39_7c_27),s('type.num.num',V_27n_27))) & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v48_27))) & (?[V_27w_27]: (s('type.ast.word_size',V_27v3_7c48_7c_27) = s('type.ast.word_size','const.ast.W8_0') & (s('type.ast.lit',V_27v48_27) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.semanticPrimitives.shift8_lookup_3'(s('type.ast.shift',V_27op_7c39_7c_7c39_7c_7c39_7c_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27),s('type.num.num',V_27n_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | ?[V_27w_7c39_7c_27]: (s('type.ast.word_size',V_27v3_7c48_7c_27) = s('type.ast.word_size','const.ast.W64_0') & (s('type.ast.lit',V_27v48_27) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.semanticPrimitives.shift64_lookup_3'(s('type.ast.shift',V_27op_7c39_7c_7c39_7c_7c39_7c_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c39_7c_27),s('type.num.num',V_27n_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))))) | (?[V_27s_7c39_7c_27, V_27n_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Opref_0') & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.num.num'),'const.semanticPrimitives.store_alloc_2'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27))),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.num.num',V_27n_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27n_27))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | (?[V_27n_7c39_7c_27, V_27v_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Opderef_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27n_7c39_7c_27))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27n_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',V_27v_7c39_7c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27v_7c39_7c_27))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) | (?[V_27n_7c39_7c_7c39_7c_7c39_7c_27, V_27ws_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Aw8length_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27n_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27n_7c39_7c_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) | (?[V_27v33_27, V_27i_7c39_7c_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',V_27v33_27))) & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_27))))) & ((s('type.ast.word_size',V_27v33_27) = s('type.ast.word_size','const.ast.W8_0') & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.integer_word.i2w_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) | (s('type.ast.word_size',V_27v33_27) = s('type.ast.word_size','const.ast.W64_0') & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.integer_word.i2w_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))))) | (?[V_27v34_27, V_27v_7c49_7c66_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',V_27v34_27))) & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v_7c49_7c66_27))) & (?[V_27w_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27]: (s('type.ast.word_size',V_27v34_27) = s('type.ast.word_size','const.ast.W8_0') & (s('type.ast.lit',V_27v_7c49_7c66_27) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | ?[V_27w_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27]: (s('type.ast.word_size',V_27v34_27) = s('type.ast.word_size','const.ast.W64_0') & (s('type.ast.lit',V_27v_7c49_7c66_27) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))))) | (?[V_27c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Ord_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | (?[V_27i_7c39_7c_7c39_7c_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Chr_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_27))))) & (((~ (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & ~ (p(s('bool','const.integer.int_gt_2'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) & ((p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s('bool','const.integer.int_gt_2'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_27))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))))) | (?[V_27str_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Explode_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27str_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.char_list_to_v_1'(s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27str_27))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | (?[V_27ls_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Implode_0') & (s('type.option.option'('type.list.list'('type.string.char')),'const.semanticPrimitives.v_to_char_list_1'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27ls_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27ls_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | (?[V_27str_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Strlen_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27str_7c39_7c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),V_27str_7c39_7c_27))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | (?[V_27vs_7c48_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.VfromList_0') & (s('type.option.option'('type.list.list'('type.semanticPrimitives.v')),'const.semanticPrimitives.v_to_list_1'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27))) = s('type.option.option'('type.list.list'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | (?[V_27vs_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Vlength_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c39_7c_27))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | (?[V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27, V_27ws_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Alength_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27ws_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27ws_27))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) | ?[V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27, V_27lnum_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27, V_27ws_27, V_27t_7c39_7c_27, V_27ws_7c39_7c_27, V_27s_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))) & (s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(V_27A_27),V_27t_27),s('type.num.num',V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))) = s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(V_27A_27),V_27t_7c39_7c_27),s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_7c39_7c_27))) & (s('type.option.option'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.semanticPrimitives.store_assign_3'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_7c39_7c_27))),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.option.SOME_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))))))))))))))))))))) | ?[V_27v2_27, V_27v_7c49_7c4_27]: (s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_7c48_7c_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v2_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c4_27))) & ((s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c4_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') & (?[V_27op_7c39_7c_27, V_27n2_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27op_7c39_7c_27))) & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27n2_27))))) & ((((~ (s('type.ast.opn',V_27op_7c39_7c_27) = s('type.ast.opn','const.ast.Divide_0')) & ~ (s('type.ast.opn',V_27op_7c39_7c_27) = s('type.ast.opn','const.ast.Modulo_0'))) | ~ (s('type.integer.int',V_27n2_27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ?[V_27n_7c49_7c_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27n_7c49_7c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) & (((s('type.ast.opn',V_27op_7c39_7c_27) = s('type.ast.opn','const.ast.Divide_0') | s('type.ast.opn',V_27op_7c39_7c_27) = s('type.ast.opn','const.ast.Modulo_0')) & s('type.integer.int',V_27n2_27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | ?[V_27n_7c49_7c_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27n_7c49_7c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.semanticPrimitives.opn_lookup_3'(s('type.ast.opn',V_27op_7c39_7c_27),s('type.integer.int',V_27n_7c49_7c_27),s('type.integer.int',V_27n2_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))))) | (?[V_27op_7c39_7c_27, V_27n2_7c39_7c_27, V_27n_7c49_7c_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',V_27op_7c39_7c_27))) & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27n2_7c39_7c_27))))) & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27n_7c49_7c_7c39_7c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Boolv_1'(s('bool','const.semanticPrimitives.opb_lookup_3'(s('type.ast.opb',V_27op_7c39_7c_27),s('type.integer.int',V_27n_7c49_7c_7c39_7c_27),s('type.integer.int',V_27n2_7c39_7c_27))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) | (?[V_27v4_7c48_7c8_27, V_27op_7c39_7c_7c39_7c_27, V_27v556_27, V_27v578_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',V_27v4_7c48_7c8_27),s('type.ast.opw',V_27op_7c39_7c_7c39_7c_27))) & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v556_27))) & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27v578_27))) & (?[V_27w_7c49_7c_27, V_27w2_27]: (s('type.ast.word_size',V_27v4_7c48_7c8_27) = s('type.ast.word_size','const.ast.W8_0') & (s('type.ast.lit',V_27v578_27) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c49_7c_27))) & (s('type.ast.lit',V_27v556_27) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w2_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.semanticPrimitives.opw8_lookup_3'(s('type.ast.opw',V_27op_7c39_7c_7c39_7c_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c49_7c_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w2_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) | ?[V_27w_7c49_7c_7c39_7c_27, V_27w2_7c39_7c_27]: (s('type.ast.word_size',V_27v4_7c48_7c8_27) = s('type.ast.word_size','const.ast.W64_0') & (s('type.ast.lit',V_27v578_27) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c49_7c_7c39_7c_27))) & (s('type.ast.lit',V_27v556_27) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w2_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.semanticPrimitives.opw64_lookup_3'(s('type.ast.opw',V_27op_7c39_7c_7c39_7c_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_7c49_7c_7c39_7c_27),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w2_7c39_7c_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))))))) | (?[V_27b_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Equality_0') & (s('type.semanticPrimitives.eq_result','const.semanticPrimitives.do_eq_2'(s('type.semanticPrimitives.v',V_27v_7c49_7c_27),s('type.semanticPrimitives.v',V_27v2_27))) = s('type.semanticPrimitives.eq_result','const.semanticPrimitives.Eq_val_1'(s('bool',V_27b_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Boolv_1'(s('bool',V_27b_27))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) | (?[V_27lnum_27, V_27s_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Opassign_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_27))) & (s('type.option.option'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.semanticPrimitives.store_assign_3'(s('type.num.num',V_27lnum_27),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',V_27v2_27))),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.option.SOME_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) | (?[V_27w_7c39_7c_7c39_7c_27, V_27n_7c39_7c_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Aw8alloc_0') & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_7c39_7c_27))))) & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27n_7c39_7c_7c39_7c_27))))) & ((~ (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27n_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) & (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27n_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ?[V_27s_7c39_7c_27, V_27lnum_27]: (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.num.num'),'const.semanticPrimitives.store_alloc_2'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.rich_list.REPLICATE_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27n_7c39_7c_7c39_7c_27))))),s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_7c39_7c_27))))),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.num.num',V_27lnum_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_27))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))))))) | (?[V_27i_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Aw8sub_0') & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_27))))) & ((~ (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ?[V_27lnum_7c39_7c_27, V_27ws_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_7c39_7c_27))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) & (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ?[V_27lnum_7c39_7c_27, V_27ws_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_7c39_7c_27))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))) & ((~ (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) & (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27)))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'const.list.EL_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_27))))),s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))))))))) | (?[V_27op_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27, V_27c2_27, V_27c_7c49_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',V_27op_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c2_27))))) & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_7c49_7c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Boolv_1'(s('bool','const.semanticPrimitives.opb_lookup_3'(s('type.ast.opb',V_27op_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_7c49_7c_27))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c2_27))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) | (?[V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Vsub_0') & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))) & ((~ (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ?[V_27vs_7c48_7c_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))) & (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ?[V_27vs_7c48_7c_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))) & ((~ (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) & (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27)))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.list.EL_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))))))) | (?[V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Aalloc_0') & (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))) & ((~ (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) & (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ?[V_27s_7c39_7c_27, V_27lnum_27]: (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.num.num'),'const.semanticPrimitives.store_alloc_2'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),'const.rich_list.REPLICATE_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27n_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))),s('type.semanticPrimitives.v',V_27v2_27))))),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.num.num',V_27lnum_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_27))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))))) | ?[V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Asub_0') & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))) & ((~ (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ?[V_27lnum_7c39_7c_7c39_7c_7c39_7c_27, V_27vs_7c48_7c_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) & (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ?[V_27lnum_7c39_7c_7c39_7c_7c39_7c_27, V_27vs_7c48_7c_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_7c39_7c_27))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))) & ((~ (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) & (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27)))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.list.EL_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27))))),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))))))))))))))))))) | ?[V_27v_7c39_7c_27, V_27v394_27, V_27i_7c39_7c_27]: (s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c4_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v394_27))) & (s('type.semanticPrimitives.v',V_27v2_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_7c39_7c_27))))) & ((~ (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ?[V_27lnum_7c39_7c_7c39_7c_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_27))) & (s('type.list.list'('type.semanticPrimitives.v'),V_27v394_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') & (?[V_27w_7c39_7c_7c39_7c_7c39_7c_27, V_27ws_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Aw8update_0') & (s('type.semanticPrimitives.v',V_27v_7c39_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_7c39_7c_7c39_7c_27))))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))))) | ?[V_27vs_7c48_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Aupdate_0') & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))))))) & (p(s('bool','const.integer.int_lt_2'(s('type.integer.int',V_27i_7c39_7c_27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ?[V_27lnum_7c39_7c_7c39_7c_27]: (s('type.semanticPrimitives.v',V_27v_7c49_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_27))) & (s('type.list.list'('type.semanticPrimitives.v'),V_27v394_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') & (?[V_27w_7c39_7c_7c39_7c_7c39_7c_27, V_27ws_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Aw8update_0') & (s('type.semanticPrimitives.v',V_27v_7c39_7c_27) = s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_7c39_7c_7c39_7c_27))))) & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))) & ((~ (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) & (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27)))))) | ?[V_27s_7c39_7c_27]: (s('type.option.option'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.semanticPrimitives.store_assign_3'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_27),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.LUPDATE_3'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_7c39_7c_7c39_7c_7c39_7c_27),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_27))))),s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27ws_27))))),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.option.SOME_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))))))) | ?[V_27vs_7c48_7c_27]: (s('type.ast.op',V_27op_27) = s('type.ast.op','const.ast.Aupdate_0') & (s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.store_lookup_2'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.option.SOME_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))) & ((~ (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))))) | (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.prim_exn_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27))) & (p(s('bool','const.arithmetic.>=_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27)))))) | ?[V_27s_7c39_7c_27]: (s('type.option.option'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.semanticPrimitives.store_assign_3'(s('type.num.num',V_27lnum_7c39_7c_7c39_7c_27),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),'const.list.LUPDATE_3'(s('type.semanticPrimitives.v',V_27v_7c39_7c_27),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',V_27i_7c39_7c_27))))),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_7c48_7c_27))))),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_27))) = s('type.option.option'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.option.SOME_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27))) & (s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),V_27s_7c39_7c_27),s('type.ffi.ffi_state'(V_27A_27),V_27t_27))) = s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),V_27st_7c39_7c_27) & s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) = s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),V_27v_27)))))))))))))))))))).
fof('thm.evalProps.do_opapp_cases', axiom, ![V_27env_7c39_7c_27, V_27vs_27, V_27v_27]: (s('type.option.option'('type.pair.prod'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.ast.exp')),'const.semanticPrimitives.do_opapp_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27))) = s('type.option.option'('type.pair.prod'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'type.ast.exp'),'const.pair.,_2'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_27),s('type.ast.exp',V_27v_27))))) <=> (?[V_27v2_27, V_27env_7c39_7c_7c39_7c_27, V_27n_27, V_27e_27]: (s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_7c39_7c_27),s('type.list.list'('type.string.char'),V_27n_27),s('type.ast.exp',V_27e_27))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v2_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) & (s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_27) = s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.semanticPrimitives.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27n_27),s('type.semanticPrimitives.v',V_27v2_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.semanticPrimitives.environment_v_1'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_7c39_7c_27))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_7c39_7c_27))) & s('type.ast.exp',V_27v_27) = s('type.ast.exp',V_27e_27))) | ?[V_27v2_27, V_27env_7c39_7c_7c39_7c_27, V_27funs_27, V_27n_7c39_7c_27, V_27n_7c39_7c_7c39_7c_27, V_27e_27]: (s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.list.list'('type.string.char'),V_27n_7c39_7c_27))),s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',V_27v2_27),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'))))) & (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.semanticPrimitives.find_recfun_2'(s('type.list.list'('type.string.char'),V_27n_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27n_7c39_7c_7c39_7c_27),s('type.ast.exp',V_27e_27))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.list.list'('type.string.char')),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.string.char'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.list.list'('type.string.char'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.list.list'('type.string.char'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.string.char'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.list.list'('type.string.char')))),'_dst_x00_0'))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27)))))) & (s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_27) = s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.semanticPrimitives.environment_v_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27n_7c39_7c_7c39_7c_27),s('type.semanticPrimitives.v',V_27v2_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.semanticPrimitives.build_rec_env_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.semanticPrimitives.environment_v_1'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_7c39_7c_27))))))))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_7c39_7c_7c39_7c_27))) & s('type.ast.exp',V_27v_27) = s('type.ast.exp',V_27e_27)))))))).
fof('_dst_x000x100x100_ax', axiom, ![VA2,VA3,VA,VA4,VA5,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x100x100_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA1,VA4),V__0),s('fun'(VA1,VA5),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x00_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,'happ'(s('fun'(VA1,VA4),V__0),s(VA1,V__z))),s(VA5,'happ'(s('fun'(VA1,VA5),V__1),s(VA1,V__z)))))).
fof('thm.evalProps.evalProps_46_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27env_7c39_7c_27, V_27funs_27, V_27env_27, V_27funs_7c39_7c_27]: s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.FOLDR_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27)),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27)),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))))),'_dst_x0x1_2'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))))),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'fun'(V_27B_27,'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))))),'_dst_x000x100_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'_dst_x1x1_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.semanticPrimitives.v','type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.semanticPrimitives.Recclosure_2'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_7c39_7c_27))))))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27))),V_27funs_27))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27)),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27)),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'_dst_x0x1_2'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'fun'(V_27B_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'_dst_x000x100x100_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.semanticPrimitives.v','type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.semanticPrimitives.Recclosure_2'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_7c39_7c_27))))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,V_27B_27))),V_27funs_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27)))).
fof('thm.evalProps.build_rec_env_merge', axiom, ![V_27A_27]: ![V_27funs_27, V_27funs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27]: s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.semanticPrimitives.build_rec_env_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'_dst_x000x100x100_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.semanticPrimitives.v','type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.semanticPrimitives.Recclosure_2'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27env_7c39_7c_27)))).
fof('thm.evalProps.do_con_check_build_conv', axiom, ![V_27A_27]: ![V_27tenvC_27, V_27cn_27, V_27vs_27, V_27l_27]: (p(s('bool','const.semanticPrimitives.do_con_check_3'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,'type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,'type.semanticPrimitives.tid_or_exn')))),V_27tenvC_27),s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s(V_27A_27,V_27l_27)))) => ?[V_27v_27]: s('type.option.option'('type.semanticPrimitives.v'),'const.semanticPrimitives.build_conv_3'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,'type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'(V_27A_27,'type.semanticPrimitives.tid_or_exn')))),V_27tenvC_27),s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27cn_27),s('type.list.list'('type.semanticPrimitives.v'),V_27vs_27))) = s('type.option.option'('type.semanticPrimitives.v'),'const.option.SOME_1'(s('type.semanticPrimitives.v',V_27v_27))))).
fof('thm.evalProps.merge_alist_mod_env_empty', axiom, ![V_27A_27,V_27B_27]: ![V_27mod__env_27]: s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),'const.list.NIL_0'),s('type.list.list'(V_27B_27),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),V_27mod__env_27))) = s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),V_27mod__env_27)).
fof('thm.evalProps.merge_alist_mod_env_assoc', axiom, ![V_27A_27,V_27B_27]: ![V_27env_7c49_7c_27, V_27env2_27, V_27env3_27]: s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),V_27env_7c49_7c_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),V_27env2_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),V_27env3_27))))) = s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),V_27env_7c49_7c_27),s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),V_27env2_27))),s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27B_27)),V_27env3_27)))).
fof('thm.evalProps.merge_alist_mod_env_empty_assoc', axiom, ![V_27B_27,V_27A_27]: ![V_27env_7c49_7c_27, V_27env2_27, V_27env3_27]: s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27A_27)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27A_27)),'const.pair.,_2'(s('type.list.list'(V_27B_27),'const.list.NIL_0'),s('type.list.list'(V_27A_27),V_27env_7c49_7c_27))),s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27A_27)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27A_27)),'const.pair.,_2'(s('type.list.list'(V_27B_27),'const.list.NIL_0'),s('type.list.list'(V_27A_27),V_27env2_27))),s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27A_27)),V_27env3_27))))) = s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27A_27)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27A_27)),'const.pair.,_2'(s('type.list.list'(V_27B_27),'const.list.NIL_0'),s('type.list.list'(V_27A_27),'const.list.APPEND_2'(s('type.list.list'(V_27A_27),V_27env_7c49_7c_27),s('type.list.list'(V_27A_27),V_27env2_27))))),s('type.pair.prod'('type.list.list'(V_27B_27),'type.list.list'(V_27A_27)),V_27env3_27)))).
fof('thm.evalProps.same_ctor_and_same_tid', axiom, ![V_27A_27]: ![V_27cn_7c49_7c_27, V_27tn_7c49_7c_27, V_27cn2_27, V_27tn2_27]: ((p(s('bool','const.semanticPrimitives.same_tid_2'(s('type.semanticPrimitives.tid_or_exn',V_27tn_7c49_7c_27),s('type.semanticPrimitives.tid_or_exn',V_27tn2_27)))) & p(s('bool','const.semanticPrimitives.same_ctor_2'(s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s(V_27A_27,V_27cn_7c49_7c_27),s('type.semanticPrimitives.tid_or_exn',V_27tn_7c49_7c_27))),s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s(V_27A_27,V_27cn2_27),s('type.semanticPrimitives.tid_or_exn',V_27tn2_27))))))) => (s('type.semanticPrimitives.tid_or_exn',V_27tn_7c49_7c_27) = s('type.semanticPrimitives.tid_or_exn',V_27tn2_27) & s(V_27A_27,V_27cn_7c49_7c_27) = s(V_27A_27,V_27cn2_27)))).
fof('thm.evalProps.same_tid_refl', axiom, ![V_27t_27]: p(s('bool','const.semanticPrimitives.same_tid_2'(s('type.semanticPrimitives.tid_or_exn',V_27t_27),s('type.semanticPrimitives.tid_or_exn',V_27t_27))))).
fof('thm.evalProps.same_tid_sym', axiom, ![V_27tn_7c49_7c_27, V_27tn2_27]: s('bool','const.semanticPrimitives.same_tid_2'(s('type.semanticPrimitives.tid_or_exn',V_27tn_7c49_7c_27),s('type.semanticPrimitives.tid_or_exn',V_27tn2_27))) = s('bool','const.semanticPrimitives.same_tid_2'(s('type.semanticPrimitives.tid_or_exn',V_27tn2_27),s('type.semanticPrimitives.tid_or_exn',V_27tn_7c49_7c_27)))).
fof('thm.evalProps.same_tid_diff_ctor', axiom, ![V_27A_27]: ![V_27cn_7c49_7c_27, V_27cn2_27, V_27t_7c49_7c_27, V_27t2_27]: ((p(s('bool','const.semanticPrimitives.same_tid_2'(s('type.semanticPrimitives.tid_or_exn',V_27t_7c49_7c_27),s('type.semanticPrimitives.tid_or_exn',V_27t2_27)))) & ~ (p(s('bool','const.semanticPrimitives.same_ctor_2'(s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s(V_27A_27,V_27cn_7c49_7c_27),s('type.semanticPrimitives.tid_or_exn',V_27t_7c49_7c_27))),s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s(V_27A_27,V_27cn2_27),s('type.semanticPrimitives.tid_or_exn',V_27t2_27)))))))) => (~ (s(V_27A_27,V_27cn_7c49_7c_27) = s(V_27A_27,V_27cn2_27)) | (s(V_27A_27,V_27cn_7c49_7c_27) = s(V_27A_27,V_27cn2_27) & ?[V_27mn_7c49_7c_27, V_27mn2_27]: (s('type.semanticPrimitives.tid_or_exn',V_27t_7c49_7c_27) = s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27mn_7c49_7c_27))) & (s('type.semanticPrimitives.tid_or_exn',V_27t2_27) = s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27mn2_27))) & ~ (s('type.ast.id'('type.list.list'('type.string.char')),V_27mn_7c49_7c_27) = s('type.ast.id'('type.list.list'('type.string.char')),V_27mn2_27)))))))).
fof('thm.evalProps.same_tid_tid|split|0', axiom, ![V_27y_27, V_27x_27]: (p(s('bool','const.semanticPrimitives.same_tid_2'(s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27x_27))),s('type.semanticPrimitives.tid_or_exn',V_27y_27)))) <=> s('type.semanticPrimitives.tid_or_exn',V_27y_27) = s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27x_27))))).
fof('thm.evalProps.same_tid_tid|split|1', axiom, ![V_27y_27, V_27x_27]: (p(s('bool','const.semanticPrimitives.same_tid_2'(s('type.semanticPrimitives.tid_or_exn',V_27y_27),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27x_27)))))) <=> s('type.semanticPrimitives.tid_or_exn',V_27y_27) = s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27x_27))))).
fof('thm.evalProps.build_tdefs_cons|split|0', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27tvs_27, V_27tn_27, V_27ctors_27, V_27tds_27, V_27mn_27]: s('type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.semanticPrimitives.build_tdefs_2'(s('type.option.option'('type.list.list'('type.string.char')),V_27mn_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)))))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27))))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)))),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)))))),'happ'(s('fun'(V_27A_27,'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)))),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27))))))),'const.pair.,_0'),s(V_27A_27,V_27tvs_27))),s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)))),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27))))),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)))))),'const.pair.,_0'),s('type.list.list'('type.string.char'),V_27tn_27))),s('type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27))),V_27ctors_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)))))),V_27tds_27))))) = s('type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.semanticPrimitives.build_tdefs_2'(s('type.option.option'('type.list.list'('type.string.char')),V_27mn_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)))))),V_27tds_27))),s('type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27)),'type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.pair.UNCURRY_1'(s('fun'(V_27B_27,'fun'('type.list.list'(V_27C_27),'type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'_dst_x00x10x01_3'(s('fun'(V_27B_27,'fun'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'const.pair.,_0'),s('fun'(V_27B_27,V_27B_27),'_i_0_0'),s('fun'('type.list.list'(V_27C_27),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.semanticPrimitives.tid_or_exn','type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.pair.,_0'),s('fun'('type.list.list'(V_27C_27),'type.num.num'),'const.list.LENGTH_0'),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),V_27mn_27),s('type.list.list'('type.string.char'),V_27tn_27))))))))))),s('type.list.list'('type.pair.prod'(V_27B_27,'type.list.list'(V_27C_27))),V_27ctors_27)))))))).
fof('thm.evalProps.build_tdefs_cons|split|1', axiom, ![V_27E_27,V_27F_27,V_27D_27]: ![V_27mn_27]: s('type.list.list'('type.pair.prod'(V_27D_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.semanticPrimitives.build_tdefs_2'(s('type.option.option'('type.list.list'('type.string.char')),V_27mn_27),s('type.list.list'('type.pair.prod'(V_27E_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27D_27,'type.list.list'(V_27F_27)))))),'const.list.NIL_0'))) = s('type.list.list'('type.pair.prod'(V_27D_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.list.NIL_0')).
fof('thm.evalProps.MAP_FST_build_tdefs', axiom, ![V_27B_27,V_27A_27,V_27C_27]: ![V_27mn_27, V_27ls_27]: s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),V_27A_27),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.semanticPrimitives.build_tdefs_2'(s('type.option.option'('type.list.list'('type.string.char')),V_27mn_27),s('type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27)))))),V_27ls_27))))))) = s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27)),V_27A_27),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27)))),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27))))),'type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27)))),'const.combin.o_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27)))),'type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27)))),'const.pair.SND_0'),s('fun'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27))))),'const.pair.SND_0'))),s('type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,'type.list.list'(V_27C_27)))))),V_27ls_27)))))))))).
fof('thm.evalProps.check_dup_ctors_cons', axiom, ![V_27A_27,V_27B_27,V_27C_27,V_27D_27]: ![V_27tvs_27, V_27ts_27, V_27ctors_27, V_27tds_27]: (p(s('bool','const.semanticPrimitives.check_dup_ctors_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'(V_27C_27,V_27D_27))))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'(V_27C_27,V_27D_27)))),'const.pair.,_2'(s(V_27A_27,V_27tvs_27),s('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'(V_27C_27,V_27D_27))),'const.pair.,_2'(s(V_27B_27,V_27ts_27),s('type.list.list'('type.pair.prod'(V_27C_27,V_27D_27)),V_27ctors_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'(V_27C_27,V_27D_27))))),V_27tds_27)))))) => p(s('bool','const.semanticPrimitives.check_dup_ctors_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'(V_27C_27,V_27D_27))))),V_27tds_27)))))).
fof('thm.evalProps.map_error_result_def|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27f_27, V_27e_27]: s('type.semanticPrimitives.error_result'(V_27A_27),'const.evalProps.map_error_result_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27e_27))))) = s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,'happ'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s(V_27B_27,V_27e_27)))))).
fof('thm.evalProps.map_error_result_def|split|1', axiom, ![V_27B_27,V_27A_27]: ![V_27f_27, V_27a_27]: s('type.semanticPrimitives.error_result'(V_27A_27),'const.evalProps.map_error_result_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))) = s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))).
fof('thm.evalProps.map_error_result_Rtype_error', axiom, ![V_27A_27,V_27B_27]: ![V_27f_27, V_27e_27, V_27a_27]: (s('type.semanticPrimitives.error_result'(V_27A_27),'const.evalProps.map_error_result_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_27))) = s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))) <=> s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_27) = s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))).
fof('thm.evalProps.map_error_result_I', axiom, ![V_27A_27]: ![V_27e_27]: s('type.semanticPrimitives.error_result'(V_27A_27),'const.evalProps.map_error_result_2'(s('fun'(V_27A_27,V_27A_27),'const.combin.I_0'),s('type.semanticPrimitives.error_result'(V_27A_27),V_27e_27))) = s('type.semanticPrimitives.error_result'(V_27A_27),V_27e_27)).
fof('thm.evalProps.map_result_def|split|0', axiom, ![V_27D_27,V_27B_27,V_27A_27,V_27C_27]: ![V_27f_7c49_7c_27, V_27f2_27, V_27v_27]: s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.evalProps.map_result_3'(s('fun'(V_27C_27,V_27A_27),V_27f_7c49_7c_27),s('fun'(V_27D_27,V_27B_27),V_27f2_27),s('type.semanticPrimitives.result'(V_27C_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27C_27,V_27v_27))))) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,'happ'(s('fun'(V_27C_27,V_27A_27),V_27f_7c49_7c_27),s(V_27C_27,V_27v_27)))))).
fof('thm.evalProps.map_result_def|split|1', axiom, ![V_27C_27,V_27A_27,V_27B_27,V_27D_27]: ![V_27f_7c49_7c_27, V_27f2_27, V_27e_27]: s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.evalProps.map_result_3'(s('fun'(V_27C_27,V_27A_27),V_27f_7c49_7c_27),s('fun'(V_27D_27,V_27B_27),V_27f2_27),s('type.semanticPrimitives.result'(V_27C_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27e_27))))) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),'const.evalProps.map_error_result_2'(s('fun'(V_27D_27,V_27B_27),V_27f2_27),s('type.semanticPrimitives.error_result'(V_27D_27),V_27e_27)))))).
fof('thm.evalProps.map_result_Rval', axiom, ![V_27B_27,V_27D_27,V_27A_27,V_27C_27]: ![V_27x_27, V_27f2_27, V_27f_7c49_7c_27, V_27e_27]: (s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.evalProps.map_result_3'(s('fun'(V_27C_27,V_27A_27),V_27f_7c49_7c_27),s('fun'(V_27D_27,V_27B_27),V_27f2_27),s('type.semanticPrimitives.result'(V_27C_27,V_27D_27),V_27e_27))) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27x_27))) <=> ?[V_27y_27]: (s('type.semanticPrimitives.result'(V_27C_27,V_27D_27),V_27e_27) = s('type.semanticPrimitives.result'(V_27C_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27C_27,V_27y_27))) & s(V_27A_27,V_27x_27) = s(V_27A_27,'happ'(s('fun'(V_27C_27,V_27A_27),V_27f_7c49_7c_27),s(V_27C_27,V_27y_27)))))).
fof('thm.evalProps.map_result_Rerr', axiom, ![V_27A_27,V_27C_27,V_27D_27,V_27B_27]: ![V_27f2_27, V_27f_7c49_7c_27, V_27e_7c39_7c_27, V_27e_27]: (s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.evalProps.map_result_3'(s('fun'(V_27C_27,V_27A_27),V_27f_7c49_7c_27),s('fun'(V_27D_27,V_27B_27),V_27f2_27),s('type.semanticPrimitives.result'(V_27C_27,V_27D_27),V_27e_27))) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_7c39_7c_27))) <=> ?[V_27a_27]: (s('type.semanticPrimitives.result'(V_27C_27,V_27D_27),V_27e_27) = s('type.semanticPrimitives.result'(V_27C_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27a_27))) & s('type.semanticPrimitives.error_result'(V_27B_27),'const.evalProps.map_error_result_2'(s('fun'(V_27D_27,V_27B_27),V_27f2_27),s('type.semanticPrimitives.error_result'(V_27D_27),V_27a_27))) = s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_7c39_7c_27)))).
fof('thm.evalProps.evalProps_67_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: (((?[V_27R_27, V_27v_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v2_27))))))) | ?[V_27v3_27, V_27v9_27, V_27v_7c49_7c4_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v9_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c49_7c4_27)))))))) | (?[V_27v3_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c7_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c49_7c_7c48_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v_7c49_7c7_27))))))) | ?[V_27v_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_7c49_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a2_27))))))))) => (?[V_27R_27, V_27v_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v2_27))))))) | (?[V_27v_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_7c49_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a2_27))))))) | (?[V_27v3_27, V_27v9_27, V_27v_7c49_7c4_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v9_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c49_7c4_27))))))) | ?[V_27v3_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c7_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('type.pair.prod'('type.semanticPrimitives.error_result'(V_27A_27),'type.semanticPrimitives.error_result'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c49_7c_7c48_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v_7c49_7c7_27)))))))))))).
fof('thm.evalProps.exc_rel_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27]: ((![V_27R_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v_7c49_7c_27))))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v2_27)))))) & (![V_27v_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27))),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_7c49_7c_27))))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a2_27)))))) & (![V_27v3_27, V_27v9_27, V_27v_7c49_7c4_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27))),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v9_27))))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c49_7c4_27)))))) & ![V_27v3_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c7_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27))),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c49_7c_7c48_7c_27))))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v_7c49_7c7_27))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.error_result'(V_27A_27),'fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_27))),s('type.semanticPrimitives.error_result'(V_27A_27),V_27v_7c49_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),V_27v2_27)))))).
fof('thm.evalProps.exc_rel_def|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27v2_27, V_27v_7c49_7c_27, V_27R_27]: s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v2_27))))) = s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s(V_27A_27,V_27v_7c49_7c_27))),s(V_27B_27,V_27v2_27)))).
fof('thm.evalProps.exc_rel_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27v_7c48_7c_27, V_27a2_27, V_27a_7c49_7c_27]: (p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_7c48_7c_27),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_7c49_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a2_27)))))) <=> s('type.semanticPrimitives.abort',V_27a_7c49_7c_27) = s('type.semanticPrimitives.abort',V_27a2_27))).
fof('thm.evalProps.exc_rel_def|split|2', axiom, ![V_27A_27,V_27B_27]: ![V_27v9_27, V_27v3_27, V_27v_7c49_7c4_27]: s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v9_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c49_7c4_27))))) = s('bool','F_0')).
fof('thm.evalProps.exc_rel_def|split|3', axiom, ![V_27A_27,V_27B_27]: ![V_27v3_27, V_27v_7c49_7c7_27, V_27v_7c49_7c_7c48_7c_27]: s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c49_7c_7c48_7c_27))),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v_7c49_7c7_27))))) = s('bool','F_0')).
fof('thm.evalProps.exc_rel_raise|49|', axiom, ![V_27A_27,V_27B_27]: ![V_27v_27, V_27e_27, V_27R_27]: (p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v_27))),s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_27)))) <=> ?[V_27v_7c39_7c_27]: (s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_27) = s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v_7c39_7c_27))) & p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s(V_27A_27,V_27v_27))),s(V_27B_27,V_27v_7c39_7c_27))))))).
fof('thm.evalProps.exc_rel_raise2', axiom, ![V_27A_27,V_27B_27]: ![V_27v_27, V_27e_27, V_27R_27]: (p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27e_27),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rraise_1'(s(V_27B_27,V_27v_27)))))) <=> ?[V_27v_7c39_7c_27]: (s('type.semanticPrimitives.error_result'(V_27A_27),V_27e_27) = s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27v_7c39_7c_27))) & p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s(V_27A_27,V_27v_7c39_7c_27))),s(V_27B_27,V_27v_27))))))).
fof('thm.evalProps.exc_rel_type_error|49|', axiom, ![V_27A_27,V_27B_27]: ![V_27e_27, V_27a_27, V_27R_27]: (p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))),s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_27)))) <=> s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_27) = s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))).
fof('thm.evalProps.exc_rel_type_error2', axiom, ![V_27B_27,V_27A_27]: ![V_27e_27, V_27a_27, V_27R_27]: (p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27e_27),s('type.semanticPrimitives.error_result'(V_27B_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))))) <=> s('type.semanticPrimitives.error_result'(V_27A_27),V_27e_27) = s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))).
fof('thm.evalProps.exc_rel_refl', axiom, ![V_27A_27]: ![V_27R_27]: (![V_27x_27]: p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s(V_27A_27,V_27x_27))),s(V_27A_27,V_27x_27)))) => ![V_27x_27]: p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27x_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27x_27)))))).
fof('thm.evalProps.exc_rel_trans', axiom, ![V_27A_27]: ![V_27R_27]: (![V_27x_27, V_27y_27, V_27z_27]: ((p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s(V_27A_27,V_27x_27))),s(V_27A_27,V_27y_27)))) & p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s(V_27A_27,V_27y_27))),s(V_27A_27,V_27z_27))))) => p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s(V_27A_27,V_27x_27))),s(V_27A_27,V_27z_27))))) => ![V_27x_27, V_27y_27, V_27z_27]: ((p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27x_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27y_27)))) & p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27y_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27z_27))))) => p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27x_27),s('type.semanticPrimitives.error_result'(V_27A_27),V_27z_27))))))).
fof('thm.evalProps.evalProps_78_prove_ltb', axiom, ![V_27A_27,V_27C_27,V_27D_27,V_27B_27]: ![V_27a_27]: (((?[V_27R_7c49_7c_27, V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s('type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27))),'const.pair.,_2'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v_7c48_7c_27),s('type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v2_27))))))))) | ?[V_27v4_27, V_27v5_27, V_27v_7c49_7c3_27, V_27v_7c49_7c8_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v4_27),s('type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27))),'const.pair.,_2'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v5_27),s('type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c49_7c3_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27v_7c49_7c8_27)))))))))) | (?[V_27v4_27, V_27v5_27, V_27v_7c49_7c4_27, V_27v2_7c49_7c_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v4_27),s('type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27))),'const.pair.,_2'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v5_27),s('type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27v_7c49_7c4_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v2_7c49_7c_27))))))))) | ?[V_27v3_27, V_27R2_27, V_27e_7c49_7c_27, V_27e2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27))),'const.pair.,_2'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_7c49_7c_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27e2_27))))))))))) => (?[V_27R_7c49_7c_27, V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s('type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27))),'const.pair.,_2'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v_7c48_7c_27),s('type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v2_27))))))))) | (?[V_27v3_27, V_27R2_27, V_27e_7c49_7c_27, V_27e2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27))),'const.pair.,_2'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_7c49_7c_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27e2_27))))))))) | (?[V_27v4_27, V_27v5_27, V_27v_7c49_7c3_27, V_27v_7c49_7c8_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v4_27),s('type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27))),'const.pair.,_2'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v5_27),s('type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c49_7c3_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27v_7c49_7c8_27))))))))) | ?[V_27v4_27, V_27v5_27, V_27v_7c49_7c4_27, V_27v2_7c49_7c_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v4_27),s('type.pair.prod'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27))),'const.pair.,_2'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v5_27),s('type.pair.prod'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'type.semanticPrimitives.result'(V_27B_27,V_27D_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27v_7c49_7c4_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v2_7c49_7c_27)))))))))))))).
fof('thm.evalProps.result_rel_ind', axiom, ![V_27A_27,V_27C_27,V_27B_27,V_27D_27]: ![V_27P_27]: ((![V_27R_7c49_7c_27, V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')),'happ'(s('fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'))),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27))),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v_7c48_7c_27))),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c49_7c_27))))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v2_27)))))) & (![V_27v3_27, V_27R2_27, V_27e_7c49_7c_27, V_27e2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')),'happ'(s('fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'))),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27))),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27))),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_7c49_7c_27))))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27e2_27)))))) & (![V_27v4_27, V_27v5_27, V_27v_7c49_7c3_27, V_27v_7c49_7c8_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')),'happ'(s('fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'))),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v4_27))),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v5_27))),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c49_7c3_27))))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27v_7c49_7c8_27)))))) & ![V_27v4_27, V_27v5_27, V_27v_7c49_7c4_27, V_27v2_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')),'happ'(s('fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'))),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v4_27))),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v5_27))),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27v_7c49_7c4_27))))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v2_7c49_7c_27))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')),'happ'(s('fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool'))),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('fun'(V_27C_27,'fun'(V_27D_27,'bool')),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'fun'('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'bool')))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_27))),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v_7c49_7c_27))),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),V_27v2_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),V_27v3_27)))))).
fof('thm.evalProps.result_rel_def|split|0', axiom, ![V_27C_27,V_27D_27,V_27A_27,V_27B_27]: ![V_27v2_27, V_27v_7c49_7c_27, V_27v_7c48_7c_27, V_27R_7c49_7c_27]: s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v_7c48_7c_27),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v2_27))))) = s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c_27))),s(V_27B_27,V_27v2_27)))).
fof('thm.evalProps.result_rel_def|split|1', axiom, ![V_27A_27,V_27B_27,V_27C_27,V_27D_27]: ![V_27v3_27, V_27e2_27, V_27e_7c49_7c_27, V_27R2_27]: s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v3_27),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_7c49_7c_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27e2_27))))) = s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_7c49_7c_27),s('type.semanticPrimitives.error_result'(V_27D_27),V_27e2_27)))).
fof('thm.evalProps.result_rel_def|split|2', axiom, ![V_27C_27,V_27A_27,V_27B_27,V_27D_27]: ![V_27v5_27, V_27v4_27, V_27v_7c49_7c8_27, V_27v_7c49_7c3_27]: s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v4_27),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v5_27),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c49_7c3_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27v_7c49_7c8_27))))) = s('bool','F_0')).
fof('thm.evalProps.result_rel_def|split|3', axiom, ![V_27A_27,V_27C_27,V_27D_27,V_27B_27]: ![V_27v5_27, V_27v4_27, V_27v2_7c49_7c_27, V_27v_7c49_7c4_27]: s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v4_27),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27v5_27),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27v_7c49_7c4_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v2_7c49_7c_27))))) = s('bool','F_0')).
fof('thm.evalProps.result_rel_Rval', axiom, ![V_27C_27,V_27D_27,V_27A_27,V_27B_27]: ![V_27v_27, V_27r_27, V_27R2_27, V_27R_7c49_7c_27]: (p(s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),V_27r_27)))) <=> ?[V_27v_7c39_7c_27]: (s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),V_27r_27) = s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rval_1'(s(V_27B_27,V_27v_7c39_7c_27))) & p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s(V_27A_27,V_27v_27))),s(V_27B_27,V_27v_7c39_7c_27))))))).
fof('thm.evalProps.result_rel_Rerr|49|', axiom, ![V_27A_27,V_27B_27,V_27C_27,V_27D_27]: ![V_27r_27, V_27e_27, V_27R2_27, V_27R_7c49_7c_27]: (p(s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_27))),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),V_27r_27)))) <=> ?[V_27e_7c39_7c_27]: (s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),V_27r_27) = s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27e_7c39_7c_27))) & p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_27),s('type.semanticPrimitives.error_result'(V_27D_27),V_27e_7c39_7c_27))))))).
fof('thm.evalProps.result_rel_Rerr2', axiom, ![V_27B_27,V_27A_27,V_27C_27,V_27D_27]: ![V_27r_27, V_27e_27, V_27R2_27, V_27R_7c49_7c_27]: (p(s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),V_27r_27),s('type.semanticPrimitives.result'(V_27B_27,V_27D_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27D_27),V_27e_27)))))) <=> ?[V_27e_7c39_7c_27]: (s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),V_27r_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27C_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_7c39_7c_27))) & p(s('bool','const.evalProps.exc_rel_3'(s('fun'(V_27C_27,'fun'(V_27D_27,'bool')),V_27R2_27),s('type.semanticPrimitives.error_result'(V_27C_27),V_27e_7c39_7c_27),s('type.semanticPrimitives.error_result'(V_27D_27),V_27e_27))))))).
fof('thm.evalProps.result_rel_refl', axiom, ![V_27A_27,V_27B_27]: ![V_27R2_27, V_27R_7c49_7c_27]: ((![V_27x_27]: p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_7c49_7c_27),s(V_27A_27,V_27x_27))),s(V_27A_27,V_27x_27)))) & ![V_27x_27]: p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),V_27R2_27),s(V_27B_27,V_27x_27))),s(V_27B_27,V_27x_27))))) => ![V_27x_27]: p(s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),V_27R2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27x_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27x_27)))))).
fof('thm.evalProps.result_rel_trans', axiom, ![V_27A_27,V_27B_27]: ![V_27R2_27, V_27R_7c49_7c_27]: ((![V_27x_27, V_27y_27, V_27z_27]: ((p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_7c49_7c_27),s(V_27A_27,V_27x_27))),s(V_27A_27,V_27y_27)))) & p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_7c49_7c_27),s(V_27A_27,V_27y_27))),s(V_27A_27,V_27z_27))))) => p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_7c49_7c_27),s(V_27A_27,V_27x_27))),s(V_27A_27,V_27z_27))))) & ![V_27x_27, V_27y_27, V_27z_27]: ((p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),V_27R2_27),s(V_27B_27,V_27x_27))),s(V_27B_27,V_27y_27)))) & p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),V_27R2_27),s(V_27B_27,V_27y_27))),s(V_27B_27,V_27z_27))))) => p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),V_27R2_27),s(V_27B_27,V_27x_27))),s(V_27B_27,V_27z_27)))))) => ![V_27x_27, V_27y_27, V_27z_27]: ((p(s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),V_27R2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27x_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27y_27)))) & p(s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),V_27R2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27y_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27z_27))))) => p(s('bool','const.evalProps.result_rel_4'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),V_27R2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27x_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27z_27))))))).
fof('thm.evalProps.every_error_result_def|split|0', axiom, ![V_27A_27]: ![V_27P_27, V_27e_27]: s('bool','const.evalProps.every_error_result_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rraise_1'(s(V_27A_27,V_27e_27))))) = s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27P_27),s(V_27A_27,V_27e_27)))).
fof('thm.evalProps.every_error_result_def|split|1', axiom, ![V_27A_27]: ![V_27P_27, V_27a_27]: s('bool','const.evalProps.every_error_result_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.error_result'(V_27A_27),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27))))) = s('bool','T_0')).
fof('thm.evalProps.every_result_def|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27P_7c49_7c_27, V_27P2_27, V_27v_27]: s('bool','const.evalProps.every_result_3'(s('fun'(V_27A_27,'bool'),V_27P_7c49_7c_27),s('fun'(V_27B_27,'bool'),V_27P2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_27))))) = s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27P_7c49_7c_27),s(V_27A_27,V_27v_27)))).
fof('thm.evalProps.every_result_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27P_7c49_7c_27, V_27P2_27, V_27e_27]: s('bool','const.evalProps.every_result_3'(s('fun'(V_27A_27,'bool'),V_27P_7c49_7c_27),s('fun'(V_27B_27,'bool'),V_27P2_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_27))))) = s('bool','const.evalProps.every_error_result_2'(s('fun'(V_27B_27,'bool'),V_27P2_27),s('type.semanticPrimitives.error_result'(V_27B_27),V_27e_27)))).
fof('ARITY_1_2_const.evalProps.map_sv', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('type.semanticPrimitives.store_v'(V_27A_27),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'type.semanticPrimitives.store_v'(V_27A_27)),'const.evalProps.map_sv_1'(s('fun'(V_27B_27,V_27A_27),VV0))),s('type.semanticPrimitives.store_v'(V_27B_27),VV1))) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.evalProps.map_sv_2'(s('fun'(V_27B_27,V_27A_27),VV0),s('type.semanticPrimitives.store_v'(V_27B_27),VV1)))).
fof('thm.evalProps.map_sv_def|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27f_27, V_27v_27]: s('type.semanticPrimitives.store_v'(V_27A_27),'const.evalProps.map_sv_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v_27))))) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,'happ'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s(V_27B_27,V_27v_27)))))).
fof('thm.evalProps.map_sv_def|split|1', axiom, ![V_27B_27,V_27A_27]: ![V_27v_7c48_7c_27, V_27w_27]: s('type.semanticPrimitives.store_v'(V_27A_27),'const.evalProps.map_sv_2'(s('fun'(V_27B_27,V_27A_27),V_27v_7c48_7c_27),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_27))))) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_27)))).
fof('thm.evalProps.map_sv_def|split|2', axiom, ![V_27A_27,V_27B_27]: ![V_27f_27, V_27vs_27]: s('type.semanticPrimitives.store_v'(V_27A_27),'const.evalProps.map_sv_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27vs_27))))) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.list.list'(V_27B_27),V_27vs_27)))))).
fof('thm.evalProps.dest_Refv_def', axiom, ![V_27A_27]: ![V_27v_27]: s(V_27A_27,'const.evalProps.dest_Refv_1'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_27))))) = s(V_27A_27,V_27v_27)).
fof('ARITY_0_1_const.evalProps.is_Refv', axiom, ![V_27A_27]: ![VV0]: s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'const.evalProps.is_Refv_0'),s('type.semanticPrimitives.store_v'(V_27A_27),VV0))) = s('bool','const.evalProps.is_Refv_1'(s('type.semanticPrimitives.store_v'(V_27A_27),VV0)))).
fof('thm.evalProps.is_Refv_primitive_def', axiom, ![V_27A_27]: s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'const.evalProps.is_Refv_0') = s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'const.relation.WFREC_2'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool')),'const.min.@_1'(s('fun'('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool')),'_dst_x0_1'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'_dst_x1x0x0x0_4'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('fun'(V_27A_27,'bool'),'fun'('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'bool'),'fun'('fun'('type.list.list'(V_27A_27),'bool'),'bool')))),'const.semanticPrimitives.store_v_CASE_0'),s('fun'(V_27A_27,'bool'),'_dst_x0_1'(s('bool','const.combin.I_1'(s('bool','T_0'))))),s('fun'('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'bool'),'_dst_x0_1'(s('bool','const.combin.I_1'(s('bool','F_0'))))),s('fun'('type.list.list'(V_27A_27),'bool'),'_dst_x0_1'(s('bool','const.combin.I_1'(s('bool','F_0')))))))))))).
fof('thm.evalProps.evalProps_92_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((?[V_27v_7c48_7c_27]: s('type.semanticPrimitives.store_v'(V_27A_27),V_27a_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c48_7c_27))) | (?[V_27v2_27]: s('type.semanticPrimitives.store_v'(V_27A_27),V_27a_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v2_27))) | ?[V_27v3_27]: s('type.semanticPrimitives.store_v'(V_27A_27),V_27a_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v3_27))))) => (?[V_27v_7c48_7c_27]: s('type.semanticPrimitives.store_v'(V_27A_27),V_27a_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c48_7c_27))) | (?[V_27v2_27]: s('type.semanticPrimitives.store_v'(V_27A_27),V_27a_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v2_27))) | ?[V_27v3_27]: s('type.semanticPrimitives.store_v'(V_27A_27),V_27a_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v3_27))))))).
fof('thm.evalProps.is_Refv_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c48_7c_27)))))) & (![V_27v2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v2_27)))))) & ![V_27v3_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v3_27)))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27v_27)))))).
fof('thm.evalProps.is_Refv_def|split|0', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27]: s('bool','const.evalProps.is_Refv_1'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c48_7c_27))))) = s('bool','T_0')).
fof('thm.evalProps.is_Refv_def|split|1', axiom, ![V_27A_27]: ![V_27v2_27]: s('bool','const.evalProps.is_Refv_1'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v2_27))))) = s('bool','F_0')).
fof('thm.evalProps.is_Refv_def|split|2', axiom, ![V_27A_27]: ![V_27v3_27]: s('bool','const.evalProps.is_Refv_1'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v3_27))))) = s('bool','F_0')).
fof('thm.evalProps.evalProps_96_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((?[V_27P_27, V_27v_27]: s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_27))))) | (?[V_27P_27, V_27v4_27]: s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v4_27))))) | ?[V_27P_27, V_27vs_27]: s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_27))))))) => (?[V_27P_27, V_27v_27]: s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_27))))) | (?[V_27P_27, V_27vs_27]: s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_27))))) | ?[V_27P_27, V_27v4_27]: s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'bool'),'type.semanticPrimitives.store_v'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v4_27))))))))).
fof('thm.evalProps.sv_every_ind', axiom, ![V_27A_27]: ![V_27P_7c39_7c_27]: ((![V_27P_27, V_27v_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'happ'(s('fun'('fun'(V_27A_27,'bool'),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool')),V_27P_7c39_7c_27),s('fun'(V_27A_27,'bool'),V_27P_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_27)))))) & (![V_27P_27, V_27vs_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'happ'(s('fun'('fun'(V_27A_27,'bool'),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool')),V_27P_7c39_7c_27),s('fun'(V_27A_27,'bool'),V_27P_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_27)))))) & ![V_27P_27, V_27v4_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'happ'(s('fun'('fun'(V_27A_27,'bool'),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool')),V_27P_7c39_7c_27),s('fun'(V_27A_27,'bool'),V_27P_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v4_27)))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'happ'(s('fun'('fun'(V_27A_27,'bool'),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool')),V_27P_7c39_7c_27),s('fun'(V_27A_27,'bool'),V_27v_27))),s('type.semanticPrimitives.store_v'(V_27A_27),V_27v_7c49_7c_27)))))).
fof('ARITY_1_2_const.evalProps.sv_every', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'const.evalProps.sv_every_1'(s('fun'(V_27A_27,'bool'),VV0))),s('type.semanticPrimitives.store_v'(V_27A_27),VV1))) = s('bool','const.evalProps.sv_every_2'(s('fun'(V_27A_27,'bool'),VV0),s('type.semanticPrimitives.store_v'(V_27A_27),VV1)))).
fof('thm.evalProps.sv_every_def|split|0', axiom, ![V_27A_27]: ![V_27v_27, V_27P_27]: s('bool','const.evalProps.sv_every_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_27))))) = s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27P_27),s(V_27A_27,V_27v_27)))).
fof('thm.evalProps.sv_every_def|split|1', axiom, ![V_27A_27]: ![V_27vs_27, V_27P_27]: s('bool','const.evalProps.sv_every_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_27))))) = s('bool','const.list.EVERY_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.list.list'(V_27A_27),V_27vs_27)))).
fof('thm.evalProps.sv_every_def|split|2', axiom, ![V_27A_27]: ![V_27v4_27, V_27P_27]: s('bool','const.evalProps.sv_every_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v4_27))))) = s('bool','T_0')).
fof('thm.evalProps.evalProps_|49||48||49|_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: (((?[V_27R_27, V_27v_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v2_27))))))) | (?[V_27R_27, V_27v7_27, V_27v_7c49_7c4_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v7_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c49_7c4_27))))))) | ?[V_27R_27, V_27v7_27, V_27v_7c49_7c5_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v7_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27v_7c49_7c5_27))))))))) | ((?[V_27R_27, V_27v8_27, V_27v_7c49_7c9_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v8_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v_7c49_7c9_27))))))) | (?[V_27R_27, V_27w_7c49_7c_27, V_27w2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w2_27))))))) | ?[V_27R_27, V_27v8_27, V_27v2_7c49_7c_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v8_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27v2_7c49_7c_27))))))))) | (?[V_27R_27, V_27v9_27, V_27v25_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v9_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v25_27))))))) | (?[V_27R_27, V_27v9_27, V_27v26_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v9_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v26_27))))))) | ?[V_27R_27, V_27vs_7c49_7c_27, V_27vs2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27vs2_27))))))))))) => (?[V_27R_27, V_27v_7c49_7c_27, V_27v2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v2_27))))))) | (?[V_27R_27, V_27w_7c49_7c_27, V_27w2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w2_27))))))) | (?[V_27R_27, V_27vs_7c49_7c_27, V_27vs2_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27vs2_27))))))) | (?[V_27R_27, V_27v7_27, V_27v_7c49_7c4_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v7_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c49_7c4_27))))))) | (?[V_27R_27, V_27v7_27, V_27v_7c49_7c5_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v7_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27v_7c49_7c5_27))))))) | (?[V_27R_27, V_27v8_27, V_27v_7c49_7c9_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v8_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v_7c49_7c9_27))))))) | (?[V_27R_27, V_27v8_27, V_27v2_7c49_7c_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v8_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27v2_7c49_7c_27))))))) | (?[V_27R_27, V_27v9_27, V_27v25_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v9_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v25_27))))))) | ?[V_27R_27, V_27v9_27, V_27v26_27]: s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27))),'const.pair.,_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.pair.prod'('type.semanticPrimitives.store_v'(V_27A_27),'type.semanticPrimitives.store_v'(V_27B_27)),'const.pair.,_2'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v9_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v26_27))))))))))))))))).
fof('thm.evalProps.sv_rel_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27]: ((![V_27R_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c49_7c_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v2_27)))))) & (![V_27R_27, V_27w_7c49_7c_27, V_27w2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_7c49_7c_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w2_27)))))) & (![V_27R_27, V_27vs_7c49_7c_27, V_27vs2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_7c49_7c_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27vs2_27)))))) & (![V_27R_27, V_27v7_27, V_27v_7c49_7c4_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v7_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c49_7c4_27)))))) & (![V_27R_27, V_27v7_27, V_27v_7c49_7c5_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v7_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27v_7c49_7c5_27)))))) & (![V_27R_27, V_27v8_27, V_27v_7c49_7c9_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v8_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v_7c49_7c9_27)))))) & (![V_27R_27, V_27v8_27, V_27v2_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v8_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27v2_7c49_7c_27)))))) & (![V_27R_27, V_27v9_27, V_27v25_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v9_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v25_27)))))) & ![V_27R_27, V_27v9_27, V_27v26_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27))),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v9_27))))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v26_27)))))))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'happ'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'))),V_27P_27),s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27v_27))),s('type.semanticPrimitives.store_v'(V_27A_27),V_27v_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),V_27v2_27)))))).
fof('thm.evalProps.sv_rel_def|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27v2_27, V_27v_7c49_7c_27, V_27R_27]: s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v2_27))))) = s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s(V_27A_27,V_27v_7c49_7c_27))),s(V_27B_27,V_27v2_27)))).
fof('thm.evalProps.sv_rel_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27w2_27, V_27w_7c49_7c_27, V_27R_27]: (p(s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w2_27)))))) <=> s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_7c49_7c_27) = s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w2_27))).
fof('thm.evalProps.sv_rel_def|split|2', axiom, ![V_27A_27,V_27B_27]: ![V_27vs2_27, V_27vs_7c49_7c_27, V_27R_27]: s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_7c49_7c_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27vs2_27))))) = s('bool','const.list.LIST_REL_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.list.list'(V_27A_27),V_27vs_7c49_7c_27),s('type.list.list'(V_27B_27),V_27vs2_27)))).
fof('thm.evalProps.sv_rel_def|split|3', axiom, ![V_27A_27,V_27B_27]: ![V_27v7_27, V_27v_7c49_7c4_27, V_27R_27]: s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v7_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c49_7c4_27))))) = s('bool','F_0')).
fof('thm.evalProps.sv_rel_def|split|4', axiom, ![V_27A_27,V_27B_27]: ![V_27v7_27, V_27v_7c49_7c5_27, V_27R_27]: s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v7_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27v_7c49_7c5_27))))) = s('bool','F_0')).
fof('thm.evalProps.sv_rel_def|split|5', axiom, ![V_27A_27,V_27B_27]: ![V_27v8_27, V_27v_7c49_7c9_27, V_27R_27]: s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v8_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v_7c49_7c9_27))))) = s('bool','F_0')).
fof('thm.evalProps.sv_rel_def|split|6', axiom, ![V_27A_27,V_27B_27]: ![V_27v8_27, V_27v2_7c49_7c_27, V_27R_27]: s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v8_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27v2_7c49_7c_27))))) = s('bool','F_0')).
fof('thm.evalProps.sv_rel_def|split|7', axiom, ![V_27A_27,V_27B_27]: ![V_27v9_27, V_27v25_27, V_27R_27]: s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v9_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v25_27))))) = s('bool','F_0')).
fof('thm.evalProps.sv_rel_def|split|8', axiom, ![V_27A_27,V_27B_27]: ![V_27v9_27, V_27v26_27, V_27R_27]: s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27v9_27))),s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v26_27))))) = s('bool','F_0')).
fof('thm.evalProps.sv_rel_refl', axiom, ![V_27A_27]: ![V_27R_27, V_27x_27]: (![V_27x_7c48_7c_27]: p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s(V_27A_27,V_27x_7c48_7c_27))),s(V_27A_27,V_27x_7c48_7c_27)))) => p(s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27)))))).
fof('thm.evalProps.sv_rel_trans', axiom, ![V_27A_27]: ![V_27R_27]: (![V_27x_27, V_27y_27, V_27z_27]: ((p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s(V_27A_27,V_27x_27))),s(V_27A_27,V_27y_27)))) & p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s(V_27A_27,V_27y_27))),s(V_27A_27,V_27z_27))))) => p(s('bool','happ'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s(V_27A_27,V_27x_27))),s(V_27A_27,V_27z_27))))) => ![V_27x_27, V_27y_27, V_27z_27]: ((p(s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27y_27)))) & p(s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27y_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27z_27))))) => p(s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27z_27))))))).
fof('thm.evalProps.sv_rel_cases', axiom, ![V_27A_27,V_27B_27]: ![V_27R_27, V_27x_27, V_27y_27]: (p(s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27),s('type.semanticPrimitives.store_v'(V_27B_27),V_27y_27)))) <=> (?[V_27v_7c49_7c_27, V_27v2_27]: (s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_7c49_7c_27))) & (s('type.semanticPrimitives.store_v'(V_27B_27),V_27y_27) = s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Refv_1'(s(V_27B_27,V_27v2_27))) & p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s(V_27A_27,V_27v_7c49_7c_27))),s(V_27B_27,V_27v2_27)))))) | (?[V_27w_27]: (s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_27))) & s('type.semanticPrimitives.store_v'(V_27B_27),V_27y_27) = s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27w_27)))) | ?[V_27vs_7c49_7c_27, V_27vs2_27]: (s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_7c49_7c_27))) & (s('type.semanticPrimitives.store_v'(V_27B_27),V_27y_27) = s('type.semanticPrimitives.store_v'(V_27B_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27B_27),V_27vs2_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_27),s('type.list.list'(V_27A_27),V_27vs_7c49_7c_27),s('type.list.list'(V_27B_27),V_27vs2_27)))))))))).
fof('ARITY_1_3_const.evalProps.sv_rel', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool'),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'const.evalProps.sv_rel_1'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),VV0))),s('type.semanticPrimitives.store_v'(V_27A_27),VV1))),s('type.semanticPrimitives.store_v'(V_27B_27),VV2))) = s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),VV0),s('type.semanticPrimitives.store_v'(V_27A_27),VV1),s('type.semanticPrimitives.store_v'(V_27B_27),VV2)))).
fof('thm.evalProps.sv_rel_O', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27R_7c49_7c_27, V_27R2_27]: s('fun'('type.semanticPrimitives.store_v'(V_27C_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'const.evalProps.sv_rel_1'(s('fun'(V_27C_27,'fun'(V_27B_27,'bool')),'const.relation.O_2'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27),s('fun'(V_27C_27,'fun'(V_27A_27,'bool')),V_27R2_27))))) = s('fun'('type.semanticPrimitives.store_v'(V_27C_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'const.relation.O_2'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'const.evalProps.sv_rel_1'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27R_7c49_7c_27))),s('fun'('type.semanticPrimitives.store_v'(V_27C_27),'fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool')),'const.evalProps.sv_rel_1'(s('fun'(V_27C_27,'fun'(V_27A_27,'bool')),V_27R2_27)))))).
fof('thm.evalProps.sv_rel_mono', axiom, ![V_27A_27,V_27B_27]: ![V_27y_27, V_27x_27, V_27Q_27, V_27P_27]: (![V_27x_7c48_7c_27, V_27y_7c48_7c_27]: (p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27P_27),s(V_27A_27,V_27x_7c48_7c_27))),s(V_27B_27,V_27y_7c48_7c_27)))) => p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27Q_27),s(V_27A_27,V_27x_7c48_7c_27))),s(V_27B_27,V_27y_7c48_7c_27))))) => (p(s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27P_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27),s('type.semanticPrimitives.store_v'(V_27B_27),V_27y_27)))) => p(s('bool','const.evalProps.sv_rel_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27Q_27),s('type.semanticPrimitives.store_v'(V_27A_27),V_27x_27),s('type.semanticPrimitives.store_v'(V_27B_27),V_27y_27))))))).
fof('thm.evalProps.store_v_vs_def|split|0', axiom, ![V_27A_27]: ![V_27v_27]: s('type.list.list'(V_27A_27),'const.evalProps.store_v_vs_1'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Refv_1'(s(V_27A_27,V_27v_27))))) = s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27v_27),s('type.list.list'(V_27A_27),'const.list.NIL_0')))).
fof('thm.evalProps.store_v_vs_def|split|1', axiom, ![V_27A_27]: ![V_27vs_27]: s('type.list.list'(V_27A_27),'const.evalProps.store_v_vs_1'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.Varray_1'(s('type.list.list'(V_27A_27),V_27vs_27))))) = s('type.list.list'(V_27A_27),V_27vs_27)).
fof('thm.evalProps.store_v_vs_def|split|2', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27]: s('type.list.list'(V_27A_27),'const.evalProps.store_v_vs_1'(s('type.semanticPrimitives.store_v'(V_27A_27),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),V_27v_7c48_7c_27))))) = s('type.list.list'(V_27A_27),'const.list.NIL_0')).
fof('ARITY_0_1_const.evalProps.store_v_vs', axiom, ![V_27A_27]: ![VV0]: s('type.list.list'(V_27A_27),'happ'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'type.list.list'(V_27A_27)),'const.evalProps.store_v_vs_0'),s('type.semanticPrimitives.store_v'(V_27A_27),VV0))) = s('type.list.list'(V_27A_27),'const.evalProps.store_v_vs_1'(s('type.semanticPrimitives.store_v'(V_27A_27),VV0)))).
fof('thm.evalProps.store_vs_def', axiom, ![V_27A_27]: ![V_27s_27]: s('type.list.list'(V_27A_27),'const.evalProps.store_vs_1'(s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),V_27s_27))) = s('type.list.list'(V_27A_27),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(V_27A_27)),'const.list.MAP_2'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'type.list.list'(V_27A_27)),'const.evalProps.store_v_vs_0'),s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),V_27s_27)))))).
fof('thm.evalProps.EVERY_sv_every_MAP_map_sv', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27, V_27f_27, V_27ls_27]: (p(s('bool','const.list.EVERY_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.list.list'(V_27B_27),'const.evalProps.store_vs_1'(s('type.list.list'('type.semanticPrimitives.store_v'(V_27B_27)),V_27ls_27)))))))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'const.evalProps.sv_every_1'(s('fun'(V_27A_27,'bool'),V_27P_27))),s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),'const.list.MAP_2'(s('fun'('type.semanticPrimitives.store_v'(V_27B_27),'type.semanticPrimitives.store_v'(V_27A_27)),'const.evalProps.map_sv_1'(s('fun'(V_27B_27,V_27A_27),V_27f_27))),s('type.list.list'('type.semanticPrimitives.store_v'(V_27B_27)),V_27ls_27)))))))).
fof('thm.evalProps.LIST_REL_store_vs_intro', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27, V_27l_7c49_7c_27, V_27l2_27]: (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'fun'('type.semanticPrimitives.store_v'(V_27B_27),'bool')),'const.evalProps.sv_rel_1'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27P_27))),s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),V_27l_7c49_7c_27),s('type.list.list'('type.semanticPrimitives.store_v'(V_27B_27)),V_27l2_27)))) => p(s('bool','const.list.LIST_REL_3'(s('fun'(V_27A_27,'fun'(V_27B_27,'bool')),V_27P_27),s('type.list.list'(V_27A_27),'const.evalProps.store_vs_1'(s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),V_27l_7c49_7c_27))),s('type.list.list'(V_27B_27),'const.evalProps.store_vs_1'(s('type.list.list'('type.semanticPrimitives.store_v'(V_27B_27)),V_27l2_27)))))))).
fof('thm.evalProps.EVERY_sv_every_EVERY_store_vs', axiom, ![V_27A_27]: ![V_27P_27, V_27ls_27]: s('bool','const.list.EVERY_2'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'const.evalProps.sv_every_1'(s('fun'(V_27A_27,'bool'),V_27P_27))),s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),V_27ls_27))) = s('bool','const.list.EVERY_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.list.list'(V_27A_27),'const.evalProps.store_vs_1'(s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),V_27ls_27)))))).
fof('thm.evalProps.EVERY_store_vs_intro', axiom, ![V_27A_27]: ![V_27P_27, V_27ls_27]: (p(s('bool','const.list.EVERY_2'(s('fun'('type.semanticPrimitives.store_v'(V_27A_27),'bool'),'const.evalProps.sv_every_1'(s('fun'(V_27A_27,'bool'),V_27P_27))),s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),V_27ls_27)))) => p(s('bool','const.list.EVERY_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.list.list'(V_27A_27),'const.evalProps.store_vs_1'(s('type.list.list'('type.semanticPrimitives.store_v'(V_27A_27)),V_27ls_27)))))))).
fof('thm.evalProps.map_sv_compose', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27x_27, V_27g_27, V_27f_27]: s('type.semanticPrimitives.store_v'(V_27A_27),'const.evalProps.map_sv_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.store_v'(V_27B_27),'const.evalProps.map_sv_2'(s('fun'(V_27C_27,V_27B_27),V_27g_27),s('type.semanticPrimitives.store_v'(V_27C_27),V_27x_27))))) = s('type.semanticPrimitives.store_v'(V_27A_27),'const.evalProps.map_sv_2'(s('fun'(V_27C_27,V_27A_27),'const.combin.o_2'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('fun'(V_27C_27,V_27B_27),V_27g_27))),s('type.semanticPrimitives.store_v'(V_27C_27),V_27x_27)))).
fof('thm.evalProps.evalProps_|49||49|8_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((?[V_27f_27]: s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.No_match_0'))) | (?[V_27f_27]: s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_type_error_0'))) | ?[V_27f_27, V_27env_27]: s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_1'(s(V_27A_27,V_27env_27))))))) => (?[V_27f_27, V_27env_27]: s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_1'(s(V_27A_27,V_27env_27))))) | (?[V_27f_27]: s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.No_match_0'))) | ?[V_27f_27]: s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),V_27a_27) = s('type.pair.prod'('fun'(V_27A_27,V_27A_27),'type.semanticPrimitives.match_result'(V_27A_27)),'const.pair.,_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_type_error_0'))))))).
fof('thm.evalProps.map_match_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27f_27, V_27env_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.match_result'(V_27A_27),'bool'),'happ'(s('fun'('fun'(V_27A_27,V_27A_27),'fun'('type.semanticPrimitives.match_result'(V_27A_27),'bool')),V_27P_27),s('fun'(V_27A_27,V_27A_27),V_27f_27))),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_1'(s(V_27A_27,V_27env_27)))))) & (![V_27f_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.match_result'(V_27A_27),'bool'),'happ'(s('fun'('fun'(V_27A_27,V_27A_27),'fun'('type.semanticPrimitives.match_result'(V_27A_27),'bool')),V_27P_27),s('fun'(V_27A_27,V_27A_27),V_27f_27))),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.No_match_0')))) & ![V_27f_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.match_result'(V_27A_27),'bool'),'happ'(s('fun'('fun'(V_27A_27,V_27A_27),'fun'('type.semanticPrimitives.match_result'(V_27A_27),'bool')),V_27P_27),s('fun'(V_27A_27,V_27A_27),V_27f_27))),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_type_error_0')))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.match_result'(V_27A_27),'bool'),'happ'(s('fun'('fun'(V_27A_27,V_27A_27),'fun'('type.semanticPrimitives.match_result'(V_27A_27),'bool')),V_27P_27),s('fun'(V_27A_27,V_27A_27),V_27v_27))),s('type.semanticPrimitives.match_result'(V_27A_27),V_27v_7c49_7c_27)))))).
fof('thm.evalProps.map_match_def|split|0', axiom, ![V_27A_27]: ![V_27f_27, V_27env_27]: s('type.semanticPrimitives.match_result'(V_27A_27),'const.evalProps.map_match_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_1'(s(V_27A_27,V_27env_27))))) = s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_1'(s(V_27A_27,'happ'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s(V_27A_27,V_27env_27)))))).
fof('thm.evalProps.map_match_def|split|1', axiom, ![V_27A_27]: ![V_27f_27]: s('type.semanticPrimitives.match_result'(V_27A_27),'const.evalProps.map_match_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.No_match_0'))) = s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.No_match_0')).
fof('thm.evalProps.map_match_def|split|2', axiom, ![V_27A_27]: ![V_27f_27]: s('type.semanticPrimitives.match_result'(V_27A_27),'const.evalProps.map_match_2'(s('fun'(V_27A_27,V_27A_27),V_27f_27),s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_type_error_0'))) = s('type.semanticPrimitives.match_result'(V_27A_27),'const.semanticPrimitives.Match_type_error_0')).
fof('thm.evalProps.find_recfun_ALOOKUP', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![V_27funs_27, V_27n_27]: s('type.option.option'('type.pair.prod'(V_27B_27,V_27C_27)),'const.semanticPrimitives.find_recfun_2'(s(V_27A_27,V_27n_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27funs_27))) = s('type.option.option'('type.pair.prod'(V_27B_27,V_27C_27)),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27funs_27),s(V_27A_27,V_27n_27)))).
fof('thm.evalProps.find_recfun_el', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27f_27, V_27funs_27, V_27x_27, V_27e_27, V_27n_27]: ((p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),V_27A_27),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27C_27),V_27A_27)),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),V_27A_27)),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27C_27),V_27A_27)),'_dst_x0x1_2'(s('fun'('fun'(V_27B_27,'fun'(V_27C_27,V_27A_27)),'fun'('type.pair.prod'(V_27B_27,V_27C_27),V_27A_27)),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'(V_27B_27,'fun'(V_27C_27,V_27A_27))),'_dst_x00_0'))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27funs_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27funs_27)))))) & s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),'const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27funs_27))) = s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27)),'const.pair.,_2'(s(V_27A_27,V_27f_27),s('type.pair.prod'(V_27B_27,V_27C_27),'const.pair.,_2'(s(V_27B_27,V_27x_27),s(V_27C_27,V_27e_27))))))) => s('type.option.option'('type.pair.prod'(V_27B_27,V_27C_27)),'const.semanticPrimitives.find_recfun_2'(s(V_27A_27,V_27f_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27C_27))),V_27funs_27))) = s('type.option.option'('type.pair.prod'(V_27B_27,V_27C_27)),'const.option.SOME_1'(s('type.pair.prod'(V_27B_27,V_27C_27),'const.pair.,_2'(s(V_27B_27,V_27x_27),s(V_27C_27,V_27e_27))))))).
fof('ARITY_0_1_const.evalProps.ctors_of_tdef', axiom, ![V_27B_27,V_27C_27,V_27A_27,V_27D_27]: ![VV0]: s('type.list.list'(V_27A_27),'happ'(s('fun'('type.pair.prod'(V_27B_27,'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))),'type.list.list'(V_27A_27)),'const.evalProps.ctors_of_tdef_0'),s('type.pair.prod'(V_27B_27,'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))),VV0))) = s('type.list.list'(V_27A_27),'const.evalProps.ctors_of_tdef_1'(s('type.pair.prod'(V_27B_27,'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))),VV0)))).
fof('thm.evalProps.ctors_of_tdef_def', axiom, ![V_27B_27,V_27C_27,V_27A_27,V_27D_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27condefs_27]: s('type.list.list'(V_27A_27),'const.evalProps.ctors_of_tdef_1'(s('type.pair.prod'(V_27B_27,'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))),'const.pair.,_2'(s(V_27B_27,V_27v_7c48_7c_27),s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))),'const.pair.,_2'(s(V_27C_27,V_27v_7c49_7c_27),s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),V_27condefs_27))))))) = s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,V_27D_27),V_27A_27),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),V_27condefs_27)))).
fof('ARITY_0_1_const.evalProps.ctors_of_dec', axiom, ![VV0]: s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char'))),'const.evalProps.ctors_of_dec_0'),s('type.ast.dec',VV0))) = s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.ctors_of_dec_1'(s('type.ast.dec',VV0)))).
fof('thm.evalProps.ctors_of_dec_primitive_def', axiom, s('fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char'))),'const.evalProps.ctors_of_dec_0') = s('fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.ast.dec','fun'('type.ast.dec','bool')),'const.min.@_1'(s('fun'('fun'('type.ast.dec','fun'('type.ast.dec','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char'))),'fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char'))),'_dst_x1x0x0x0x0x0_6'(s('fun'('type.ast.dec','fun'('fun'('type.ast.pat','fun'('type.ast.exp','type.list.list'('type.list.list'('type.string.char')))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.list.list'('type.string.char'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.list.list'('type.string.char'))),'fun'('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.list.list'('type.list.list'('type.string.char'))))),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.list.list'('type.string.char')))),'type.list.list'('type.list.list'('type.string.char')))))))),'const.ast.dec_CASE_0'),s('fun'('type.ast.pat','fun'('type.ast.exp','type.list.list'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.ast.exp','type.list.list'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.list.list'('type.list.list'('type.string.char'))),'type.list.list'('type.list.list'('type.string.char'))),'const.list.FLAT_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.list.list'('type.list.list'('type.string.char')))),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.list.list'('type.string.char'))),'const.evalProps.ctors_of_tdef_0'))))))),s('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.list.list'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.t','type.list.list'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.ast.t','type.list.list'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.list.list'('type.string.char')))),'_dst_x00x10_2'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char')))),'const.list.CONS_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))))))))).
fof('thm.evalProps.evalProps_|49|26_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_27, V_27v2_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',V_27v_27),s('type.ast.exp',V_27v2_27))) | (?[V_27v3_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v3_27))) | (?[V_27tds_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27tds_27))) | (?[V_27v5_27, V_27v6_27, V_27v7_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),V_27v5_27),s('type.list.list'('type.string.char'),V_27v6_27),s('type.ast.t',V_27v7_27))) | ?[V_27s_27, V_27v_7c48_7c_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.ast.t'),V_27v_7c48_7c_27))))))) => (?[V_27tds_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27tds_27))) | (?[V_27s_27, V_27v_7c48_7c_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.ast.t'),V_27v_7c48_7c_27))) | (?[V_27v_27, V_27v2_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',V_27v_27),s('type.ast.exp',V_27v2_27))) | (?[V_27v3_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v3_27))) | ?[V_27v5_27, V_27v6_27, V_27v7_27]: s('type.ast.dec',V_27a_27) = s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),V_27v5_27),s('type.list.list'('type.string.char'),V_27v6_27),s('type.ast.t',V_27v7_27))))))))).
fof('thm.evalProps.ctors_of_dec_ind', axiom, ![V_27P_27]: ((![V_27tds_27]: p(s('bool','happ'(s('fun'('type.ast.dec','bool'),V_27P_27),s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27tds_27)))))) & (![V_27s_27, V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.dec','bool'),V_27P_27),s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.ast.t'),V_27v_7c48_7c_27)))))) & (![V_27v_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.dec','bool'),V_27P_27),s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',V_27v_27),s('type.ast.exp',V_27v2_27)))))) & (![V_27v3_27]: p(s('bool','happ'(s('fun'('type.ast.dec','bool'),V_27P_27),s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v3_27)))))) & ![V_27v5_27, V_27v6_27, V_27v7_27]: p(s('bool','happ'(s('fun'('type.ast.dec','bool'),V_27P_27),s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),V_27v5_27),s('type.list.list'('type.string.char'),V_27v6_27),s('type.ast.t',V_27v7_27)))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.dec','bool'),V_27P_27),s('type.ast.dec',V_27v_27)))))).
fof('thm.evalProps.ctors_of_dec_def|split|0', axiom, ![V_27tds_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.ctors_of_dec_1'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27tds_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.list.list'('type.string.char'))),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.list.list'('type.string.char'))),'const.evalProps.ctors_of_tdef_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27tds_27)))))).
fof('thm.evalProps.ctors_of_dec_def|split|1', axiom, ![V_27v_7c48_7c_27, V_27s_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.ctors_of_dec_1'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.ast.t'),V_27v_7c48_7c_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))).
fof('thm.evalProps.ctors_of_dec_def|split|2', axiom, ![V_27v2_27, V_27v_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.ctors_of_dec_1'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',V_27v_27),s('type.ast.exp',V_27v2_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')).
fof('thm.evalProps.ctors_of_dec_def|split|3', axiom, ![V_27v3_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.ctors_of_dec_1'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v3_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')).
fof('thm.evalProps.ctors_of_dec_def|split|4', axiom, ![V_27v7_27, V_27v6_27, V_27v5_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.ctors_of_dec_1'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),V_27v5_27),s('type.list.list'('type.string.char'),V_27v6_27),s('type.ast.t',V_27v7_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')).
fof('thm.evalProps.evaluate_decs_ctors_in', axiom, ![V_27A_27]: ![V_27ck_27, V_27mn_27, V_27env_27, V_27s_27, V_27decs_27, V_27res_27]: (p(s('bool','const.bigStep.evaluate_decs_6'(s('bool',V_27ck_27),s('type.option.option'('type.list.list'('type.string.char')),V_27mn_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27A_27),V_27s_27),s('type.list.list'('type.ast.dec'),V_27decs_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'type.semanticPrimitives.result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.semanticPrimitives.v'))),V_27res_27)))) => ![V_27cn_27]: (p(s('bool','const.option.IS_SOME_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'type.semanticPrimitives.result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.semanticPrimitives.v')),'const.pair.SND_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))),'type.semanticPrimitives.result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.semanticPrimitives.v'))),V_27res_27))))),s('type.list.list'('type.string.char'),V_27cn_27)))))) => p(s('bool','const.bool.IN_2'(s('type.list.list'('type.string.char'),V_27cn_27),s('fun'('type.list.list'('type.string.char'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.list.list'('type.string.char'))),'const.list.MAP_2'(s('fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char'))),'const.evalProps.ctors_of_dec_0'),s('type.list.list'('type.ast.dec'),V_27decs_27))))))))))))).
fof('ARITY_0_1_const.evalProps.FV_UNION', axiom, ![VV0]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'happ'(s('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.evalProps.FV_UNION_0'),s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),VV0))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_UNION_1'(s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),VV0)))).
fof('_dst_x01x10x10x00x10x00x10x10x10x10x10x10x10_ax', axiom, ![VA2,VA,VA3,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA14,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__7, V__8, V__9, V__10, V__11, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x01x10x10x00x10x00x10x10x10x10x10x10x10_13'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA))))))))))))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA1,VA4),V__1),s(VA5,V__2),s('fun'(VA1,VA6),V__3),s(VA7,V__4),s('fun'(VA1,VA8),V__5),s('fun'(VA1,VA9),V__6),s('fun'(VA1,VA10),V__7),s('fun'(VA1,VA11),V__8),s('fun'(VA1,VA12),V__9),s('fun'(VA1,VA13),V__10),s('fun'(VA1,VA14),V__11))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x1x0x0x0x0x0x0x0x0x0x0x0x0_13'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA))))))))))))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s(VA4,'happ'(s('fun'(VA1,VA4),V__1),s(VA1,V__z))),s(VA5,V__2),s(VA6,'happ'(s('fun'(VA1,VA6),V__3),s(VA1,V__z))),s(VA7,V__4),s(VA8,'happ'(s('fun'(VA1,VA8),V__5),s(VA1,V__z))),s(VA9,'happ'(s('fun'(VA1,VA9),V__6),s(VA1,V__z))),s(VA10,'happ'(s('fun'(VA1,VA10),V__7),s(VA1,V__z))),s(VA11,'happ'(s('fun'(VA1,VA11),V__8),s(VA1,V__z))),s(VA12,'happ'(s('fun'(VA1,VA12),V__9),s(VA1,V__z))),s(VA13,'happ'(s('fun'(VA1,VA13),V__10),s(VA1,V__z))),s(VA14,'happ'(s('fun'(VA1,VA14),V__11),s(VA1,V__z)))))).
fof('_dst_x0001x1100_ax', axiom, ![VA3,VA4,VA,VA2,VA5,VA1]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0001x1100_2'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA1,'fun'(VA2,VA5)),V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x001x100_2'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__0),s(VA1,V__z)))))).
fof('thm.evalProps.FV_UNION_primitive_def', axiom, s('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.evalProps.FV_UNION_0') = s('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.relation.WFREC_2'(s('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'const.min.@_1'(s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dstsel_0_x01x01_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','type.ast.exp'),'const.ast.Raise_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_0'))))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','type.ast.exp')),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'_i_0_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_0'))),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.Con_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Fun_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.op','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.op','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_0'))),s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.lop','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.lop','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.lop','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.lop','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.lop','fun'('type.ast.exp','type.ast.exp'))),'_dst_x011x100_2'(s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x011x100_2'(s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x001x010x100_3'(s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_0'))))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.exp','type.ast.exp')),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'_i_0_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','type.ast.exp'))),'_dst_x011x100_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_0'))))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.ast.exp')),'_dst_x01x10_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_0'))),s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.ast.exp'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','type.list.list'('type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.pat','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.pat','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.ast.pat','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_0'))))),s('fun'('type.ast.exp','fun'('type.ast.pat','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.ast.exp','fun'('type.ast.pat','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x000x111_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.ast.exp','fun'('type.ast.pat','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_0'),s('fun'('type.ast.exp','fun'('type.ast.pat','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'const.list.CONS_0'),s('fun'('type.ast.exp','fun'('type.ast.pat','type.pair.prod'('type.ast.pat','type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.ast.pat','fun'('type.ast.exp','type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.pair.,_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.pat','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x000x111_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x000x111_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))))),'_dst_x000x011x100_3'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')))),'const.list.CONS_0'),s('fun'('type.ast.pat','fun'('type.ast.exp','type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','bool'))))),'_dstsel_0_x00001x01111_2'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))))),'_dst_x0000x1111_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x0000x1111_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0000x0111x1000_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'_dst_x000x010x101_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.pair.,_0'))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'_i_0_0'))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'))))),'_dstsel_0_x00001x01111_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_0'))))),s('fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))))),'_dst_x0000x1111_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))))),'_dst_x0000x1111_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.list.CONS_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'_dst_x001x110_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.pair.,_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.pair.,_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x01x10x10x00x10x00x10x10x10x10x10x10x10_13'(s('fun'('type.ast.exp','fun'('fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('fun'('type.ast.lit','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))))))))))))),'const.ast.exp_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_0'))))))))))),s('fun'('type.ast.lit','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0_1'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'happ'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x101_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_0'))))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x1x0_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.INSERT_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x101x010_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.DIFF_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1x0_3'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.INSERT_0'),s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x101_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1011_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1110x1001_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1010x1101_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x101x010_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.DIFF_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'const.option.option_CASE_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1x0_3'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.INSERT_0'),s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x111x010_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.DIFF_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.list.LIST_TO_SET_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.ast.id'('type.list.list'('type.string.char'))),'const.combin.o_2'(s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.list.list'('type.string.char')),'const.pair.FST_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'fun'('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.exp'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'const.list.list_CASE_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'happ'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'fun'('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'const.list.list_CASE_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'happ'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x010x101_3'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('fun'('type.ast.pat','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pair.pair_CASE_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.pair.prod'('type.ast.pat','type.ast.exp')),'_i_0_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.pat','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1011x1100_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.pat','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x101x010_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.DIFF_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('type.ast.pat','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.pred_set.IMAGE_1'(s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'))),s('fun'('type.ast.pat','fun'('type.list.list'('type.string.char'),'bool')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'bool')),'const.list.LIST_TO_SET_0'),s('fun'('type.ast.pat','type.list.list'('type.list.list'('type.string.char'))),'_dst_x1x0_2'(s('fun'('type.ast.pat','fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char')))),'const.ast.pat_bindings_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_0'))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'const.list.list_CASE_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'happ'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x010x101_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pair.pair_CASE_0'),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'_i_0_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0001x1100_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pair.pair_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))))),'_dst_x0000x1011x1100_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.UNION_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')))),'_dst_x000x101x010_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.DIFF_0'),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.ast.exp','type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INL_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1x0_3'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.INSERT_0'),s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_0')))))))))))))))))))))))))).
fof('thm.evalProps.evalProps_|49|3|49|_prove_ltb', axiom, ![V_27a_27]: (((?[V_27e_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27e_27))))) | (?[V_27e_27, V_27pes_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) | (?[V_27v_7c48_7c_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_7c48_7c_27))))) | (?[V_27v_7c49_7c_27, V_27ls_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v_7c49_7c_27),s('type.list.list'('type.ast.exp'),V_27ls_27))))) | (?[V_27id_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))))) | (?[V_27x_27, V_27e_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))) | (?[V_27v2_27, V_27es_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v2_27),s('type.list.list'('type.ast.exp'),V_27es_27))))) | (?[V_27v3_27, V_27e_7c49_7c_27, V_27e2_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v3_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))))) | (?[V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27),s('type.ast.exp',V_27e3_27))))) | (?[V_27e_27, V_27pes_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) | (?[V_27xo_27, V_27e_27, V_27b_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27xo_27),s('type.ast.exp',V_27e_27),s('type.ast.exp',V_27b_27))))) | ?[V_27defs_27, V_27b_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27),s('type.ast.exp',V_27b_27)))))))))))))))) | ((s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_1'(s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ?[V_27e_27, V_27es_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_1'(s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.ast.exp'),V_27es_27)))))))) | ((s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INL_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))))) | ?[V_27p_27, V_27e_27, V_27pes_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INL_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27)))))))))) | (s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INR_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.NIL_0'))))))) | ?[V_27v4_27, V_27x_27, V_27e_27, V_27defs_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INR_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27v4_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27))))))))))))) => (?[V_27e_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27e_27))))) | (?[V_27e_27, V_27pes_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) | (?[V_27v_7c48_7c_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_7c48_7c_27))))) | (?[V_27v_7c49_7c_27, V_27ls_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v_7c49_7c_27),s('type.list.list'('type.ast.exp'),V_27ls_27))))) | (?[V_27id_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))))) | (?[V_27x_27, V_27e_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))) | (?[V_27v2_27, V_27es_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v2_27),s('type.list.list'('type.ast.exp'),V_27es_27))))) | (?[V_27v3_27, V_27e_7c49_7c_27, V_27e2_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v3_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))))) | (?[V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27),s('type.ast.exp',V_27e3_27))))) | (?[V_27e_27, V_27pes_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) | (?[V_27xo_27, V_27e_27, V_27b_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27xo_27),s('type.ast.exp',V_27e_27),s('type.ast.exp',V_27b_27))))) | (?[V_27defs_27, V_27b_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27),s('type.ast.exp',V_27b_27))))) | (s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_1'(s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | (?[V_27e_27, V_27es_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_1'(s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.ast.exp'),V_27es_27))))))) | (s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INL_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))))))) | (?[V_27p_27, V_27e_27, V_27pes_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INL_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))))))) | (s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INR_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.NIL_0'))))))) | ?[V_27v4_27, V_27x_27, V_27e_27, V_27defs_27]: s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),V_27a_27) = s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INR_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27v4_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27)))))))))))))))))))))))))))).
fof('thm.evalProps.FV_UNION_extract3_def', axiom, ![V_27x_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_defs_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27x_27))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_UNION_1'(s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INR_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27x_27)))))))))).
fof('thm.evalProps.FV_UNION_extract2_def', axiom, ![V_27x_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_pes_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27x_27))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_UNION_1'(s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.sum.INL_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27x_27)))))))))).
fof('thm.evalProps.FV_UNION_extract|49|_def', axiom, ![V_27x_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_list_1'(s('type.list.list'('type.ast.exp'),V_27x_27))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_UNION_1'(s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INR_1'(s('type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.sum.INL_1'(s('type.list.list'('type.ast.exp'),V_27x_27)))))))).
fof('thm.evalProps.FV_UNION_extract|48|_def', axiom, ![V_27x_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27x_27))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_UNION_1'(s('type.sum.sum'('type.ast.exp','type.sum.sum'('type.list.list'('type.ast.exp'),'type.sum.sum'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.sum.INL_1'(s('type.ast.exp',V_27x_27)))))).
fof('thm.evalProps.FV_ind', axiom, ![V_27P_7c48_7c_27, V_27P_7c49_7c_27, V_27P2_27, V_27P3_27]: ((![V_27e_27]: (p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_27)))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27e_27))))))) & (![V_27e_27, V_27pes_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),V_27P2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))))) & (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_7c48_7c_27)))))) & (![V_27v_7c49_7c_27, V_27ls_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.exp'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.exp'),V_27ls_27)))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v_7c49_7c_27),s('type.list.list'('type.ast.exp'),V_27ls_27))))))) & (![V_27id_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27)))))) & (![V_27x_27, V_27e_27]: (p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_27)))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))))) & (![V_27v2_27, V_27es_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.exp'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.exp'),V_27es_27)))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v2_27),s('type.list.list'('type.ast.exp'),V_27es_27))))))) & (![V_27v3_27, V_27e_7c49_7c_27, V_27e2_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e2_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v3_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))))))) & (![V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e2_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e3_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27),s('type.ast.exp',V_27e3_27))))))) & (![V_27e_27, V_27pes_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),V_27P2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))))) & (![V_27xo_27, V_27e_27, V_27b_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27b_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27xo_27),s('type.ast.exp',V_27e_27),s('type.ast.exp',V_27b_27))))))) & (![V_27defs_27, V_27b_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27b_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),V_27P3_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27),s('type.ast.exp',V_27b_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.exp'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0')))) & (![V_27e_27, V_27es_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.ast.exp'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.exp'),V_27es_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.ast.exp'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.ast.exp'),V_27es_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),V_27P2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0')))) & (![V_27p_27, V_27e_27, V_27pes_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),V_27P2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),V_27P2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),V_27P3_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.NIL_0')))) & ![V_27v4_27, V_27x_27, V_27e_27, V_27defs_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27e_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),V_27P3_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),V_27P3_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27v4_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27)))))))))))))))))))))))) => (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_7c48_7c_27),s('type.ast.exp',V_27v_7c48_7c_27)))) & (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.ast.exp'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.exp'),V_27v_7c48_7c_27)))) & (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'bool'),V_27P2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c48_7c_27)))) & ![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'bool'),V_27P3_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v_7c48_7c_27))))))))).
fof('thm.evalProps.FV_def|split|0', axiom, ![V_27e_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27e_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_27)))).
fof('thm.evalProps.FV_def|split|1', axiom, ![V_27pes_27, V_27e_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_pes_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27)))))).
fof('thm.evalProps.FV_def|split|2', axiom, ![V_27v_7c48_7c_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_7c48_7c_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.FV_def|split|3', axiom, ![V_27v_7c49_7c_27, V_27ls_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v_7c49_7c_27),s('type.list.list'('type.ast.exp'),V_27ls_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_list_1'(s('type.list.list'('type.ast.exp'),V_27ls_27)))).
fof('thm.evalProps.FV_def|split|4', axiom, ![V_27id_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.INSERT_2'(s('type.ast.id'('type.list.list'('type.string.char')),V_27id_27),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')))).
fof('thm.evalProps.FV_def|split|5', axiom, ![V_27x_27, V_27e_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.DIFF_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.INSERT_2'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27x_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')))))).
fof('thm.evalProps.FV_def|split|6', axiom, ![V_27v2_27, V_27es_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v2_27),s('type.list.list'('type.ast.exp'),V_27es_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_list_1'(s('type.list.list'('type.ast.exp'),V_27es_27)))).
fof('thm.evalProps.FV_def|split|7', axiom, ![V_27v3_27, V_27e2_27, V_27e_7c49_7c_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v3_27),s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_7c49_7c_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e2_27)))))).
fof('thm.evalProps.FV_def|split|8', axiom, ![V_27e3_27, V_27e2_27, V_27e_7c49_7c_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27e_7c49_7c_27),s('type.ast.exp',V_27e2_27),s('type.ast.exp',V_27e3_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_7c49_7c_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e2_27))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e3_27)))))).
fof('thm.evalProps.FV_def|split|9', axiom, ![V_27pes_27, V_27e_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_pes_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27)))))).
fof('thm.evalProps.FV_def|split|10', axiom, ![V_27xo_27, V_27e_27, V_27b_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27xo_27),s('type.ast.exp',V_27e_27),s('type.ast.exp',V_27b_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.DIFF_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27b_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27xo_27),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1x0_3'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.INSERT_0'),s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')))))))))).
fof('thm.evalProps.FV_def|split|11', axiom, ![V_27defs_27, V_27b_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27),s('type.ast.exp',V_27b_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.DIFF_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_defs_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27b_27))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.ast.id'('type.list.list'('type.string.char'))),'const.combin.o_2'(s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.list.list'('type.string.char')),'const.pair.FST_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27)))))))).
fof('thm.evalProps.FV_def|split|12', axiom, s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_list_1'(s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.FV_def|split|13', axiom, ![V_27es_27, V_27e_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_list_1'(s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.ast.exp'),V_27es_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_list_1'(s('type.list.list'('type.ast.exp'),V_27es_27)))))).
fof('thm.evalProps.FV_def|split|14', axiom, s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_pes_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0'))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.FV_def|split|15', axiom, ![V_27pes_27, V_27p_27, V_27e_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_pes_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.DIFF_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.IMAGE_2'(s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_pes_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27)))))).
fof('thm.evalProps.FV_def|split|16', axiom, s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_defs_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.NIL_0'))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.FV_def|split|17', axiom, ![V_27x_27, V_27v4_27, V_27e_27, V_27defs_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_defs_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27v4_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.ast.exp',V_27e_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.DIFF_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',V_27e_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.INSERT_2'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27x_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_defs_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27)))))).
fof('ARITY_0_1_const.evalProps.FV', axiom, ![VV0]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'happ'(s('fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.evalProps.FV_0'),s('type.ast.exp',VV0))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp',VV0)))).
fof('thm.evalProps.FV_pes_MAP', axiom, ![V_27pes_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_pes_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.BIGUNION_1'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'bool'),'happ'(s('fun'('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'bool')),'const.pred_set.IMAGE_1'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.pair.UNCURRY_1'(s('fun'('type.ast.pat','fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x00x01x10_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.DIFF_0'),s('fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.evalProps.FV_0'),s('fun'('type.ast.pat','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.pred_set.IMAGE_1'(s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'))),s('fun'('type.ast.pat','fun'('type.list.list'('type.string.char'),'bool')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'bool')),'const.list.LIST_TO_SET_0'),s('fun'('type.ast.pat','type.list.list'('type.list.list'('type.string.char'))),'_dst_x1x0_2'(s('fun'('type.ast.pat','fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char')))),'const.ast.pat_bindings_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))))))))))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool')),'const.list.LIST_TO_SET_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27)))))))).
fof('thm.evalProps.FV_defs_MAP', axiom, ![V_27ls_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_defs_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27ls_27))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.BIGUNION_1'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'bool'),'const.pred_set.IMAGE_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x0_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'_dst_x00x01x10_3'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.DIFF_0'),s('fun'('type.ast.exp','fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'const.evalProps.FV_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x0x1x0_3'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'))),'const.pred_set.INSERT_0'),s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0'))))))))))),s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27ls_27)))))))).
fof('thm.evalProps.FV_dec_def|split|0', axiom, ![V_27p_27, V_27e_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_dec_1'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27e_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.bool.ARB_0'))))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0')))))))).
fof('thm.evalProps.FV_dec_def|split|1', axiom, ![V_27defs_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_dec_1'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_1'(s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27defs_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.bool.ARB_0')))))))).
fof('thm.evalProps.FV_dec_def|split|2', axiom, ![V_27v_7c48_7c_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_dec_1'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27v_7c48_7c_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.FV_dec_def|split|3', axiom, ![V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_dec_1'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),V_27v_7c49_7c_27),s('type.list.list'('type.string.char'),V_27v2_27),s('type.ast.t',V_27v3_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.FV_dec_def|split|4', axiom, ![V_27v4_27, V_27v5_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_dec_1'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),V_27v4_27),s('type.list.list'('type.ast.t'),V_27v5_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.new_dec_vs_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.new_dec_vs_1'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27v_7c48_7c_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')).
fof('thm.evalProps.new_dec_vs_def|split|1', axiom, ![V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.new_dec_vs_1'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),V_27v_7c49_7c_27),s('type.list.list'('type.string.char'),V_27v2_27),s('type.ast.t',V_27v3_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')).
fof('thm.evalProps.new_dec_vs_def|split|2', axiom, ![V_27v4_27, V_27v5_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.new_dec_vs_1'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),V_27v4_27),s('type.list.list'('type.ast.t'),V_27v5_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')).
fof('thm.evalProps.new_dec_vs_def|split|3', axiom, ![V_27p_27, V_27e_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.new_dec_vs_1'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27e_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.ast.pat_bindings_2'(s('type.ast.pat',V_27p_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))).
fof('thm.evalProps.new_dec_vs_def|split|4', axiom, ![V_27funs_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.new_dec_vs_1'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27funs_27)))).
fof('thm.evalProps.FV_decs_def|split|0', axiom, s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_decs_1'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.FV_decs_def|split|1', axiom, ![V_27d_27, V_27ds_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_decs_1'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec',V_27d_27),s('type.list.list'('type.ast.dec'),V_27ds_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_dec_1'(s('type.ast.dec',V_27d_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.DIFF_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_decs_1'(s('type.list.list'('type.ast.dec'),V_27ds_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.new_dec_vs_1'(s('type.ast.dec',V_27d_27)))))))))))).
fof('thm.evalProps.FV_top_def|split|0', axiom, ![V_27d_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_top_1'(s('type.ast.top','const.ast.Tdec_1'(s('type.ast.dec',V_27d_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_dec_1'(s('type.ast.dec',V_27d_27)))).
fof('thm.evalProps.FV_top_def|split|1', axiom, ![V_27mn_27, V_27v_7c48_7c_27, V_27ds_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_top_1'(s('type.ast.top','const.ast.Tmod_3'(s('type.list.list'('type.string.char'),V_27mn_27),s('type.option.option'('type.list.list'('type.ast.spec')),V_27v_7c48_7c_27),s('type.list.list'('type.ast.dec'),V_27ds_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_decs_1'(s('type.list.list'('type.ast.dec'),V_27ds_27)))).
fof('thm.evalProps.new_top_vs_def|split|0', axiom, ![V_27d_27]: s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.evalProps.new_top_vs_1'(s('type.ast.top','const.ast.Tdec_1'(s('type.ast.dec',V_27d_27))))) = s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.new_dec_vs_1'(s('type.ast.dec',V_27d_27)))))).
fof('ARITY_1_2_const.ast.Long', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.ast.id'(V_27A_27),'happ'(s('fun'(V_27A_27,'type.ast.id'(V_27A_27)),'const.ast.Long_1'(s('type.list.list'('type.string.char'),VV0))),s(V_27A_27,VV1))) = s('type.ast.id'(V_27A_27),'const.ast.Long_2'(s('type.list.list'('type.string.char'),VV0),s(V_27A_27,VV1)))).
fof('ARITY_0_1_const.evalProps.new_dec_vs', axiom, ![VV0]: s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char'))),'const.evalProps.new_dec_vs_0'),s('type.ast.dec',VV0))) = s('type.list.list'('type.list.list'('type.string.char')),'const.evalProps.new_dec_vs_1'(s('type.ast.dec',VV0)))).
fof('thm.evalProps.new_top_vs_def|split|1', axiom, ![V_27mn_27, V_27v_7c48_7c_27, V_27ds_27]: s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.evalProps.new_top_vs_1'(s('type.ast.top','const.ast.Tmod_3'(s('type.list.list'('type.string.char'),V_27mn_27),s('type.option.option'('type.list.list'('type.ast.spec')),V_27v_7c48_7c_27),s('type.list.list'('type.ast.dec'),V_27ds_27))))) = s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.MAP_2'(s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Long_1'(s('type.list.list'('type.string.char'),V_27mn_27))),s('type.list.list'('type.list.list'('type.string.char')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.list.list'('type.string.char'))),'const.list.REVERSE_1'(s('type.list.list'('type.list.list'('type.list.list'('type.string.char'))),'const.list.MAP_2'(s('fun'('type.ast.dec','type.list.list'('type.list.list'('type.string.char'))),'const.evalProps.new_dec_vs_0'),s('type.list.list'('type.ast.dec'),V_27ds_27)))))))))).
fof('thm.evalProps.FV_prog_def|split|0', axiom, s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_prog_1'(s('type.list.list'('type.ast.top'),'const.list.NIL_0'))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.EMPTY_0')).
fof('thm.evalProps.FV_prog_def|split|1', axiom, ![V_27t_27, V_27ts_27]: s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_prog_1'(s('type.list.list'('type.ast.top'),'const.list.CONS_2'(s('type.ast.top',V_27t_27),s('type.list.list'('type.ast.top'),V_27ts_27))))) = s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_top_1'(s('type.ast.top',V_27t_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.pred_set.DIFF_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.evalProps.FV_prog_1'(s('type.list.list'('type.ast.top'),V_27ts_27))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.evalProps.new_top_vs_1'(s('type.ast.top',V_27t_27)))))))))).
fof('thm.evalProps.all_env_dom_def', axiom, ![V_27C_27,V_27D_27,V_27B_27,V_27A_27]: ![V_27envM_27, V_27envC_27, V_27envE_27]: s('fun'('type.ast.id'(V_27A_27),'bool'),'const.evalProps.all_env_dom_1'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))),'happ'(s('fun'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),'fun'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))))),'const.pair.,_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),V_27envM_27))),s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)))),'happ'(s('fun'(V_27C_27,'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'(V_27A_27,V_27D_27))))),'const.pair.,_0'),s(V_27C_27,V_27envC_27))),s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),V_27envE_27))))))) = s('fun'('type.ast.id'(V_27A_27),'bool'),'const.pred_set.UNION_2'(s('fun'('type.ast.id'(V_27A_27),'bool'),'const.pred_set.IMAGE_2'(s('fun'(V_27A_27,'type.ast.id'(V_27A_27)),'const.ast.Short_0'),s('fun'(V_27A_27,'bool'),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'(V_27A_27,'bool')),'const.list.LIST_TO_SET_0'),s('type.list.list'(V_27A_27),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),'type.list.list'(V_27A_27)),'const.list.MAP_1'(s('fun'('type.pair.prod'(V_27A_27,V_27D_27),V_27A_27),'const.pair.FST_0'))),s('type.list.list'('type.pair.prod'(V_27A_27,V_27D_27)),V_27envE_27))))))),s('fun'('type.ast.id'(V_27A_27),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27),'type.pair.prod'('type.ast.id'(V_27A_27),'bool')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'type.pair.prod'('type.ast.id'(V_27A_27),'bool'))),'_dst_x00x11x11_3'(s('fun'('type.ast.id'(V_27A_27),'fun'('bool','type.pair.prod'('type.ast.id'(V_27A_27),'bool'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'type.ast.id'(V_27A_27))),'const.ast.Long_0'),s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'bool'),'bool'),'?_0'),s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'bool'))),'_dst_x000x101x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'bool')),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'fun'('type.option.option'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'bool')),'=_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),'const.alist.ALOOKUP_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),V_27envM_27))),s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'type.option.option'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),'const.option.SOME_0'))),s('fun'(V_27A_27,'fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'bool')),'_dst_x00x10x01_3'(s('fun'(V_27A_27,'fun'('fun'(V_27A_27,'bool'),'bool')),'const.bool.IN_0'),s('fun'(V_27A_27,V_27A_27),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'fun'(V_27A_27,'bool')),'_dst_x0x1_2'(s('fun'('type.list.list'(V_27A_27),'fun'(V_27A_27,'bool')),'const.list.LIST_TO_SET_0'),s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'type.list.list'(V_27A_27)),'const.list.MAP_1'(s('fun'('type.pair.prod'(V_27A_27,V_27B_27),V_27A_27),'const.pair.FST_0')))))))))))))))))))).
fof('thm.evalProps.evaluate_no_new_types_mods|split|0', axiom, ![V_27FFI_27]: ![V_27ck_27, V_27env_27, V_27st_27, V_27e_27, V_27r_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27),s('type.ast.exp',V_27e_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27)))) => (s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.semanticPrimitives.state_defined_types_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))) = s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.semanticPrimitives.state_defined_types_1'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27))))) & s('fun'('type.list.list'('type.string.char'),'bool'),'const.semanticPrimitives.state_defined_mods_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))) = s('fun'('type.list.list'('type.string.char'),'bool'),'const.semanticPrimitives.state_defined_mods_1'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27)))))))).
fof('thm.evalProps.evaluate_no_new_types_mods|split|1', axiom, ![V_27FFI_27]: ![V_27ck_27, V_27env_27, V_27st_27, V_27es_27, V_27r_27]: (p(s('bool','const.bigStep.evaluate_list_5'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27),s('type.list.list'('type.ast.exp'),V_27es_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),V_27r_27)))) => (s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.semanticPrimitives.state_defined_types_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))) = s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.semanticPrimitives.state_defined_types_1'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),V_27r_27))))) & s('fun'('type.list.list'('type.string.char'),'bool'),'const.semanticPrimitives.state_defined_mods_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))) = s('fun'('type.list.list'('type.string.char'),'bool'),'const.semanticPrimitives.state_defined_mods_1'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),V_27r_27)))))))).
fof('thm.evalProps.evaluate_no_new_types_mods|split|2', axiom, ![V_27FFI_27]: ![V_27ck_27, V_27env_27, V_27st_27, V_27v_27, V_27pes_27, V_27err__v_27, V_27r_27]: (p(s('bool','const.bigStep.evaluate_match_7'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27),s('type.semanticPrimitives.v',V_27v_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27),s('type.semanticPrimitives.v',V_27err__v_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27)))) => (s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.semanticPrimitives.state_defined_types_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))) = s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.semanticPrimitives.state_defined_types_1'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27))))) & s('fun'('type.list.list'('type.string.char'),'bool'),'const.semanticPrimitives.state_defined_mods_1'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))) = s('fun'('type.list.list'('type.string.char'),'bool'),'const.semanticPrimitives.state_defined_mods_1'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27)))))))).
fof('thm.evalProps.evaluate_ignores_types_mods|split|0', conjecture, ![V_27FFI_27]: ![V_27ck_27, V_27env_27, V_27st_27, V_27e_27, V_27r_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27),s('type.ast.exp',V_27e_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27)))) => ![V_27x_27, V_27y_27]: p(s('bool','const.bigStep.evaluate_5'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),'const.semanticPrimitives.state_defined_types_fupd_2'(s('fun'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.semanticPrimitives.tid_or_exn','bool')),'const.combin.K_1'(s('fun'('type.semanticPrimitives.tid_or_exn','bool'),V_27x_27))),s('type.semanticPrimitives.state'(V_27FFI_27),'const.semanticPrimitives.state_defined_mods_fupd_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'fun'('type.list.list'('type.string.char'),'bool')),'const.combin.K_1'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27y_27))),s('type.semanticPrimitives.state'(V_27FFI_27),V_27st_27))))),s('type.ast.exp',V_27e_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27FFI_27),'const.semanticPrimitives.state_defined_types_fupd_2'(s('fun'('fun'('type.semanticPrimitives.tid_or_exn','bool'),'fun'('type.semanticPrimitives.tid_or_exn','bool')),'const.combin.K_1'(s('fun'('type.semanticPrimitives.tid_or_exn','bool'),V_27x_27))),s('type.semanticPrimitives.state'(V_27FFI_27),'const.semanticPrimitives.state_defined_mods_fupd_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'fun'('type.list.list'('type.string.char'),'bool')),'const.combin.K_1'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27y_27))),s('type.semanticPrimitives.state'(V_27FFI_27),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27))))))),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.SND_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27r_27)))))))))).
