include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
include('incl/reg_allocProof.ax').
include('incl/bviProps.ax').
include('incl/bvpProps.ax').
include('incl/bvp_simpProof.ax').
include('incl/bvp_spaceProof.ax').
include('incl/bvl_jumpProof.ax').
include('incl/wellorder.ax').
include('incl/cardinal.ax').
include('incl/hrat.ax').
include('incl/hreal.ax').
include('incl/realax.ax').
include('incl/real.ax').
include('incl/topology.ax').
include('incl/nets.ax').
include('incl/seq.ax').
include('incl/lim.ax').
include('incl/powser.ax').
include('incl/transc.ax').
include('incl/intreal.ax').
include('incl/binary_ieee.ax').
include('incl/tailrec.ax').
include('incl/prog.ax').
include('incl/temporal.ax').
include('incl/address.ax').
include('incl/state.ax').
include('incl/temporal_state.ax').
include('incl/machine_ieee.ax').
include('incl/bitstring.ax').
include('incl/arm.ax').
include('incl/blast.ax').
include('incl/update.ax').
include('incl/arm_step.ax').
include('incl/arm6_target.ax').
include('incl/arm6_eval_encode.ax').
include('incl/mlstring.ax').
include('incl/patternMatches.ax').
include('incl/ml_translator.ax').
include('incl/ml_optimise.ax').
include('incl/ml_pmatch.ax').
include('incl/mini_prelude.ax').
include('incl/bag.ax').
include('incl/benchmark.ax').
include('incl/arm8.ax').
include('incl/arm8_step.ax').
include('incl/clos_relation.ax').
include('incl/clos_relationProps.ax').
include('incl/clos_removeProof.ax').
include('incl/simpleSexp.ax').
include('incl/fromSexp.ax').
include('incl/word_inst.ax').
include('incl/word_alloc.ax').
include('incl/word_remove.ax').
include('incl/word_to_word.ax').
include('incl/stackLang.ax').
include('incl/bvp_to_word.ax').
include('incl/stack_alloc.ax').
include('incl/riscv.ax').
include('incl/riscv_step.ax').
include('incl/std_prelude.ax').
include('incl/holSyntaxLib.ax').
include('incl/holSyntax.ax').
include('incl/holSyntaxExtra.ax').
include('incl/ml_module_demo.ax').
include('incl/bvp_liveProof.ax').
include('incl/PhysicistsQueue.ax').
include('incl/holBoolSyntax.ax').
include('incl/holAxiomsSyntax.ax').
include('incl/setSpec.ax').
include('incl/holSemantics.ax').
include('incl/holSemanticsExtra.ax').
include('incl/holBool.ax').
include('incl/commonUnif.ax').
include('incl/term.ax').
include('incl/subst.ax').
include('incl/walk.ax').
include('incl/walkstar.ax').
include('incl/unifDef.ax').
include('incl/unifProps.ax').
include('incl/redUnif.ax').
include('incl/parmove.ax').
include('incl/word_to_stack.ax').
include('incl/bvl_inlineProof.ax').
include('incl/clos_known.ax').
include('incl/clos_knownProof.ax').
include('incl/okasaki_misc.ax').
include('incl/UnbalancedSet.ax').
include('incl/mips.ax').
include('incl/mips_step.ax').
include('incl/mips_target.ax').
include('incl/mips_target_correct.ax').
include('incl/bvl_constProof.ax').
include('incl/int_bitwise.ax').
include('incl/copying_gc.ax').
include('incl/bvp_to_wordProps.ax').
include('incl/jrhSet.ax').
include('incl/BankersQueue.ax').
include('incl/cmlPEG.ax').
include('incl/clos_numberProof.ax').
include('incl/cmlParse.ax').
include('incl/holKernel.ax').
include('incl/reader.ax').
include('incl/x64.ax').
include('incl/source_to_modProof.ax').
include('incl/collapse.ax').
include('incl/infer_t.ax').
include('incl/unify.ax').
include('incl/infer.ax').
include('incl/inferProps.ax').
fof('thm.infer_eComplete.pure_add_constraints_success', axiom, ![V_27s_27, V_27constraints_27, V_27s_7c39_7c_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))))) => (p(s('bool','const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))))) & (p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))))))))).
fof('thm.infer_eComplete.t_compat_pure_add_constraints_|49|', axiom, ![V_27ls_27, V_27s_27, V_27sx_27]: ((p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'_dst_x00x10x01_3'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'=_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_27))))) => ?[V_27si_27]: (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27si_27)))) & p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27si_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))))))).
fof('thm.infer_eComplete.t_compat_pure_add_constraints_2', axiom, ![V_27ls_27, V_27s_27, V_27sx_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'_dst_x00x10x01_3'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'=_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_27)))))).
fof('thm.infer_eComplete.pure_add_constraints_functional', axiom, ![V_27constraints_27, V_27s_27, V_27s_7c39_7c_27, V_27s_7c39_7c_7c39_7c_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27)))))) => s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27))).
fof('thm.infer_eComplete.infer_eComplete_4_prove_ltb', axiom, ![V_27sx_27, V_27s_27, V_27b_27, V_27a_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27a_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27b_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))))) => ?[V_27si_27]: (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27b_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27a_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27si_27)))) & p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27si_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))))))).
fof('thm.infer_eComplete.pure_add_constraints_swap', axiom, ![V_27sx_27, V_27s_27, V_27b_27, V_27a_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27a_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27b_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27))))) => ?[V_27si_27]: (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27b_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27a_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27si_27)))) & (p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27si_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27)))) & p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27sx_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27si_27)))))))).
fof('thm.infer_eComplete.infer_eComplete_6_prove_ltb', axiom, ![V_27uvar_27, V_27s_27, V_27n_27, V_27lim_27]: ((p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27lim_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t',V_27n_27)))) & p(s('bool','const.relation.WF_1'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.unify.t_vR_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))))) => p(s('bool','const.relation.WF_1'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.unify.t_vR_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.pair.prod'('type.num.num','type.infer_t.infer_t'),'const.pair.,_2'(s('type.num.num',V_27uvar_27),s('type.infer_t.infer_t',V_27n_27)))))))))))).
fof('thm.infer_eComplete.infer_eComplete_7_prove_ltb|split|0', axiom, ![V_27t_27, V_27s_27, V_27v_27, V_27lim_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27lim_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t',V_27t_27))))) => ~ (p(s('bool','const.unify.t_oc_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_27),s('type.num.num',V_27v_27))))))).
fof('thm.infer_eComplete.infer_eComplete_7_prove_ltb|split|1', axiom, ![V_27ts_27, V_27s_27, V_27v_27, V_27lim_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27lim_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27))))) => ~ (p(s('bool','const.list.EXISTS_2'(s('fun'('type.infer_t.infer_t','bool'),'_dst_x1x0_2'(s('fun'('type.infer_t.infer_t','fun'('type.num.num','bool')),'const.unify.t_oc_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27))))))).
fof('thm.infer_eComplete.infer_eComplete_8_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27next__uvar_27, V_27n_27]: (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num',V_27next__uvar_27))) => s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num',V_27A_27),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.num.num',V_27A_27),V_27s_27),s('type.pair.prod'('type.num.num',V_27A_27),'const.pair.,_2'(s('type.num.num',V_27next__uvar_27),s(V_27A_27,V_27n_27))))))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27next__uvar_27))))))).
fof('ARITY_1_3_const.infer.pure_add_constraints', axiom, ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.infer.pure_add_constraints_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),VV1))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV2))) = s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),VV1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV2)))).
fof('thm.infer_eComplete.pure_add_constraints_exists', axiom, ![V_27s_27, V_27ts_27, V_27next__uvar_27, V_27lim_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num',V_27next__uvar_27))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.ast.t','bool'),'const.typeSystem.check_freevars_2'(s('type.num.num',V_27lim_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),V_27ts_27)))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.num.num'),'bool'),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'bool'),'fun'('type.list.list'('type.num.num'),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11x11_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))),'_dst_x000x001x110_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'bool')),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.infer.pure_add_constraints_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.finite_map.FUPDATE_LIST_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.ZIP_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.infer_t.infer_t')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'))),'const.list.ZIP_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.infer_t.infer_t')),'const.list.MAP_1'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'))))))))),s('type.list.list'('type.infer_t.infer_t'),'happ'(s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.infer_t.infer_t')),'const.list.MAP_1'(s('fun'('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'))),s('type.list.list'('type.ast.t'),V_27ts_27))))))),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',V_27next__uvar_27))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),V_27ts_27)))))))))))).
fof('thm.infer_eComplete.infer_eComplete_|49||48|_prove_ltb', axiom, ![V_27s_27]: (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) => ![V_27tvs_27, V_27uvars_27, V_27t_27]: (p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27tvs_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_27)))))) => p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27tvs_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t',V_27t_27))))))).
fof('thm.infer_eComplete.infer_eComplete_|49||49|_prove_ltb', axiom, ![V_27A_27]: ![V_27tvs_27, V_27s_27]: (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) => (![V_27t_27]: (![V_27uv_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27uv_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))) => p(s('bool','const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27))))))))) => s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.o_f_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_inc_1'(s('type.num.num',V_27tvs_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))),s('type.infer_t.infer_t',V_27t_27))) = s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t',V_27t_27)))) & ![V_27ts_27, V_27t_27]: (![V_27uv_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27uv_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))) => p(s('bool','const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27))))))))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'_dst_x0x1x1_3'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'=_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.o_f_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_inc_1'(s('type.num.num',V_27tvs_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27)))))))).
fof('thm.infer_eComplete.infer_eComplete_|49|2_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27s_27, V_27ls_27]: (s('fun'(V_27A_27,'bool'),'const.pred_set.INTER_2'(s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),'const.list.MAP_2'(s('fun'('type.pair.prod'(V_27A_27,V_27B_27),V_27A_27),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),V_27ls_27))))),s('fun'(V_27A_27,'bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),V_27s_27))))) = s('fun'(V_27A_27,'bool'),'const.pred_set.EMPTY_0') => p(s('bool','const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),V_27s_27),s('type.finite_map.fmap'(V_27A_27,V_27B_27),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),V_27s_27),s('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),V_27ls_27)))))))).
fof('thm.infer_eComplete.infer_eComplete_|49|3_prove_ltb', axiom, ![V_27s_27]: (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) => ![V_27t_27]: s('type.infer_t.infer_t','const.unify.t_vwalk_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.o_f_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_inc_1'(s('type.num.num','const.num.|48|_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.num.num',V_27t_27))) = s('type.infer_t.infer_t','const.unify.t_vwalk_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.num.num',V_27t_27))))).
fof('thm.infer_eComplete.infer_eComplete_|49|4_prove_ltb', axiom, ![V_27s_27]: (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) => ![V_27t_27]: s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.o_f_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_inc_1'(s('type.num.num','const.num.|48|_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t',V_27t_27))) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_27))))).
fof('thm.infer_eComplete.infer_eComplete_|49|9_prove_ltb', axiom, ((![V_27t_27]: s('type.ast.t','happ'(s('fun'('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_subst_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))),s('type.ast.t',V_27t_27))) = s('type.ast.t',V_27t_27) & ![V_27ts_27]: s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s('fun'('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_subst_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),V_27ts_27))) = s('type.list.list'('type.ast.t'),V_27ts_27)) <=> (![V_27t_27]: s('type.ast.t','happ'(s('fun'('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_subst_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))),s('type.ast.t',V_27t_27))) = s('type.ast.t',V_27t_27) & ![V_27ts_27]: s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s('fun'('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_subst_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),V_27ts_27))) = s('type.list.list'('type.ast.t'),V_27ts_27)))).
fof('thm.infer_eComplete.infer_eComplete_2|49|_prove_ltb', axiom, ![V_27tenvE_27, V_27tenv_27, V_27s_7c39_7c_27, V_27s_27]: ((p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & p(s('bool','const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),V_27tenv_27),s('type.typeSystem.tenv_val',V_27tenvE_27)))))) => p(s('bool','const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),V_27tenv_27),s('type.typeSystem.tenv_val',V_27tenvE_27)))))).
fof('thm.infer_eComplete.infer_eComplete_22_prove_ltb', axiom, ![V_27A_27]: ![V_27A_7c48_7c_27]: (![V_27x_27]: ~ (s('type.option.option'(V_27A_27),V_27A_7c48_7c_27) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27x_27)))) => s('type.option.option'(V_27A_27),V_27A_7c48_7c_27) = s('type.option.option'(V_27A_27),'const.option.NONE_0'))).
fof('ARITY_1_2_const.unify.t_walk', axiom, ![VV0, VV1]: s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walk_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0))),s('type.infer_t.infer_t',VV1))) = s('type.infer_t.infer_t','const.unify.t_walk_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0),s('type.infer_t.infer_t',VV1)))).
fof('thm.infer_eComplete.infer_eComplete_23_prove_ltb', axiom, ![V_27s_27, V_27s_7c39_7c_27]: ((p(s('bool','const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))))) => (![V_27h_27]: s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walk_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))),s('type.infer_t.infer_t',V_27h_27))))) = s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))),s('type.infer_t.infer_t',V_27h_27))) & ![V_27hs_27]: s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.combin.o_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walk_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))))),s('type.list.list'('type.infer_t.infer_t'),V_27hs_27))) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))),s('type.list.list'('type.infer_t.infer_t'),V_27hs_27)))))).
fof('thm.infer_eComplete.infer_eComplete_24_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27s_7c39_7c_27, V_27h_27, V_27t_27, V_27constraints_27, V_27s_7c39_7c_7c39_7c_27]: (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',V_27h_27),s('type.infer_t.infer_t',V_27t_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27)))) => ?[V_27s_7c39_7c_7c48_7c_27]: (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c48_7c_27)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c48_7c_27),s('type.infer_t.infer_t',V_27h_27),s('type.infer_t.infer_t',V_27t_27))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27)))))).
fof('thm.infer_eComplete.infer_eComplete_25_prove_ltb', axiom, ![V_27t_7c49_7c_27, V_27t2_27, V_27st_27, V_27st_7c39_7c_27, V_27x_27]: (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.infer_t.infer_t',V_27t2_27),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',V_27x_27))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))) <=> (s('type.one.one',V_27x_27) = s('type.one.one','const.one.one_0') & (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.infer_t.infer_t',V_27t2_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))))).
fof('thm.infer_eComplete.infer_eComplete_26_prove_ltb', axiom, ![V_27y_27, V_27x_27, V_27st_7c39_7c_7c39_7c_27, V_27st_27, V_27ls_7c39_7c_27, V_27ls_27]: (?[V_27st_7c39_7c_27]: ((p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))) = s('type.num.num',V_27x_27)) & (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_7c39_7c_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_7c39_7c_27)))))) & s('type.num.num',V_27y_27) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))) <=> (p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_7c39_7c_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_7c39_7c_27)))))) & s('type.num.num',V_27y_27) = s('type.num.num',V_27x_27)))).
fof('thm.infer_eComplete.infer_eComplete_27_prove_ltb|split|0', axiom, ![V_27s_27, V_27t_27, V_27t_7c39_7c_27]: (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) => (s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_27))) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_7c39_7c_27))) => s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_27),s('type.infer_t.infer_t',V_27t_7c39_7c_27))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))).
fof('thm.infer_eComplete.infer_eComplete_27_prove_ltb|split|1', axiom, ![V_27s_27, V_27ts_27, V_27ts_7c39_7c_27]: (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) => (s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27))) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_7c39_7c_27))) => s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.ts_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27),s('type.list.list'('type.infer_t.infer_t'),V_27ts_7c39_7c_27))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))).
fof('thm.infer_eComplete.pure_add_constraints_ignore', axiom, ![V_27s_27, V_27ls_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'_dst_x00x10x01_3'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'=_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_27))))) => p(s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27ls_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))).
fof('thm.infer_eComplete.infer_eComplete_29_prove_ltb', axiom, ![V_27tvs_27, V_27b_27, V_27a_27]: (p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27)))) => ![V_27uv_27]: ((p(s('bool','const.bool.IN_2'(s('type.num.num',V_27uv_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27)))))) & p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27tvs_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27))))))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27uv_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27)))))) & p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27tvs_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27)))))))))))).
fof('thm.infer_eComplete.infer_eComplete_3|48|_prove_ltb', axiom, ![V_27x_27, V_27uv_27, V_27s_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27x_27))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27)))) => ?[V_27k_27]: (s('type.infer_t.infer_t',V_27x_27) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27k_27))) & ((s('type.num.num',V_27k_27) = s('type.num.num',V_27uv_27) => ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27k_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))))) & (~ (s('type.num.num',V_27k_27) = s('type.num.num',V_27uv_27)) => p(s('bool','const.bool.IN_2'(s('type.num.num',V_27k_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))))))))).
fof('thm.infer_eComplete.check_t_less|split|0', axiom, ![V_27uvars_27, V_27s_27, V_27n_27, V_27t_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (![V_27uv_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27uv_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))) => p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27))))))))) & p(s('bool','const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','bool'),V_27uvars_27),s('type.infer_t.infer_t',V_27t_27)))))) => p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.INTER_2'(s('fun'('type.num.num','bool'),V_27uvars_27),s('fun'('type.num.num','bool'),'const.pred_set.COMPL_1'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_27)))))))).
fof('thm.infer_eComplete.check_t_less|split|1', axiom, ![V_27uvars_27, V_27s_27, V_27n_27, V_27ts_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (![V_27uv_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27uv_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27))))))))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','bool'),V_27uvars_27))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27)))))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.INTER_2'(s('fun'('type.num.num','bool'),V_27uvars_27),s('fun'('type.num.num','bool'),'const.pred_set.COMPL_1'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))))))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27)))))))).
fof('thm.infer_eComplete.t_compat_bi_ground', axiom, ![V_27n_27, V_27b_27, V_27a_27]: ((![V_27uv_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27uv_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27)))))) => p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27))))))))) & (p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27)))) & p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27)))))) => (![V_27uv_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27uv_27),s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27)))))) => p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27))))))))) & (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27))) = s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27))) & (![V_27t_27]: s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27))),s('type.infer_t.infer_t',V_27t_27))) = s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27))),s('type.infer_t.infer_t',V_27t_27))) & ![V_27ts_27]: s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27a_27))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27))) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27b_27))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27)))))))).
fof('ARITY_2_3_const.infer.pure_add_constraints', axiom, ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.infer.pure_add_constraints_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),VV1))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV2))) = s('bool','const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),VV1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV2)))).
fof('ARITY_1_2_const.finite_map.SUBMAP', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.finite_map.fmap'(V_27A_27,V_27B_27),'bool'),'const.finite_map.SUBMAP_1'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),VV0))),s('type.finite_map.fmap'(V_27A_27,V_27B_27),VV1))) = s('bool','const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),VV0),s('type.finite_map.fmap'(V_27A_27,V_27B_27),VV1)))).
fof('ARITY_0_1_const.unify.t_wfs', axiom, ![VV0]: s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0))) = s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0)))).
fof('thm.infer_eComplete.infer_eComplete_33_prove_ltb', axiom, ![V_27t_27, V_27st_27, V_27s_27, V_27n_27, V_27constraints_27]: ((p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.infer.pure_add_constraints_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (![V_27uv_27]: (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27uv_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t','happ'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',V_27uv_27))))))))) & (p(s('bool','const.typeSystem.check_freevars_3'(s('type.num.num',V_27n_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'),s('type.ast.t',V_27t_27)))) & s('fun'('type.num.num','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))))))) => p(s('bool','const.bool.LET_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.infer.pure_add_constraints_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t','happ'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',V_27t_27))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.finite_map.SUBMAP_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.finite_map.SUBMAP_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.infer.pure_add_constraints_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t','happ'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',V_27t_27))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))))))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'=_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.infer_t.infer_t'),'_dst_x1x0_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.infer_t.infer_t','happ'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))))),s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',V_27t_27))))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','type.infer_t.infer_t')),'_dst_x00x10x01_3'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'_i_0_0'),s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'))))))))))))))))))))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.infer_t.infer_t'),'const.pair.,_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',V_27t_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'const.list.NIL_0')))))))))).
fof('thm.infer_eComplete.infer_eComplete_34_prove_ltb', axiom, ![V_27A_27]: ![V_27offset_27, V_27n_27, V_27ls_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27)))))) => s('type.option.option'(V_27A_27),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',V_27offset_27))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27ls_27))))))),s('type.list.list'(V_27A_27),V_27ls_27))))))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',V_27offset_27))),s('type.num.num',V_27n_27))))) = s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,'const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'(V_27A_27),V_27ls_27))))))).
fof('thm.infer_eComplete.infer_eComplete_35_prove_ltb', axiom, ![V_27s_7c39_7c_27, V_27s_27, V_27n_27, V_27h_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27h_27)))))))) => s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27h_27))) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27),s('type.infer_t.infer_t',V_27h_27))))).
fof('thm.infer_eComplete.extend_multi_props', axiom, ![V_27st_27, V_27constraints_27, V_27s_27, V_27ts_27, V_27n_27]: ((p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.infer.pure_add_constraints_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (![V_27uv_27]: (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('type.num.num',V_27uv_27))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.infer_t.infer_t','happ'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',V_27uv_27))))))))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.ast.t','bool'),'const.typeSystem.check_freevars_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),V_27ts_27)))) & s('fun'('type.num.num','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.num.num'),'bool'),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'bool'),'fun'('type.list.list'('type.num.num'),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11x11_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))),'_dst_x000x011x110_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'bool'))),'_dst_x000x110x001_3'(s('fun'('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.bool.LET_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))),'_dst_x000x011x111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.infer.pure_add_constraints_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.infer.pure_add_constraints_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'))),'const.list.APPEND_1'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.finite_map.SUBMAP_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.finite_map.SUBMAP_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),V_27ts_27))))))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool'))),'_dst_x000x001x111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),V_27ts_27))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')),'=_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','type.infer_t.infer_t')),'_dst_x00x10x01_3'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'_i_0_0'),s('fun'('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.num.num','type.infer_t.infer_t')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.infer_t.infer_t'),'type.infer_t.infer_t')),'const.list.EL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))))))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','type.infer_t.infer_t')),'_dst_x00x10x01_3'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'_i_0_0'),s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'))))))))))))))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.finite_map.FUPDATE_LIST_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.ZIP_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.infer_t.infer_t')))),'const.pair.,_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'))),'const.list.ZIP_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.infer_t.infer_t'),'type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.infer_t.infer_t')),'const.list.MAP_1'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'))))))))),s('type.list.list'('type.infer_t.infer_t'),'happ'(s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.infer_t.infer_t')),'const.list.MAP_1'(s('fun'('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'))),s('type.list.list'('type.ast.t'),V_27ts_27))))))),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),V_27ts_27)))))))))))).
fof('thm.infer_eComplete.infer_eComplete_37_prove_ltb', axiom, ![V_27ts_7c39_7c_27, V_27ts_27, V_27t_27, V_27st_27, V_27s_27, V_27op_27, V_27constraints_27, V_27n_27]: ((p(s('bool','const.typeSystem.type_op_3'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.t',V_27t_27)))) & (p(s('bool','const.infer.sub_completion_5'(s('type.num.num',V_27n_27),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))))) & (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))) & (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))) & (s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.ast.t'),'const.combin.o_2'(s('fun'('type.infer_t.infer_t','type.ast.t'),'const.inferProps.convert_t_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_7c39_7c_27))) = s('type.list.list'('type.ast.t'),V_27ts_27) & p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_7c39_7c_27)))))))))))) => ?[V_27t_7c39_7c_27, V_27st_7c39_7c_27, V_27s_7c39_7c_27, V_27constraints_7c39_7c_27]: (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.constrain_op_3'(s('type.ast.op',V_27op_27),s('type.list.list'('type.infer_t.infer_t'),V_27ts_7c39_7c_27),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.infer_t.infer_t',V_27t_7c39_7c_27))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))) & (p(s('bool','const.infer.sub_completion_5'(s('type.num.num',V_27n_27),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_7c39_7c_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27)))))))) & (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))) & s('type.ast.t',V_27t_27) = s('type.ast.t','happ'(s('fun'('type.infer_t.infer_t','type.ast.t'),'const.inferProps.convert_t_0'),s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))),s('type.infer_t.infer_t',V_27t_7c39_7c_27)))))))))))).
fof('thm.infer_eComplete.simp_tenv_invC_def', axiom, ![V_27A_27]: ![V_27s_27, V_27tvs_27, V_27tenv_27, V_27tenvE_27]: (p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.num.num',V_27tvs_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_27)))) <=> (![V_27n_27, V_27t_27]: (s('type.option.option'('type.ast.t'),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_27),s(V_27A_27,V_27n_27))) = s('type.option.option'('type.ast.t'),'const.option.SOME_1'(s('type.ast.t',V_27t_27))) => (p(s('bool','const.typeSystem.check_freevars_3'(s('type.num.num',V_27tvs_27),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'),s('type.ast.t',V_27t_27)))) & ?[V_27t_7c39_7c_27]: (s('type.option.option'('type.infer_t.infer_t'),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_27),s(V_27A_27,V_27n_27))) = s('type.option.option'('type.infer_t.infer_t'),'const.option.SOME_1'(s('type.infer_t.infer_t',V_27t_7c39_7c_27))) & s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',V_27t_27))) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_7c39_7c_27)))))) & ![V_27n_27, V_27t_7c39_7c_27]: (s('type.option.option'('type.infer_t.infer_t'),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_27),s(V_27A_27,V_27n_27))) = s('type.option.option'('type.infer_t.infer_t'),'const.option.SOME_1'(s('type.infer_t.infer_t',V_27t_7c39_7c_27))) => ?[V_27t_27]: s('type.option.option'('type.ast.t'),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_27),s(V_27A_27,V_27n_27))) = s('type.option.option'('type.ast.t'),'const.option.SOME_1'(s('type.ast.t',V_27t_27))))))).
fof('thm.infer_eComplete.infer_eComplete_39_prove_ltb', axiom, ![V_27A_27]: ![V_27s_27, V_27n_27]: p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),'const.list.NIL_0'))))).
fof('thm.infer_eComplete.infer_eComplete_4|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27tvs_27, V_27tenvE_27, V_27tenv_27, V_27s_7c39_7c_27, V_27s_27]: ((p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.num.num',V_27tvs_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_27)))) & p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))))) => p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27),s('type.num.num',V_27tvs_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_27)))))).
fof('thm.infer_eComplete.infer_eComplete_4|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27tvs_27, V_27tenvE_7c39_7c_27, V_27tenvE_27, V_27tenv_7c39_7c_27, V_27tenv_27, V_27s_7c39_7c_7c39_7c_27]: ((p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27),s('type.num.num',V_27tvs_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_27)))) & p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27),s('type.num.num',V_27tvs_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_7c39_7c_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_7c39_7c_27))))) => p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27),s('type.num.num',V_27tvs_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_7c39_7c_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.infer_t.infer_t')),V_27tenv_27))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_7c39_7c_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.ast.t')),V_27tenvE_27)))))))).
fof('thm.infer_eComplete.convert_bi_remove', axiom, ![V_27n_27, V_27m_27, V_27B_27, V_27A_27]: ((s('type.ast.t','const.inferProps.convert_t_1'(s('type.infer_t.infer_t',V_27A_27))) = s('type.ast.t','const.inferProps.convert_t_1'(s('type.infer_t.infer_t',V_27B_27))) & (p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t',V_27A_27)))) & p(s('bool','const.infer.check_t_3'(s('type.num.num',V_27m_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t',V_27B_27)))))) => s('type.infer_t.infer_t',V_27A_27) = s('type.infer_t.infer_t',V_27B_27))).
fof('thm.infer_eComplete.infer_eComplete_47_prove_ltb', axiom, ![V_27tvs_27, V_27n_27, V_27ls_27]: ((![V_27t_27]: (p(s('bool','happ'(s('fun'('type.ast.t','bool'),'const.typeSystem.check_freevars_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27))),s('type.ast.t',V_27t_27)))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t','happ'(s('fun'('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27),s('type.list.list'('type.infer_t.infer_t'),V_27ls_27))))))),s('type.ast.t',V_27t_27))))))) & ![V_27ts_27]: (p(s('bool','const.list.EVERY_2'(s('fun'('type.ast.t','bool'),'const.typeSystem.check_freevars_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27))),s('type.list.list'('type.ast.t'),V_27ts_27)))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27),s('type.list.list'('type.infer_t.infer_t'),V_27ls_27))))))),s('type.list.list'('type.ast.t'),V_27ts_27)))))))) <=> (![V_27t_27]: (p(s('bool','happ'(s('fun'('type.ast.t','bool'),'const.typeSystem.check_freevars_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27))),s('type.ast.t',V_27t_27)))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t','happ'(s('fun'('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27),s('type.list.list'('type.infer_t.infer_t'),V_27ls_27))))))),s('type.ast.t',V_27t_27))))))) & ![V_27ts_27]: (p(s('bool','const.list.EVERY_2'(s('fun'('type.ast.t','bool'),'const.typeSystem.check_freevars_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27))),s('type.list.list'('type.ast.t'),V_27ts_27)))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27),s('type.list.list'('type.infer_t.infer_t'),V_27ls_27))))))),s('type.list.list'('type.ast.t'),V_27ts_27)))))))))).
fof('thm.infer_eComplete.infer_eComplete_48_prove_ltb', axiom, ![V_27tvs_27, V_27n_27, V_27ls_27]: ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),V_27ls_27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),V_27ls_27))))) => (![V_27t_27]: (p(s('bool','happ'(s('fun'('type.ast.t','bool'),'const.typeSystem.check_freevars_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27))),s('type.ast.t',V_27t_27)))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t','happ'(s('fun'('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27),s('type.list.list'('type.infer_t.infer_t'),V_27ls_27))))))),s('type.ast.t',V_27t_27))))))) & ![V_27ts_27]: (p(s('bool','const.list.EVERY_2'(s('fun'('type.ast.t','bool'),'const.typeSystem.check_freevars_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27))),s('type.list.list'('type.ast.t'),V_27ts_27)))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.infer_t.infer_t','bool'),'const.infer.check_t_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s('fun'('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.list.list'('type.string.char')),V_27tvs_27),s('type.list.list'('type.infer_t.infer_t'),V_27ls_27))))))),s('type.list.list'('type.ast.t'),V_27ts_27)))))))))).
fof('thm.infer_eComplete.infer_p_complete|split|0', axiom, ![V_27tvs_27, V_27tenvC_27, V_27p_27, V_27t_27, V_27tenvE_27]: (p(s('bool','const.typeSystem.type_p_5'(s('type.num.num',V_27tvs_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),V_27tenvC_27),s('type.ast.pat',V_27p_27),s('type.ast.t',V_27t_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),V_27tenvE_27)))) => ![V_27s_27, V_27st_27, V_27constraints_27]: ((p(s('bool','const.typeSoundInvariants.tenv_ctor_ok_1'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),V_27tenvC_27)))) & (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))) & (p(s('bool','const.infer.sub_completion_5'(s('type.num.num',V_27tvs_27),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))))) & s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))))))) => ?[V_27t_7c39_7c_27, V_27tenv_27, V_27st_7c39_7c_27, V_27s_7c39_7c_27, V_27constraints_7c39_7c_27]: (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer_t.infer_t','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t'))),'type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_p_3'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),V_27tenvC_27),s('type.ast.pat',V_27p_27),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer_t.infer_t','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t'))),'type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer_t.infer_t','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t'))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.pair.prod'('type.infer_t.infer_t','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer_t.infer_t',V_27t_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),V_27tenv_27))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))) & (p(s('bool','const.infer.sub_completion_5'(s('type.num.num',V_27tvs_27),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_7c39_7c_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27)))))))) & (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))) & (p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27),s('type.num.num',V_27tvs_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),V_27tenv_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),V_27tenvE_27)))) & s('type.ast.t',V_27t_27) = s('type.ast.t','const.inferProps.convert_t_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27),s('type.infer_t.infer_t',V_27t_7c39_7c_27)))))))))))))).
fof('thm.infer_eComplete.infer_p_complete|split|1', axiom, ![V_27tvs_27, V_27tenvC_27, V_27ps_27, V_27ts_27, V_27tenvE_27]: (p(s('bool','const.typeSystem.type_ps_5'(s('type.num.num',V_27tvs_27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),V_27tenvC_27),s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.list.list'('type.ast.t'),V_27ts_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),V_27tenvE_27)))) => ![V_27s_27, V_27st_27, V_27constraints_27]: ((p(s('bool','const.typeSoundInvariants.tenv_ctor_ok_1'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),V_27tenvC_27)))) & (p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))) & (p(s('bool','const.infer.sub_completion_5'(s('type.num.num',V_27tvs_27),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27)))))))) & s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))))))))) => ?[V_27ts_7c39_7c_27, V_27tenv_27, V_27st_7c39_7c_27, V_27s_7c39_7c_27, V_27constraints_7c39_7c_27]: (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t'))),'type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_ps_3'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),V_27tenvC_27),s('type.list.list'('type.ast.pat'),V_27ps_27),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_27))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t'))),'type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t'))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t'))),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),V_27tenv_27))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))) & (p(s('bool','const.infer.sub_completion_5'(s('type.num.num',V_27tvs_27),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_7c39_7c_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27)))))))) & (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))) & (p(s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','const.infer_eComplete.simp_tenv_invC_4'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27),s('type.num.num',V_27tvs_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),V_27tenv_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),V_27tenvE_27)))) & s('type.list.list'('type.ast.t'),V_27ts_27) = s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s('fun'('type.infer_t.infer_t','type.ast.t'),'const.combin.o_2'(s('fun'('type.infer_t.infer_t','type.ast.t'),'const.inferProps.convert_t_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.unify.t_walkstar_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))))),s('type.list.list'('type.infer_t.infer_t'),V_27ts_7c39_7c_27)))))))))))).
fof('thm.infer_eComplete.sub_completion_completes', axiom, ![V_27tenvE_27, V_27t_27, V_27s_27, V_27n_27]: ((p(s('bool','const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27)))) & (p(s('bool','const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num',V_27n_27))),s('type.infer_t.infer_t',V_27t_27)))) & (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.count_1'(s('type.num.num',V_27n_27))) & ![V_27uv_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27uv_27),s('type.num.num',V_27n_27)))) => p(s('bool','const.infer.check_t_3'(s('type.num.num','const.typeSystem.num_tvs_1'(s('type.typeSystem.tenv_val',V_27tenvE_27))),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27uv_27)))))))))))) => p(s('bool','const.infer.check_t_3'(s('type.num.num','const.typeSystem.num_tvs_1'(s('type.typeSystem.tenv_val',V_27tenvE_27))),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_27),s('type.infer_t.infer_t',V_27t_27)))))))).
fof('thm.infer_eComplete.infer_eComplete_5|49|_prove_ltb', axiom, ![V_27x_27, V_27tenvE_27, V_27tenv_27]: s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),V_27x_27),s('type.num.num','const.num.|48|_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),V_27tenv_27),s('type.typeSystem.tenv_val',V_27tenvE_27))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.option_CASE_3'(s('type.option.option'('type.ast.t'),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),V_27tenv_27),s('type.list.list'('type.string.char'),V_27x_27))),s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),V_27x_27),s('type.num.num','const.num.|48|_0'),s('type.typeSystem.tenv_val',V_27tenvE_27))),s('fun'('type.ast.t','type.option.option'('type.pair.prod'('type.num.num','type.ast.t'))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.ast.t'),'type.option.option'('type.pair.prod'('type.num.num','type.ast.t'))),'const.option.SOME_0'),s('fun'('type.ast.t','type.pair.prod'('type.num.num','type.ast.t')),'const.pair.,_1'(s('type.num.num','const.num.|48|_0')))))))).
fof('ARITY_0_3_const.inferProps.tenv_invC', axiom, ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.typeSystem.tenv_val','bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'fun'('type.typeSystem.tenv_val','bool')),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'fun'('type.typeSystem.tenv_val','bool'))),'const.inferProps.tenv_invC_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),VV1))),s('type.typeSystem.tenv_val',VV2))) = s('bool','const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),VV1),s('type.typeSystem.tenv_val',VV2)))).
fof('ARITY_0_5_const.infer.sub_completion', axiom, ![VV0, VV1, VV2, VV3, VV4]: s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))),'happ'(s('fun'('type.num.num','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))))),'const.infer.sub_completion_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),VV3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV4))) = s('bool','const.infer.sub_completion_5'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),VV3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV4)))).
fof('ARITY_0_1_const.infer.check_menv', axiom, ![V_27A_27,V_27B_27]: ![VV0]: s('bool','happ'(s('fun'('type.finite_map.fmap'(V_27A_27,'type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'bool'),'const.infer.check_menv_0'),s('type.finite_map.fmap'(V_27A_27,'type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),VV0))) = s('bool','const.infer.check_menv_1'(s('type.finite_map.fmap'(V_27A_27,'type.list.list'('type.pair.prod'(V_27B_27,'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),VV0)))).
fof('ARITY_0_1_const.infer.infer_st_next_uvar', axiom, ![V_27A_27]: ![VV0]: s('type.num.num','happ'(s('fun'('type.infer.infer_st'(V_27A_27),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('type.infer.infer_st'(V_27A_27),VV0))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(V_27A_27),VV0)))).
fof('ARITY_0_2_const.unify.t_compat', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.unify.t_compat_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV1))) = s('bool','const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),VV1)))).
fof('ARITY_0_2_const.infer.check_env', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'bool'),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'bool')),'const.infer.check_env_0'),s('fun'('type.num.num','bool'),VV0))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),VV1))) = s('bool','const.infer.check_env_2'(s('fun'('type.num.num','bool'),VV0),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),VV1)))).
fof('ARITY_0_1_const.typeSystem.num_tvs', axiom, ![VV0]: s('type.num.num','happ'(s('fun'('type.typeSystem.tenv_val','type.num.num'),'const.typeSystem.num_tvs_0'),s('type.typeSystem.tenv_val',VV0))) = s('type.num.num','const.typeSystem.num_tvs_1'(s('type.typeSystem.tenv_val',VV0)))).
fof('_dst_x00000x11011x11110_ax', axiom, ![VA,VA5,VA6,VA2,VA3,VA4,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11011x11110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,VA6)))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1011x1110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,VA6))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,VA6)))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000x100111x011110_ax', axiom, ![VA,VA6,VA7,VA1,VA2,VA3,VA4,VA5,VA8]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x100111x011110_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7)))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x00111x11110_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA7))),'happ'(s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7)))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),V__1)))).
fof('_dst_x0000000x0111100x1001111_ax', axiom, ![VA,VA2,VA3,VA8,VA4,VA5,VA6,VA7,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x0111100x1001111_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),V__0),s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111100x001111_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),V__0),s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9)))),'happ'(s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x00111100x11001111_ax', axiom, ![VA,VA3,VA4,VA9,VA2,VA5,VA6,VA7,VA8,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x00111100x11001111_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10)))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x0111100x1001111_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))),V__0),s('fun'(VA2,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10)))))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000000x100111100x011001111_ax', axiom, ![VA,VA4,VA5,VA10,VA1,VA2,VA3,VA6,VA7,VA8,VA9,VA11]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))))),'_dst_x000000000x100111100x011001111_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA10))))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA11)))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'_dst_x00000000x00111100x11001111_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA10)))),'happ'(s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA10))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA11)))))),V__1)))).
fof('thm.infer_eComplete.infer_eComplete_52_prove_ltb', conjecture, ![V_27uvar_27, V_27tenv_27, V_27t2_7c39_7c_27, V_27t2_27, V_27t_7c49_7c_7c39_7c_27, V_27t_7c49_7c_27, V_27ienv_27, V_27pes_27, V_27st_7c39_7c_27, V_27constraints_7c39_7c_27, V_27s_7c39_7c_27]: ((~ (s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27) = s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.NIL_0')) & (p(s('bool','const.typeSoundInvariants.tenv_ctor_ok_1'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),'const.typeSystem.type_environment_c_1'(s('type.typeSystem.type_environment',V_27tenv_27)))))) & (s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),'happ'(s('fun'('type.infer.inf_environment','type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'const.infer.inf_environment_inf_c_0'),s('type.infer.inf_environment',V_27ienv_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),'const.typeSystem.type_environment_c_1'(s('type.typeSystem.type_environment',V_27tenv_27))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27)))))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'bool'),'const.infer.check_menv_0'),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'happ'(s('fun'('type.infer.inf_environment','type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))),'const.infer.inf_environment_inf_m_0'),s('type.infer.inf_environment',V_27ienv_27)))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'bool'),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'bool')),'const.infer.check_env_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('type.num.num',V_27uvar_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'happ'(s('fun'('type.infer.inf_environment','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'const.infer.inf_environment_inf_v_0'),s('type.infer.inf_environment',V_27ienv_27)))))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27uvar_27),s('type.num.num','happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27)))))) & (p(s('bool','happ'(s('fun'('type.typeSystem.tenv_val','bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'fun'('type.typeSystem.tenv_val','bool')),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'fun'('type.typeSystem.tenv_val','bool'))),'const.inferProps.tenv_invC_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'happ'(s('fun'('type.infer.inf_environment','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'const.infer.inf_environment_inf_v_0'),s('type.infer.inf_environment',V_27ienv_27))))),s('type.typeSystem.tenv_val','const.typeSystem.type_environment_v_1'(s('type.typeSystem.type_environment',V_27tenv_27)))))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'bool'),'happ'(s('fun'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'fun'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'bool')),'const.inferProps.menv_alpha_0'),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'happ'(s('fun'('type.infer.inf_environment','type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))),'const.infer.inf_environment_inf_m_0'),s('type.infer.inf_environment',V_27ienv_27))))),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.typeSystem.type_environment_m_1'(s('type.typeSystem.type_environment',V_27tenv_27)))))) & (p(s('bool','const.bool.RES_FORALL_2'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'bool'),'bool'),'?_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'bool'),'const.list.ALL_DISTINCT_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x0x1x0_3'(s('fun'('type.ast.pat','fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char')))),'const.ast.pat_bindings_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.ast.pat'),'const.pair.FST_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'bool')),'_dst_x0x1x0_3'(s('fun'('type.ast.pat','fun'('type.ast.t','fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'bool'))),'const.typeSystem.type_p_2'(s('type.num.num','happ'(s('fun'('type.typeSystem.tenv_val','type.num.num'),'const.typeSystem.num_tvs_0'),s('type.typeSystem.tenv_val','const.typeSystem.type_environment_v_1'(s('type.typeSystem.type_environment',V_27tenv_27))))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),'const.typeSystem.type_environment_c_1'(s('type.typeSystem.type_environment',V_27tenv_27))))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.ast.pat'),'const.pair.FST_0'),s('type.ast.t',V_27t_7c49_7c_27))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'bool')),'_dst_x00x01x10x00_4'(s('fun'('type.typeSystem.type_environment','fun'('type.ast.exp','fun'('type.ast.t','bool'))),'const.typeSystem.type_e_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'type.typeSystem.type_environment'),'_dst_x0x1x0_3'(s('fun'('fun'('type.typeSystem.tenv_val','type.typeSystem.tenv_val'),'fun'('type.typeSystem.type_environment','type.typeSystem.type_environment')),'const.typeSystem.type_environment_v_fupd_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.typeSystem.tenv_val','type.typeSystem.tenv_val')),'_dst_x0x1_2'(s('fun'('type.typeSystem.tenv_val','fun'('type.typeSystem.tenv_val','type.typeSystem.tenv_val')),'const.combin.K_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'type.typeSystem.tenv_val'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.typeSystem.tenv_val','type.typeSystem.tenv_val')),'const.typeSystem.bind_var_list_1'(s('type.num.num','const.num.|48|_0'))),s('type.typeSystem.tenv_val','const.typeSystem.type_environment_v_1'(s('type.typeSystem.type_environment',V_27tenv_27))))))),s('type.typeSystem.type_environment',V_27tenv_27))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.ast.exp'),'const.pair.SND_0'),s('type.ast.t',V_27t2_27))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.infer.inf_environment','bool'),'bool'),'!_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'),'bool'),'!_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'),'bool'),'!_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool')))))),'_dst_x000000x011111x111110_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x00100x11111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.infer.inf_environment','bool'),'_dst_x0x1_2'(s('fun'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'bool'),'const.infer.check_menv_0'),s('fun'('type.infer.inf_environment','type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))),'const.infer.inf_environment_inf_m_0'))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x00100x11111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.infer.inf_environment','bool'),'_dst_x0x1x0_3'(s('fun'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'fun'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'bool')),'const.inferProps.menv_alpha_0'),s('fun'('type.infer.inf_environment','type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))),'const.infer.inf_environment_inf_m_0'),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.typeSystem.type_environment_m_1'(s('type.typeSystem.type_environment',V_27tenv_27))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x00100x11111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.infer.inf_environment','bool'),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),'bool')),'=_0'),s('fun'('type.infer.inf_environment','type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'const.infer.inf_environment_inf_c_0'),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),'const.typeSystem.type_environment_c_1'(s('type.typeSystem.type_environment',V_27tenv_27))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x00010x11111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'),'_dst_x0x1_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'const.unify.t_wfs_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x00110x11111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool')),'_dst_x00x01x10_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'bool')),'const.infer.check_env_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'))),s('fun'('type.infer.inf_environment','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'const.infer.inf_environment_inf_v_0'))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x00010x11111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'const.pred_set.SUBSET_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x11011x11110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool')))),'_dst_x1011x0100_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')))),'_dst_x00x10x01x01_4'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))))),'const.infer.sub_completion_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.typeSystem.tenv_val','type.num.num'),'const.typeSystem.num_tvs_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'type.typeSystem.tenv_val'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.typeSystem.tenv_val','type.typeSystem.tenv_val')),'const.typeSystem.bind_var_list_1'(s('type.num.num','const.num.|48|_0'))),s('type.typeSystem.tenv_val','const.typeSystem.type_environment_v_1'(s('type.typeSystem.type_environment',V_27tenv_27))))))),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'_i_0_0'))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool')))),'_dst_x0000x0101x1110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool')),'_dst_x00x10x01_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','bool'))),'_dst_x000x010x001x100_4'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'fun'('type.typeSystem.tenv_val','bool'))),'const.inferProps.tenv_invC_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'_i_0_0'),s('fun'('type.infer.inf_environment','type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),'const.infer.inf_environment_inf_v_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'type.typeSystem.tenv_val'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.typeSystem.tenv_val','type.typeSystem.tenv_val')),'const.typeSystem.bind_var_list_1'(s('type.num.num','const.num.|48|_0'))),s('type.typeSystem.tenv_val','const.typeSystem.type_environment_v_1'(s('type.typeSystem.type_environment',V_27tenv_27))))))))))))))))))))))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'?_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.infer_t.infer_t','bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'),'bool'),'?_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.infer_t.infer_t','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'bool'),'?_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.infer_t.infer_t','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')))))))),'_dst_x00000000x11111111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'),'bool'),'?_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.infer_t.infer_t','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool'))))))))),'_dst_x000000000x100111100x011001111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.infer_t.infer_t','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'))))),'_dst_x00000x11100x00011_3'(s('fun'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'fun'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'bool')),'=_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'fun'('type.infer.inf_environment','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'_dst_x01x10_2'(s('fun'('type.infer.inf_environment','fun'('type.ast.exp','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'const.infer.infer_e_0'),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.ast.exp'),'const.pair.SND_0'))),s('fun'('type.infer_t.infer_t','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'_dst_x0x1_2'(s('fun'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.pair.,_0'),s('fun'('type.infer_t.infer_t','type.infer.exc'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'const.infer.Success_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool')))))),'_dst_x000000x100111x011110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'bool')))),'_dst_x1101x0010_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')))),'_dst_x00x10x01x01_4'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))))),'const.infer.sub_completion_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.typeSystem.tenv_val','type.num.num'),'const.typeSystem.num_tvs_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'type.typeSystem.tenv_val'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),'fun'('type.typeSystem.tenv_val','type.typeSystem.tenv_val')),'const.typeSystem.bind_var_list_1'(s('type.num.num','const.num.|48|_0'))),s('type.typeSystem.tenv_val','const.typeSystem.type_environment_v_1'(s('type.typeSystem.type_environment',V_27tenv_27))))))),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'_i_0_0'))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')))),'_dst_x0000x0010x1111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'bool'),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'const.pred_set.SUBSET_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'))))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')))),'_dst_x0000x0011x1101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x00x01x10_3'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'=_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'))))),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))),'_dst_x000x101x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.unify.t_compat_0'),s('fun'('type.infer_t.infer_t','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('type.ast.t','bool'),'happ'(s('fun'('type.ast.t','fun'('type.ast.t','bool')),'=_0'),s('type.ast.t',V_27t2_27))),s('fun'('type.infer_t.infer_t','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.ast.t')),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.ast.t'),'const.inferProps.convert_t_0'),s('fun'('type.infer_t.infer_t','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.infer_t.infer_t')),'_dst_x01x10_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'_i_0_0')))))))))))))))))))))))))))))))))))))))))))))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))),'happ'(s('fun'('type.num.num','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))))),'const.infer.sub_completion_0'),s('type.num.num','happ'(s('fun'('type.typeSystem.tenv_val','type.num.num'),'const.typeSystem.num_tvs_0'),s('type.typeSystem.tenv_val','const.typeSystem.type_environment_v_1'(s('type.typeSystem.type_environment',V_27tenv_27))))))),s('type.num.num','happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_7c39_7c_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27)))) & (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'const.pred_set.SUBSET_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('type.num.num','happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27)))))))) & (s('fun'('type.num.num','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))) = s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('type.num.num','happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))))) & (s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',V_27t_7c49_7c_27))) = s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))),s('type.infer_t.infer_t',V_27t_7c49_7c_7c39_7c_27))) & s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',V_27t2_27))) = s('type.infer_t.infer_t','happ'(s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))),s('type.infer_t.infer_t',V_27t2_7c39_7c_27))))))))))))))))) => ?[V_27st_7c39_7c_7c39_7c_27, V_27s_7c39_7c_7c39_7c_27, V_27constraints_7c39_7c_7c39_7c_27]: (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_pes_5'(s('type.infer.inf_environment',V_27ienv_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27),s('type.infer_t.infer_t',V_27t_7c49_7c_7c39_7c_27),s('type.infer_t.infer_t',V_27t2_7c39_7c_27),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_27))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'happ'(s('fun'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.pair.,_0'),s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'happ'(s('fun'('type.one.one','type.infer.exc'('type.one.one','type.list.list'('type.string.char'))),'const.infer.Success_0'),s('type.one.one','const.one.one_0'))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_7c39_7c_27))) & (p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))),'happ'(s('fun'('type.num.num','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'))))),'const.infer.sub_completion_0'),s('type.num.num','happ'(s('fun'('type.typeSystem.tenv_val','type.num.num'),'const.typeSystem.num_tvs_0'),s('type.typeSystem.tenv_val','const.typeSystem.type_environment_v_1'(s('type.typeSystem.type_environment',V_27tenv_27))))))),s('type.num.num','happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_7c39_7c_27))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_7c39_7c_27))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),V_27constraints_7c39_7c_7c39_7c_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27)))) & (p(s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'bool')),'const.pred_set.SUBSET_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_7c39_7c_27))))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('type.num.num','happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_7c39_7c_27)))))))) & (s('fun'('type.num.num','bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.num.num','bool')),'const.finite_map.FDOM_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27))) = s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.pred_set.count_0'),s('type.num.num','happ'(s('fun'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.num.num'),'const.infer.infer_st_next_uvar_0'),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),V_27st_7c39_7c_7c39_7c_27))))) & p(s('bool','happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool'),'happ'(s('fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'fun'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'bool')),'const.unify.t_compat_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_27))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),V_27s_7c39_7c_7c39_7c_27)))))))))).
